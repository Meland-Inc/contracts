/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import { UnsignedTransaction } from "ethers/utils/transaction";
import { TypedEventDescription, TypedFunctionDescription } from ".";

interface ERC1967UpgradeUpgradeableInterface extends Interface {
  functions: {};

  events: {
    AdminChanged: TypedEventDescription<{
      encodeTopics([previousAdmin, newAdmin]: [null, null]): string[];
    }>;

    BeaconUpgraded: TypedEventDescription<{
      encodeTopics([beacon]: [string | null]): string[];
    }>;

    Upgraded: TypedEventDescription<{
      encodeTopics([implementation]: [string | null]): string[];
    }>;
  };
}

export class ERC1967UpgradeUpgradeable extends Contract {
  connect(
    signerOrProvider: Signer | Provider | string
  ): ERC1967UpgradeUpgradeable;
  attach(addressOrName: string): ERC1967UpgradeUpgradeable;
  deployed(): Promise<ERC1967UpgradeUpgradeable>;

  on(
    event: EventFilter | string,
    listener: Listener
  ): ERC1967UpgradeUpgradeable;
  once(
    event: EventFilter | string,
    listener: Listener
  ): ERC1967UpgradeUpgradeable;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): ERC1967UpgradeUpgradeable;
  removeAllListeners(
    eventName: EventFilter | string
  ): ERC1967UpgradeUpgradeable;
  removeListener(eventName: any, listener: Listener): ERC1967UpgradeUpgradeable;

  interface: ERC1967UpgradeUpgradeableInterface;

  functions: {};

  filters: {
    AdminChanged(previousAdmin: null, newAdmin: null): EventFilter;

    BeaconUpgraded(beacon: string | null): EventFilter;

    Upgraded(implementation: string | null): EventFilter;
  };

  estimate: {};
}
