{
  "contractName": "Faucet",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "gmAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "limit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20MELD",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20MELD",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_gm",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "recive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reciveAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"gmAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20MELD\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gm\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reciveAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20MELD\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Faucet.sol\":\"Faucet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xd0fc241d70f27a08c43c0c9e5a15d2661a643d8db46c219b2322bef8a34bbdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://272fdc13ea6d62470f1009a1adf0d28b67be2c75415e9f24eee38164dd69fb04\",\"dweb:/ipfs/QmfZDcxQEFdAi1AwMTHozZJrwFoUCEZnbcJcRhqmahuTBR\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x6287586f5e4a103c89d4dda41406136cdf283cc625bd1ebfdf1468aae5bfe449\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30e2e913292e86a9bce50d51882b23ef57ae4c811003ec96cf39b1781f68b202\",\"dweb:/ipfs/QmUXqjyiAHbEMJ4zLfaduWYuVwp1HozqVhtChe9VfdpjoV\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x47852df4456c4b7e2fbda473b1c237f24991d2ceb1c7cba8d90e229bf6add473\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb0411367470219c3994c3401b955531a39852f3ca9434961fc83a72c74ef199\",\"dweb:/ipfs/QmPdnTxHy6kyaXF8ncQ2fwbGjTj9ngCCFDnq1NX2JMBCbn\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xb34b8dc5fbc20d8d7e5ed2fd1a0ed87e1fb024d3ae0c61fd4368565ce733aa7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff7fe6e13cf851da3cdc27c7c4c58249ca6a53765f1bb40a5b8ec87b1b84599\",\"dweb:/ipfs/QmZ7JzzhpEMBgk7p9TVzwXDduvJJQtZhQwF3R1vZ9EdgMP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xc659324888f15893e60410d8b43ee4a9ed24cd5cdc074442837683ddbfdbcfa5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c4a449a96448cec5badf91fec0c437f87f2fa0fef9ab7c179e555ad474c00b2\",\"dweb:/ipfs/QmZZvbpp14FGJ6GM7tbY9WhHhtkW7zjvuvFcGvHZddSvLF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x0c85e40b29481eadb132cb5eb973d27b4567098f4bc257b250ee540d8d309a00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24a403828551f24407f9d90de2736d3a17bde482fa0790b63c52a00b89897fff\",\"dweb:/ipfs/QmWMGs1FTyywkd42jPqhQeyXa5asgnidaHfxk18aJuwWDP\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x23ee0c2d7bcce5d09d40f3a14c91f29000d3a83b8a9c26440cd1b3748a93ea47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f7975f651c46b43acd346786d7cf5f78027d21a2dd694377b271ba97209ada\",\"dweb:/ipfs/QmNS7ppgMivJCJgu6JzEN8MvjWM7ctsDREcNyHTcZzYXRG\"]},\"project:/contracts/Faucet.sol\":{\"keccak256\":\"0xddf3299e876f8fc7e8b9ae6c64a1b0784551e9cfcde9e0096c32301015ef7bac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b4bf1fdbfd4a443ca05225ed4493ee635ac01199fc746b36884de6bd6728fd3\",\"dweb:/ipfs/Qmc7NFroZBZdWhABJDQkx77FLs6gUGqvfj6r2oSfh6wu8m\"]},\"project:/contracts/IMELD.sol\":{\"keccak256\":\"0x351fbc4c3b2ec8f8c2c135d403083eaee6a0210f96329f4c5fa1ee93d7e456b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98e8d974e7c1fd99a020a39cf8cec544b9c92cf4b427a30f18057a8b3eaf882c\",\"dweb:/ipfs/QmdGtV1UrYV31CegnLeYqA6TQ5QLneGkYPMSW5z54mu9tN\"]}},\"version\":1}",
  "bytecode": "0x608060405268056bc75e2d6310000060685534801561001d57600080fd5b506109428061002d6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b146100c5578063a4d66daf146100ef578063aa01ac2214610106578063f2fde38b14610119578063fc0c546a1461012c57600080fd5b80632a8c01c61461009857806335897cad146100a2578063485cc955146100aa578063715018a6146100bd575b600080fd5b6100a061013f565b005b6100a06102ac565b6100a06100b8366004610808565b610475565b6100a061051b565b6033546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100f860655481565b6040519081526020016100e6565b6067546100d2906001600160a01b031681565b6100a0610127366004610841565b610581565b6066546100d2906001600160a01b031681565b6033546001600160a01b031633148061016257506067546001600160a01b031633145b6101a65760405162461bcd60e51b815260206004820152601060248201526f6f6e6c79206f776e6572206f7220676d60801b60448201526064015b60405180910390fd5b6066546040516370a0823160e01b81523060048201526001600160a01b039091169063a9059cbb90339083906370a082319060240160206040518083038186803b1580156101f357600080fd5b505afa158015610207573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022b919061085e565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561027157600080fd5b505af1158015610285573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a99190610877565b50565b6068546066546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b1580156102f257600080fd5b505afa158015610306573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032a919061085e565b1161036e5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015260640161019d565b61037b4262015180610649565b33600090815260696020526040902054106103d85760405162461bcd60e51b815260206004820152601d60248201527f4f6e636520706572206163636f756e7420666f7220323420686f757273000000604482015260640161019d565b60665460685460405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561042857600080fd5b505af115801561043c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104609190610877565b50336000908152606960205260409020429055565b600054610100900460ff168061048e575060005460ff16155b6104aa5760405162461bcd60e51b815260040161019d90610899565b600054610100900460ff161580156104cc576000805461ffff19166101011790555b6104d461065c565b606680546001600160a01b038086166001600160a01b03199283161790925560678054928516929091169190911790558015610516576000805461ff00191690555b505050565b6033546001600160a01b031633146105755760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161019d565b61057f60006106d7565b565b6033546001600160a01b031633146105db5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161019d565b6001600160a01b0381166106405760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161019d565b6102a9816106d7565b600061065582846108e7565b9392505050565b600054610100900460ff1680610675575060005460ff16155b6106915760405162461bcd60e51b815260040161019d90610899565b600054610100900460ff161580156106b3576000805461ffff19166101011790555b6106bb610729565b6106c3610793565b80156102a9576000805461ff001916905550565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1680610742575060005460ff16155b61075e5760405162461bcd60e51b815260040161019d90610899565b600054610100900460ff161580156106c3576000805461ffff191661010117905580156102a9576000805461ff001916905550565b600054610100900460ff16806107ac575060005460ff16155b6107c85760405162461bcd60e51b815260040161019d90610899565b600054610100900460ff161580156107ea576000805461ffff19166101011790555b6106c3336106d7565b6001600160a01b03811681146102a957600080fd5b6000806040838503121561081b57600080fd5b8235610826816107f3565b91506020830135610836816107f3565b809150509250929050565b60006020828403121561085357600080fd5b8135610655816107f3565b60006020828403121561087057600080fd5b5051919050565b60006020828403121561088957600080fd5b8151801515811461065557600080fd5b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60008282101561090757634e487b7160e01b600052601160045260246000fd5b50039056fea264697066735822122034a8505bdaae0d7d079ea04eb1cee50da39caef7a8b42b71ed8e5b6cb290b00564736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b146100c5578063a4d66daf146100ef578063aa01ac2214610106578063f2fde38b14610119578063fc0c546a1461012c57600080fd5b80632a8c01c61461009857806335897cad146100a2578063485cc955146100aa578063715018a6146100bd575b600080fd5b6100a061013f565b005b6100a06102ac565b6100a06100b8366004610808565b610475565b6100a061051b565b6033546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100f860655481565b6040519081526020016100e6565b6067546100d2906001600160a01b031681565b6100a0610127366004610841565b610581565b6066546100d2906001600160a01b031681565b6033546001600160a01b031633148061016257506067546001600160a01b031633145b6101a65760405162461bcd60e51b815260206004820152601060248201526f6f6e6c79206f776e6572206f7220676d60801b60448201526064015b60405180910390fd5b6066546040516370a0823160e01b81523060048201526001600160a01b039091169063a9059cbb90339083906370a082319060240160206040518083038186803b1580156101f357600080fd5b505afa158015610207573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022b919061085e565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561027157600080fd5b505af1158015610285573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a99190610877565b50565b6068546066546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b1580156102f257600080fd5b505afa158015610306573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032a919061085e565b1161036e5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015260640161019d565b61037b4262015180610649565b33600090815260696020526040902054106103d85760405162461bcd60e51b815260206004820152601d60248201527f4f6e636520706572206163636f756e7420666f7220323420686f757273000000604482015260640161019d565b60665460685460405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561042857600080fd5b505af115801561043c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104609190610877565b50336000908152606960205260409020429055565b600054610100900460ff168061048e575060005460ff16155b6104aa5760405162461bcd60e51b815260040161019d90610899565b600054610100900460ff161580156104cc576000805461ffff19166101011790555b6104d461065c565b606680546001600160a01b038086166001600160a01b03199283161790925560678054928516929091169190911790558015610516576000805461ff00191690555b505050565b6033546001600160a01b031633146105755760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161019d565b61057f60006106d7565b565b6033546001600160a01b031633146105db5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161019d565b6001600160a01b0381166106405760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161019d565b6102a9816106d7565b600061065582846108e7565b9392505050565b600054610100900460ff1680610675575060005460ff16155b6106915760405162461bcd60e51b815260040161019d90610899565b600054610100900460ff161580156106b3576000805461ffff19166101011790555b6106bb610729565b6106c3610793565b80156102a9576000805461ff001916905550565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1680610742575060005460ff16155b61075e5760405162461bcd60e51b815260040161019d90610899565b600054610100900460ff161580156106c3576000805461ffff191661010117905580156102a9576000805461ff001916905550565b600054610100900460ff16806107ac575060005460ff16155b6107c85760405162461bcd60e51b815260040161019d90610899565b600054610100900460ff161580156107ea576000805461ffff19166101011790555b6106c3336106d7565b6001600160a01b03811681146102a957600080fd5b6000806040838503121561081b57600080fd5b8235610826816107f3565b91506020830135610836816107f3565b809150509250929050565b60006020828403121561085357600080fd5b8135610655816107f3565b60006020828403121561087057600080fd5b5051919050565b60006020828403121561088957600080fd5b8151801515811461065557600080fd5b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60008282101561090757634e487b7160e01b600052601160045260246000fd5b50039056fea264697066735822122034a8505bdaae0d7d079ea04eb1cee50da39caef7a8b42b71ed8e5b6cb290b00564736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4688:52",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:52",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "71:86:52",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "135:16:52",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "144:1:52",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "147:1:52",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "137:6:52"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "137:12:52"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "137:12:52"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "94:5:52"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "105:5:52"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "120:3:52",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "125:1:52",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "116:3:52"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "116:11:52"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "129:1:52",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "112:3:52"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "112:19:52"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "101:3:52"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "101:31:52"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "91:2:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "91:42:52"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "84:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:50:52"
                  },
                  "nodeType": "YulIf",
                  "src": "81:70:52"
                }
              ]
            },
            "name": "validator_revert_contract_IERC20MELD",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "60:5:52",
                "type": ""
              }
            ],
            "src": "14:143:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "268:325:52",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "314:16:52",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "323:1:52",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "326:1:52",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "316:6:52"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "316:12:52"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "316:12:52"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "289:7:52"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "298:9:52"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "285:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "285:23:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "310:2:52",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "281:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "281:32:52"
                  },
                  "nodeType": "YulIf",
                  "src": "278:52:52"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "339:36:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "365:9:52"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "352:12:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "352:23:52"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "343:5:52",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "421:5:52"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20MELD",
                      "nodeType": "YulIdentifier",
                      "src": "384:36:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "384:43:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "384:43:52"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "436:15:52",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "446:5:52"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "436:6:52"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "460:47:52",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "492:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "503:2:52",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "488:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "488:18:52"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "475:12:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "475:32:52"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "464:7:52",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "553:7:52"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20MELD",
                      "nodeType": "YulIdentifier",
                      "src": "516:36:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "516:45:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "516:45:52"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "570:17:52",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "580:7:52"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "570:6:52"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20MELD_$5227t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "226:9:52",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "237:7:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "249:6:52",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "257:6:52",
                "type": ""
              }
            ],
            "src": "162:431:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "699:102:52",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "709:26:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "721:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "732:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "717:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "717:18:52"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "709:4:52"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "751:9:52"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "766:6:52"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "782:3:52",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "787:1:52",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "778:3:52"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "778:11:52"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "791:1:52",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "774:3:52"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "774:19:52"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "762:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "762:32:52"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "744:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "744:51:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "744:51:52"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "668:9:52",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "679:6:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "690:4:52",
                "type": ""
              }
            ],
            "src": "598:203:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "907:76:52",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "917:26:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "929:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "940:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "925:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "925:18:52"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "917:4:52"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "959:9:52"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "970:6:52"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "952:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "952:25:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "952:25:52"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "876:9:52",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "887:6:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "898:4:52",
                "type": ""
              }
            ],
            "src": "806:177:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1058:189:52",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1104:16:52",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1113:1:52",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1116:1:52",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1106:6:52"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1106:12:52"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1106:12:52"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1079:7:52"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1088:9:52"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1075:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1075:23:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1100:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1071:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1071:32:52"
                  },
                  "nodeType": "YulIf",
                  "src": "1068:52:52"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1129:36:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1155:9:52"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1142:12:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1142:23:52"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1133:5:52",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1211:5:52"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20MELD",
                      "nodeType": "YulIdentifier",
                      "src": "1174:36:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1174:43:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1174:43:52"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1226:15:52",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1236:5:52"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1226:6:52"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1024:9:52",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1035:7:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1047:6:52",
                "type": ""
              }
            ],
            "src": "988:259:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1372:102:52",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1382:26:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1394:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1405:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1390:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1390:18:52"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1382:4:52"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1424:9:52"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1439:6:52"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1455:3:52",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1460:1:52",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1451:3:52"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1451:11:52"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1464:1:52",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1447:3:52"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1447:19:52"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1435:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1435:32:52"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1417:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1417:51:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1417:51:52"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20MELD_$5227__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1341:9:52",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1352:6:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1363:4:52",
                "type": ""
              }
            ],
            "src": "1252:222:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1653:166:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1670:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1681:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1663:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1663:21:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1663:21:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1704:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1715:2:52",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1700:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1700:18:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1720:2:52",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1693:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1693:30:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1693:30:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1743:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1754:2:52",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1739:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1739:18:52"
                      },
                      {
                        "hexValue": "6f6e6c79206f776e6572206f7220676d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1759:18:52",
                        "type": "",
                        "value": "only owner or gm"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1732:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1732:46:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1732:46:52"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1787:26:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1799:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1810:2:52",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1795:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1795:18:52"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1787:4:52"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_aa786c7eff684954605e0b0bcfe270c9d75f20dcbe6c98891ffa24972743eb08__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1630:9:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1644:4:52",
                "type": ""
              }
            ],
            "src": "1479:340:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1905:103:52",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1951:16:52",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1960:1:52",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1963:1:52",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1953:6:52"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1953:12:52"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1953:12:52"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1926:7:52"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1935:9:52"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1922:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1922:23:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1947:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1918:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1918:32:52"
                  },
                  "nodeType": "YulIf",
                  "src": "1915:52:52"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1976:26:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1992:9:52"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1986:5:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1986:16:52"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1976:6:52"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1871:9:52",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1882:7:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1894:6:52",
                "type": ""
              }
            ],
            "src": "1824:184:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2142:145:52",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2152:26:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2164:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2175:2:52",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2160:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2160:18:52"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2152:4:52"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2194:9:52"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2209:6:52"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2225:3:52",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2230:1:52",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2221:3:52"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2221:11:52"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2234:1:52",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2217:3:52"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2217:19:52"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2205:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2205:32:52"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2187:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2187:51:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2187:51:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2258:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2269:2:52",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2254:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2254:18:52"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2274:6:52"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2247:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2247:34:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2247:34:52"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2103:9:52",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2114:6:52",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2122:6:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2133:4:52",
                "type": ""
              }
            ],
            "src": "2013:274:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2370:199:52",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2416:16:52",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2425:1:52",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2428:1:52",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2418:6:52"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2418:12:52"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2418:12:52"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2391:7:52"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2400:9:52"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2387:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2387:23:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2412:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2383:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2383:32:52"
                  },
                  "nodeType": "YulIf",
                  "src": "2380:52:52"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2441:29:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2460:9:52"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2454:5:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2454:16:52"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2445:5:52",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2523:16:52",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2532:1:52",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2535:1:52",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2525:6:52"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2525:12:52"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2525:12:52"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2492:5:52"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2513:5:52"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2506:6:52"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2506:13:52"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2499:6:52"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2499:21:52"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2489:2:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2489:32:52"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2482:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2482:40:52"
                  },
                  "nodeType": "YulIf",
                  "src": "2479:60:52"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2548:15:52",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2558:5:52"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2548:6:52"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2336:9:52",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2347:7:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2359:6:52",
                "type": ""
              }
            ],
            "src": "2292:277:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2748:170:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2765:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2776:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2758:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2758:21:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2758:21:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2799:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2810:2:52",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2795:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2795:18:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2815:2:52",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2788:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2788:30:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2788:30:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2838:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2849:2:52",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2834:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2834:18:52"
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2854:22:52",
                        "type": "",
                        "value": "Insufficient balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2827:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2827:50:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2827:50:52"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2886:26:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2898:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2909:2:52",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2894:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2894:18:52"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2886:4:52"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2725:9:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2739:4:52",
                "type": ""
              }
            ],
            "src": "2574:344:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3097:179:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3114:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3125:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3107:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3107:21:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3107:21:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3148:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3159:2:52",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3144:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3144:18:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3164:2:52",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3137:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3137:30:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3137:30:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3187:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3198:2:52",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3183:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3183:18:52"
                      },
                      {
                        "hexValue": "4f6e636520706572206163636f756e7420666f7220323420686f757273",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3203:31:52",
                        "type": "",
                        "value": "Once per account for 24 hours"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3176:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3176:59:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3176:59:52"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3244:26:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3256:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3267:2:52",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3252:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3252:18:52"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3244:4:52"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c6d3aed036b1ab588661403af58ee477fe9ec8c9f0ad4d4f5e3fe8675fc3565d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3074:9:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3088:4:52",
                "type": ""
              }
            ],
            "src": "2923:353:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3455:236:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3472:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3483:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3465:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3465:21:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3465:21:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3506:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3517:2:52",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3502:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3502:18:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3522:2:52",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3495:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3495:30:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3495:30:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3545:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3556:2:52",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3541:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3541:18:52"
                      },
                      {
                        "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3561:34:52",
                        "type": "",
                        "value": "Initializable: contract is alrea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3534:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3534:62:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3534:62:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3616:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3627:2:52",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3612:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3612:18:52"
                      },
                      {
                        "hexValue": "647920696e697469616c697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3632:16:52",
                        "type": "",
                        "value": "dy initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3605:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3605:44:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3605:44:52"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3658:27:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3670:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3681:3:52",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3666:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3666:19:52"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3658:4:52"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3432:9:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3446:4:52",
                "type": ""
              }
            ],
            "src": "3281:410:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3870:182:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3887:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3898:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3880:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3880:21:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3880:21:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3921:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3932:2:52",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3917:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3917:18:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3937:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3910:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3910:30:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3910:30:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3960:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3971:2:52",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3956:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3956:18:52"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3976:34:52",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3949:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3949:62:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3949:62:52"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4020:26:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4032:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4043:2:52",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4028:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4028:18:52"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4020:4:52"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3847:9:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3861:4:52",
                "type": ""
              }
            ],
            "src": "3696:356:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4231:228:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4248:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4259:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4241:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4241:21:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4241:21:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4282:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4293:2:52",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4278:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4278:18:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4298:2:52",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4271:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4271:30:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4271:30:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4321:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4332:2:52",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4317:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4317:18:52"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4337:34:52",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4310:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4310:62:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4310:62:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4392:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4403:2:52",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4388:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4388:18:52"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4408:8:52",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4381:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4381:36:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4381:36:52"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4426:27:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4438:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4449:3:52",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4434:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4434:19:52"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4426:4:52"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4208:9:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4222:4:52",
                "type": ""
              }
            ],
            "src": "4057:402:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4513:173:52",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4543:111:52",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4564:1:52",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4571:3:52",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4576:10:52",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "4567:3:52"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4567:20:52"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4557:6:52"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4557:31:52"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4557:31:52"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4608:1:52",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4611:4:52",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4601:6:52"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4601:15:52"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4601:15:52"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4636:1:52",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4639:4:52",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4629:6:52"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4629:15:52"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4629:15:52"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4529:1:52"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4532:1:52"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4526:2:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4526:8:52"
                  },
                  "nodeType": "YulIf",
                  "src": "4523:131:52"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4663:17:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4675:1:52"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4678:1:52"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4671:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4671:9:52"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "4663:4:52"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4495:1:52",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4498:1:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "4504:4:52",
                "type": ""
              }
            ],
            "src": "4464:222:52"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_contract_IERC20MELD(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IERC20MELD_$5227t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20MELD(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_IERC20MELD(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20MELD(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_IERC20MELD_$5227__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_aa786c7eff684954605e0b0bcfe270c9d75f20dcbe6c98891ffa24972743eb08__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"only owner or gm\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c6d3aed036b1ab588661403af58ee477fe9ec8c9f0ad4d4f5e3fe8675fc3565d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Once per account for 24 hours\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        diff := sub(x, y)\n    }\n}",
      "id": 52,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "364:1018:31:-:0;;;571:12;540:43;;364:1018;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "364:1018:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1189:191;;;:::i;:::-;;817:342;;;:::i;636:175::-;;;;;;:::i;:::-;;:::i;1934:101:2:-;;;:::i;1302:85::-;1374:6;;-1:-1:-1;;;;;1374:6:2;1302:85;;;-1:-1:-1;;;;;762:32:52;;;744:51;;732:2;717:18;1302:85:2;;;;;;;;408:20:31;;;;;;;;;952:25:52;;;940:2;925:18;408:20:31;806:177:52;509:24:31;;;;;-1:-1:-1;;;;;509:24:31;;;2184:198:2;;;;;;:::i;:::-;;:::i;479:23:31:-;;;;;-1:-1:-1;;;;;479:23:31;;;1189:191;1374:6:2;;-1:-1:-1;;;;;1374:6:2;1236:10:31;:21;;:48;;-1:-1:-1;1275:9:31;;-1:-1:-1;;;;;1275:9:31;1261:10;:23;1236:48;1228:77;;;;-1:-1:-1;;;1228:77:31;;1681:2:52;1228:77:31;;;1663:21:52;1720:2;1700:18;;;1693:30;-1:-1:-1;;;1739:18:52;;;1732:46;1795:18;;1228:77:31;;;;;;;;;1315:5;;1342:30;;-1:-1:-1;;;1342:30:31;;1366:4;1342:30;;;744:51:52;-1:-1:-1;;;;;1315:5:31;;;;:14;;1330:10;;1315:5;;1342:15;;717:18:52;;1342:30:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1315:58;;-1:-1:-1;;;;;;1315:58:31;;;;;;;-1:-1:-1;;;;;2205:32:52;;;1315:58:31;;;2187:51:52;2254:18;;;2247:34;2160:18;;1315:58:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1189:191::o;817:342::-;893:20;;860:5;;:30;;-1:-1:-1;;;860:30:31;;884:4;860:30;;;744:51:52;-1:-1:-1;;;;;860:5:31;;;;:15;;717:18:52;;860:30:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;852:86;;;;-1:-1:-1;;;852:86:31;;2776:2:52;852:86:31;;;2758:21:52;2815:2;2795:18;;;2788:30;-1:-1:-1;;;2834:18:52;;;2827:50;2894:18;;852:86:31;2574:344:52;852:86:31;982:26;:15;1002:5;982:19;:26::i;:::-;968:10;956:23;;;;:11;:23;;;;;;:52;948:94;;;;-1:-1:-1;;;948:94:31;;3125:2:52;948:94:31;;;3107:21:52;3164:2;3144:18;;;3137:30;3203:31;3183:18;;;3176:59;3252:18;;948:94:31;2923:353:52;948:94:31;1053:5;;1080:20;;1053:48;;-1:-1:-1;;;1053:48:31;;1068:10;1053:48;;;2187:51:52;2254:18;;;2247:34;;;;-1:-1:-1;;;;;1053:5:31;;;;:14;;2160:18:52;;1053:48:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1123:10:31;1111:23;;;;:11;:23;;;;;1137:15;1111:41;;817:342::o;636:175::-;2030:13:5;;;;;;;;:30;;-1:-1:-1;2048:12:5;;;;2047:13;2030:30;2022:89;;;;-1:-1:-1;;;2022:89:5;;;;;;;:::i;:::-;2122:19;2145:13;;;;;;2144:14;2168:98;;;;2202:13;:20;;-1:-1:-1;;2236:19:5;;;;;2168:98;739:16:31::1;:14;:16::i;:::-;765:5;:14:::0;;-1:-1:-1;;;;;765:14:31;;::::1;-1:-1:-1::0;;;;;;765:14:31;;::::1;;::::0;;;789:9:::1;:15:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;2288:66:5;;;;2338:5;2322:21;;-1:-1:-1;;2322:21:5;;;2288:66;2012:348;636:175:31;;:::o;1934:101:2:-;1374:6;;-1:-1:-1;;;;;1374:6:2;955:10:20;1514:23:2;1506:68;;;;-1:-1:-1;;;1506:68:2;;3898:2:52;1506:68:2;;;3880:21:52;;;3917:18;;;3910:30;3976:34;3956:18;;;3949:62;4028:18;;1506:68:2;3696:356:52;1506:68:2;1998:30:::1;2025:1;1998:18;:30::i;:::-;1934:101::o:0;2184:198::-;1374:6;;-1:-1:-1;;;;;1374:6:2;955:10:20;1514:23:2;1506:68;;;;-1:-1:-1;;;1506:68:2;;3898:2:52;1506:68:2;;;3880:21:52;;;3917:18;;;3910:30;3976:34;3956:18;;;3949:62;4028:18;;1506:68:2;3696:356:52;1506:68:2;-1:-1:-1;;;;;2272:22:2;::::1;2264:73;;;::::0;-1:-1:-1;;;2264:73:2;;4259:2:52;2264:73:2::1;::::0;::::1;4241:21:52::0;4298:2;4278:18;;;4271:30;4337:34;4317:18;;;4310:62;-1:-1:-1;;;4388:18:52;;;4381:36;4434:19;;2264:73:2::1;4057:402:52::0;2264:73:2::1;2347:28;2366:8;2347:18;:28::i;3119:96:26:-:0;3177:7;3203:5;3207:1;3203;:5;:::i;:::-;3196:12;3119:96;-1:-1:-1;;;3119:96:26:o;988:126:2:-;2030:13:5;;;;;;;;:30;;-1:-1:-1;2048:12:5;;;;2047:13;2030:30;2022:89;;;;-1:-1:-1;;;2022:89:5;;;;;;;:::i;:::-;2122:19;2145:13;;;;;;2144:14;2168:98;;;;2202:13;:20;;-1:-1:-1;;2236:19:5;;;;;2168:98;1045:26:2::1;:24;:26::i;:::-;1081;:24;:26::i;:::-;2292:14:5::0;2288:66;;;2338:5;2322:21;;-1:-1:-1;;2322:21:5;;;2012:348;988:126:2:o;2536:187::-;2628:6;;;-1:-1:-1;;;;;2644:17:2;;;-1:-1:-1;;;;;;2644:17:2;;;;;;;2676:40;;2628:6;;;2644:17;2628:6;;2676:40;;2609:16;;2676:40;2599:124;2536:187;:::o;807:64:20:-;2030:13:5;;;;;;;;:30;;-1:-1:-1;2048:12:5;;;;2047:13;2030:30;2022:89;;;;-1:-1:-1;;;2022:89:5;;;;;;;:::i;:::-;2122:19;2145:13;;;;;;2144:14;2168:98;;;;2202:13;:20;;-1:-1:-1;;2236:19:5;;;;;2288:66;;;;2338:5;2322:21;;-1:-1:-1;;2322:21:5;;;2012:348;807:64:20:o;1120:106:2:-;2030:13:5;;;;;;;;:30;;-1:-1:-1;2048:12:5;;;;2047:13;2030:30;2022:89;;;;-1:-1:-1;;;2022:89:5;;;;;;;:::i;:::-;2122:19;2145:13;;;;;;2144:14;2168:98;;;;2202:13;:20;;-1:-1:-1;;2236:19:5;;;;;2168:98;1187:32:2::1;955:10:20::0;1187:18:2::1;:32::i;14:143:52:-:0;-1:-1:-1;;;;;101:31:52;;91:42;;81:70;;147:1;144;137:12;162:431;249:6;257;310:2;298:9;289:7;285:23;281:32;278:52;;;326:1;323;316:12;278:52;365:9;352:23;384:43;421:5;384:43;:::i;:::-;446:5;-1:-1:-1;503:2:52;488:18;;475:32;516:45;475:32;516:45;:::i;:::-;580:7;570:17;;;162:431;;;;;:::o;988:259::-;1047:6;1100:2;1088:9;1079:7;1075:23;1071:32;1068:52;;;1116:1;1113;1106:12;1068:52;1155:9;1142:23;1174:43;1211:5;1174:43;:::i;1824:184::-;1894:6;1947:2;1935:9;1926:7;1922:23;1918:32;1915:52;;;1963:1;1960;1953:12;1915:52;-1:-1:-1;1986:16:52;;1824:184;-1:-1:-1;1824:184:52:o;2292:277::-;2359:6;2412:2;2400:9;2391:7;2387:23;2383:32;2380:52;;;2428:1;2425;2418:12;2380:52;2460:9;2454:16;2513:5;2506:13;2499:21;2492:5;2489:32;2479:60;;2535:1;2532;2525:12;3281:410;3483:2;3465:21;;;3522:2;3502:18;;;3495:30;3561:34;3556:2;3541:18;;3534:62;-1:-1:-1;;;3627:2:52;3612:18;;3605:44;3681:3;3666:19;;3281:410::o;4464:222::-;4504:4;4532:1;4529;4526:8;4523:131;;;4576:10;4571:3;4567:20;4564:1;4557:31;4611:4;4608:1;4601:15;4639:4;4636:1;4629:15;4523:131;-1:-1:-1;4671:9:52;;4464:222::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.9;\n\n// MELD test network faucet.\n\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\";\nimport \"./IMELD.sol\";\n\ncontract Faucet is OwnableUpgradeable\n{\n    uint256 public limit;\n\n    using SafeMathUpgradeable for uint256;\n\n    IERC20MELD public token;\n\n    address public gmAddress;\n\n    uint256 reciveTokenEvertimes = 100 * 10**18;\n\n    mapping(address => uint256) recivedPool;\n\n    function initialize(\n        IERC20MELD _token,\n        address _gm\n    ) public initializer {\n        __Ownable_init();\n        token = _token;\n        gmAddress = _gm;\n    }\n\n    function recive() public {\n        require(token.balanceOf(address(this)) > reciveTokenEvertimes, \"Insufficient balance\");\n        require(recivedPool[msg.sender] < block.timestamp.sub(86400), \"Once per account for 24 hours\");\n\n        token.transfer(msg.sender, reciveTokenEvertimes);\n        recivedPool[msg.sender] = block.timestamp;\n    }\n\n    // 提取所有MELD\n    function reciveAll() public  {\n        require(msg.sender == owner() || msg.sender == gmAddress, \"only owner or gm\");\n        token.transfer(msg.sender, token.balanceOf(address(this)));\n    }\n}",
  "sourcePath": "/Users/alberthuang/code/icw/meland/contracts/Faucet.sol",
  "ast": {
    "absolutePath": "project:/contracts/Faucet.sol",
    "exportedSymbols": {
      "ContextUpgradeable": [
        3840
      ],
      "ERC20BurnableUpgradeable": [
        1951
      ],
      "ERC20Upgradeable": [
        1786
      ],
      "Faucet": [
        5116
      ],
      "IERC20MELD": [
        5227
      ],
      "IERC20MetadataUpgradeable": [
        1976
      ],
      "IERC20Upgradeable": [
        1864
      ],
      "Initializable": [
        989
      ],
      "OwnableUpgradeable": [
        535
      ],
      "SafeMathUpgradeable": [
        4547
      ]
    },
    "id": 5117,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4987,
        "literals": [
          "solidity",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:31"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "id": 4988,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5117,
        "sourceUnit": 536,
        "src": "86:75:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
        "id": 4989,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5117,
        "sourceUnit": 1952,
        "src": "162:97:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
        "id": 4990,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5117,
        "sourceUnit": 4548,
        "src": "260:80:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/IMELD.sol",
        "file": "./IMELD.sol",
        "id": 4991,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5117,
        "sourceUnit": 5228,
        "src": "341:21:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4992,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 535,
              "src": "383:18:31"
            },
            "id": 4993,
            "nodeType": "InheritanceSpecifier",
            "src": "383:18:31"
          }
        ],
        "canonicalName": "Faucet",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 5116,
        "linearizedBaseContracts": [
          5116,
          535,
          3840,
          989
        ],
        "name": "Faucet",
        "nameLocation": "373:6:31",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "a4d66daf",
            "id": 4995,
            "mutability": "mutable",
            "name": "limit",
            "nameLocation": "423:5:31",
            "nodeType": "VariableDeclaration",
            "scope": 5116,
            "src": "408:20:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4994,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "408:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4998,
            "libraryName": {
              "id": 4996,
              "name": "SafeMathUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4547,
              "src": "441:19:31"
            },
            "nodeType": "UsingForDirective",
            "src": "435:38:31",
            "typeName": {
              "id": 4997,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "465:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 5001,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "497:5:31",
            "nodeType": "VariableDeclaration",
            "scope": 5116,
            "src": "479:23:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20MELD_$5227",
              "typeString": "contract IERC20MELD"
            },
            "typeName": {
              "id": 5000,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4999,
                "name": "IERC20MELD",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5227,
                "src": "479:10:31"
              },
              "referencedDeclaration": 5227,
              "src": "479:10:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20MELD_$5227",
                "typeString": "contract IERC20MELD"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "aa01ac22",
            "id": 5003,
            "mutability": "mutable",
            "name": "gmAddress",
            "nameLocation": "524:9:31",
            "nodeType": "VariableDeclaration",
            "scope": 5116,
            "src": "509:24:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5002,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "509:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 5010,
            "mutability": "mutable",
            "name": "reciveTokenEvertimes",
            "nameLocation": "548:20:31",
            "nodeType": "VariableDeclaration",
            "scope": 5116,
            "src": "540:43:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5004,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "540:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000"
              },
              "id": 5009,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "313030",
                "id": 5005,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "571:3:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100_by_1",
                  "typeString": "int_const 100"
                },
                "value": "100"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "id": 5008,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 5006,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "577:2:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "3138",
                  "id": 5007,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "581:2:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_18_by_1",
                    "typeString": "int_const 18"
                  },
                  "value": "18"
                },
                "src": "577:6:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                }
              },
              "src": "571:12:31",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5014,
            "mutability": "mutable",
            "name": "recivedPool",
            "nameLocation": "618:11:31",
            "nodeType": "VariableDeclaration",
            "scope": 5116,
            "src": "590:39:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 5013,
              "keyType": {
                "id": 5011,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "598:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "590:27:31",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 5012,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "609:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5035,
              "nodeType": "Block",
              "src": "729:82:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5024,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 439,
                      "src": "739:14:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "739:16:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5026,
                  "nodeType": "ExpressionStatement",
                  "src": "739:16:31"
                },
                {
                  "expression": {
                    "id": 5029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5027,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5001,
                      "src": "765:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20MELD_$5227",
                        "typeString": "contract IERC20MELD"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5028,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5017,
                      "src": "773:6:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20MELD_$5227",
                        "typeString": "contract IERC20MELD"
                      }
                    },
                    "src": "765:14:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20MELD_$5227",
                      "typeString": "contract IERC20MELD"
                    }
                  },
                  "id": 5030,
                  "nodeType": "ExpressionStatement",
                  "src": "765:14:31"
                },
                {
                  "expression": {
                    "id": 5033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5031,
                      "name": "gmAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5003,
                      "src": "789:9:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5032,
                      "name": "_gm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5019,
                      "src": "801:3:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "789:15:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5034,
                  "nodeType": "ExpressionStatement",
                  "src": "789:15:31"
                }
              ]
            },
            "functionSelector": "485cc955",
            "id": 5036,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5022,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5021,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 988,
                  "src": "717:11:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "717:11:31"
              }
            ],
            "name": "initialize",
            "nameLocation": "645:10:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5017,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "676:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 5036,
                  "src": "665:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20MELD_$5227",
                    "typeString": "contract IERC20MELD"
                  },
                  "typeName": {
                    "id": 5016,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5015,
                      "name": "IERC20MELD",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5227,
                      "src": "665:10:31"
                    },
                    "referencedDeclaration": 5227,
                    "src": "665:10:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20MELD_$5227",
                      "typeString": "contract IERC20MELD"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5019,
                  "mutability": "mutable",
                  "name": "_gm",
                  "nameLocation": "700:3:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 5036,
                  "src": "692:11:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "655:54:31"
            },
            "returnParameters": {
              "id": 5023,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "729:0:31"
            },
            "scope": 5116,
            "src": "636:175:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5082,
              "nodeType": "Block",
              "src": "842:317:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 5044,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "884:4:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Faucet_$5116",
                                    "typeString": "contract Faucet"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Faucet_$5116",
                                    "typeString": "contract Faucet"
                                  }
                                ],
                                "id": 5043,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "876:7:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 5042,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "876:7:31",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 5045,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "876:13:31",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 5040,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5001,
                              "src": "860:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20MELD_$5227",
                                "typeString": "contract IERC20MELD"
                              }
                            },
                            "id": 5041,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1803,
                            "src": "860:15:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 5046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "860:30:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 5047,
                          "name": "reciveTokenEvertimes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5010,
                          "src": "893:20:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "860:53:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e6365",
                        "id": 5049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "915:22:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        },
                        "value": "Insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        }
                      ],
                      "id": 5039,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "852:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "852:86:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5051,
                  "nodeType": "ExpressionStatement",
                  "src": "852:86:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 5053,
                            "name": "recivedPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5014,
                            "src": "956:11:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 5056,
                          "indexExpression": {
                            "expression": {
                              "id": 5054,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "968:3:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5055,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "968:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "956:23:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "3836343030",
                              "id": 5060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1002:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              },
                              "value": "86400"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 5057,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "982:5:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 5058,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "982:15:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 5059,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4426,
                            "src": "982:19:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 5061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "982:26:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "956:52:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e636520706572206163636f756e7420666f7220323420686f757273",
                        "id": 5063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1010:31:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6d3aed036b1ab588661403af58ee477fe9ec8c9f0ad4d4f5e3fe8675fc3565d",
                          "typeString": "literal_string \"Once per account for 24 hours\""
                        },
                        "value": "Once per account for 24 hours"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6d3aed036b1ab588661403af58ee477fe9ec8c9f0ad4d4f5e3fe8675fc3565d",
                          "typeString": "literal_string \"Once per account for 24 hours\""
                        }
                      ],
                      "id": 5052,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "948:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "948:94:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5065,
                  "nodeType": "ExpressionStatement",
                  "src": "948:94:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5069,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1068:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1068:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5071,
                        "name": "reciveTokenEvertimes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5010,
                        "src": "1080:20:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5066,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5001,
                        "src": "1053:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20MELD_$5227",
                          "typeString": "contract IERC20MELD"
                        }
                      },
                      "id": 5068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1813,
                      "src": "1053:14:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1053:48:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5073,
                  "nodeType": "ExpressionStatement",
                  "src": "1053:48:31"
                },
                {
                  "expression": {
                    "id": 5080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5074,
                        "name": "recivedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5014,
                        "src": "1111:11:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5077,
                      "indexExpression": {
                        "expression": {
                          "id": 5075,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1123:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1123:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1111:23:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5078,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1137:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 5079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1137:15:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1111:41:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5081,
                  "nodeType": "ExpressionStatement",
                  "src": "1111:41:31"
                }
              ]
            },
            "functionSelector": "35897cad",
            "id": 5083,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recive",
            "nameLocation": "826:6:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5037,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "832:2:31"
            },
            "returnParameters": {
              "id": 5038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "842:0:31"
            },
            "scope": 5116,
            "src": "817:342:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5114,
              "nodeType": "Block",
              "src": "1218:162:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 5096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 5091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 5087,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1236:3:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1236:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 5089,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 459,
                              "src": "1250:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 5090,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1250:7:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1236:21:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 5095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 5092,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1261:3:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1261:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 5094,
                            "name": "gmAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5003,
                            "src": "1275:9:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1261:23:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1236:48:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79206f776e6572206f7220676d",
                        "id": 5097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1286:18:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa786c7eff684954605e0b0bcfe270c9d75f20dcbe6c98891ffa24972743eb08",
                          "typeString": "literal_string \"only owner or gm\""
                        },
                        "value": "only owner or gm"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa786c7eff684954605e0b0bcfe270c9d75f20dcbe6c98891ffa24972743eb08",
                          "typeString": "literal_string \"only owner or gm\""
                        }
                      ],
                      "id": 5086,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1228:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1228:77:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5099,
                  "nodeType": "ExpressionStatement",
                  "src": "1228:77:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5103,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1330:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1330:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 5109,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1366:4:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Faucet_$5116",
                                  "typeString": "contract Faucet"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Faucet_$5116",
                                  "typeString": "contract Faucet"
                                }
                              ],
                              "id": 5108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1358:7:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 5107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1358:7:31",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 5110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1358:13:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 5105,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5001,
                            "src": "1342:5:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20MELD_$5227",
                              "typeString": "contract IERC20MELD"
                            }
                          },
                          "id": 5106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1803,
                          "src": "1342:15:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 5111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1342:30:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5100,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5001,
                        "src": "1315:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20MELD_$5227",
                          "typeString": "contract IERC20MELD"
                        }
                      },
                      "id": 5102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1813,
                      "src": "1315:14:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1315:58:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5113,
                  "nodeType": "ExpressionStatement",
                  "src": "1315:58:31"
                }
              ]
            },
            "functionSelector": "2a8c01c6",
            "id": 5115,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reciveAll",
            "nameLocation": "1198:9:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1207:2:31"
            },
            "returnParameters": {
              "id": 5085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1218:0:31"
            },
            "scope": 5116,
            "src": "1189:191:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5117,
        "src": "364:1018:31",
        "usedErrors": []
      }
    ],
    "src": "32:1350:31"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Faucet.sol",
    "exportedSymbols": {
      "ContextUpgradeable": [
        3840
      ],
      "ERC20BurnableUpgradeable": [
        1951
      ],
      "ERC20Upgradeable": [
        1786
      ],
      "Faucet": [
        5116
      ],
      "IERC20MELD": [
        5227
      ],
      "IERC20MetadataUpgradeable": [
        1976
      ],
      "IERC20Upgradeable": [
        1864
      ],
      "Initializable": [
        989
      ],
      "OwnableUpgradeable": [
        535
      ],
      "SafeMathUpgradeable": [
        4547
      ]
    },
    "id": 5117,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4987,
        "literals": [
          "solidity",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:31"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "id": 4988,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5117,
        "sourceUnit": 536,
        "src": "86:75:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
        "id": 4989,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5117,
        "sourceUnit": 1952,
        "src": "162:97:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
        "id": 4990,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5117,
        "sourceUnit": 4548,
        "src": "260:80:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/IMELD.sol",
        "file": "./IMELD.sol",
        "id": 4991,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5117,
        "sourceUnit": 5228,
        "src": "341:21:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4992,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 535,
              "src": "383:18:31"
            },
            "id": 4993,
            "nodeType": "InheritanceSpecifier",
            "src": "383:18:31"
          }
        ],
        "canonicalName": "Faucet",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 5116,
        "linearizedBaseContracts": [
          5116,
          535,
          3840,
          989
        ],
        "name": "Faucet",
        "nameLocation": "373:6:31",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "a4d66daf",
            "id": 4995,
            "mutability": "mutable",
            "name": "limit",
            "nameLocation": "423:5:31",
            "nodeType": "VariableDeclaration",
            "scope": 5116,
            "src": "408:20:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4994,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "408:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4998,
            "libraryName": {
              "id": 4996,
              "name": "SafeMathUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4547,
              "src": "441:19:31"
            },
            "nodeType": "UsingForDirective",
            "src": "435:38:31",
            "typeName": {
              "id": 4997,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "465:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 5001,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "497:5:31",
            "nodeType": "VariableDeclaration",
            "scope": 5116,
            "src": "479:23:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20MELD_$5227",
              "typeString": "contract IERC20MELD"
            },
            "typeName": {
              "id": 5000,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4999,
                "name": "IERC20MELD",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5227,
                "src": "479:10:31"
              },
              "referencedDeclaration": 5227,
              "src": "479:10:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20MELD_$5227",
                "typeString": "contract IERC20MELD"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "aa01ac22",
            "id": 5003,
            "mutability": "mutable",
            "name": "gmAddress",
            "nameLocation": "524:9:31",
            "nodeType": "VariableDeclaration",
            "scope": 5116,
            "src": "509:24:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5002,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "509:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 5010,
            "mutability": "mutable",
            "name": "reciveTokenEvertimes",
            "nameLocation": "548:20:31",
            "nodeType": "VariableDeclaration",
            "scope": 5116,
            "src": "540:43:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5004,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "540:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000"
              },
              "id": 5009,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "313030",
                "id": 5005,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "571:3:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100_by_1",
                  "typeString": "int_const 100"
                },
                "value": "100"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "id": 5008,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 5006,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "577:2:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "3138",
                  "id": 5007,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "581:2:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_18_by_1",
                    "typeString": "int_const 18"
                  },
                  "value": "18"
                },
                "src": "577:6:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                }
              },
              "src": "571:12:31",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5014,
            "mutability": "mutable",
            "name": "recivedPool",
            "nameLocation": "618:11:31",
            "nodeType": "VariableDeclaration",
            "scope": 5116,
            "src": "590:39:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 5013,
              "keyType": {
                "id": 5011,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "598:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "590:27:31",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 5012,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "609:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5035,
              "nodeType": "Block",
              "src": "729:82:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5024,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 439,
                      "src": "739:14:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "739:16:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5026,
                  "nodeType": "ExpressionStatement",
                  "src": "739:16:31"
                },
                {
                  "expression": {
                    "id": 5029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5027,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5001,
                      "src": "765:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20MELD_$5227",
                        "typeString": "contract IERC20MELD"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5028,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5017,
                      "src": "773:6:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20MELD_$5227",
                        "typeString": "contract IERC20MELD"
                      }
                    },
                    "src": "765:14:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20MELD_$5227",
                      "typeString": "contract IERC20MELD"
                    }
                  },
                  "id": 5030,
                  "nodeType": "ExpressionStatement",
                  "src": "765:14:31"
                },
                {
                  "expression": {
                    "id": 5033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5031,
                      "name": "gmAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5003,
                      "src": "789:9:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5032,
                      "name": "_gm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5019,
                      "src": "801:3:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "789:15:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5034,
                  "nodeType": "ExpressionStatement",
                  "src": "789:15:31"
                }
              ]
            },
            "functionSelector": "485cc955",
            "id": 5036,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5022,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5021,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 988,
                  "src": "717:11:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "717:11:31"
              }
            ],
            "name": "initialize",
            "nameLocation": "645:10:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5017,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "676:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 5036,
                  "src": "665:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20MELD_$5227",
                    "typeString": "contract IERC20MELD"
                  },
                  "typeName": {
                    "id": 5016,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5015,
                      "name": "IERC20MELD",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5227,
                      "src": "665:10:31"
                    },
                    "referencedDeclaration": 5227,
                    "src": "665:10:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20MELD_$5227",
                      "typeString": "contract IERC20MELD"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5019,
                  "mutability": "mutable",
                  "name": "_gm",
                  "nameLocation": "700:3:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 5036,
                  "src": "692:11:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "655:54:31"
            },
            "returnParameters": {
              "id": 5023,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "729:0:31"
            },
            "scope": 5116,
            "src": "636:175:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5082,
              "nodeType": "Block",
              "src": "842:317:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 5044,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "884:4:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Faucet_$5116",
                                    "typeString": "contract Faucet"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Faucet_$5116",
                                    "typeString": "contract Faucet"
                                  }
                                ],
                                "id": 5043,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "876:7:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 5042,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "876:7:31",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 5045,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "876:13:31",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 5040,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5001,
                              "src": "860:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20MELD_$5227",
                                "typeString": "contract IERC20MELD"
                              }
                            },
                            "id": 5041,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1803,
                            "src": "860:15:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 5046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "860:30:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 5047,
                          "name": "reciveTokenEvertimes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5010,
                          "src": "893:20:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "860:53:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e6365",
                        "id": 5049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "915:22:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        },
                        "value": "Insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        }
                      ],
                      "id": 5039,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "852:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "852:86:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5051,
                  "nodeType": "ExpressionStatement",
                  "src": "852:86:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 5053,
                            "name": "recivedPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5014,
                            "src": "956:11:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 5056,
                          "indexExpression": {
                            "expression": {
                              "id": 5054,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "968:3:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5055,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "968:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "956:23:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "3836343030",
                              "id": 5060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1002:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              },
                              "value": "86400"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 5057,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "982:5:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 5058,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "982:15:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 5059,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4426,
                            "src": "982:19:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 5061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "982:26:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "956:52:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e636520706572206163636f756e7420666f7220323420686f757273",
                        "id": 5063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1010:31:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6d3aed036b1ab588661403af58ee477fe9ec8c9f0ad4d4f5e3fe8675fc3565d",
                          "typeString": "literal_string \"Once per account for 24 hours\""
                        },
                        "value": "Once per account for 24 hours"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6d3aed036b1ab588661403af58ee477fe9ec8c9f0ad4d4f5e3fe8675fc3565d",
                          "typeString": "literal_string \"Once per account for 24 hours\""
                        }
                      ],
                      "id": 5052,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "948:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "948:94:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5065,
                  "nodeType": "ExpressionStatement",
                  "src": "948:94:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5069,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1068:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1068:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5071,
                        "name": "reciveTokenEvertimes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5010,
                        "src": "1080:20:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5066,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5001,
                        "src": "1053:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20MELD_$5227",
                          "typeString": "contract IERC20MELD"
                        }
                      },
                      "id": 5068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1813,
                      "src": "1053:14:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1053:48:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5073,
                  "nodeType": "ExpressionStatement",
                  "src": "1053:48:31"
                },
                {
                  "expression": {
                    "id": 5080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5074,
                        "name": "recivedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5014,
                        "src": "1111:11:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5077,
                      "indexExpression": {
                        "expression": {
                          "id": 5075,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1123:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1123:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1111:23:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5078,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1137:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 5079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1137:15:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1111:41:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5081,
                  "nodeType": "ExpressionStatement",
                  "src": "1111:41:31"
                }
              ]
            },
            "functionSelector": "35897cad",
            "id": 5083,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recive",
            "nameLocation": "826:6:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5037,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "832:2:31"
            },
            "returnParameters": {
              "id": 5038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "842:0:31"
            },
            "scope": 5116,
            "src": "817:342:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5114,
              "nodeType": "Block",
              "src": "1218:162:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 5096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 5091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 5087,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1236:3:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1236:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 5089,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 459,
                              "src": "1250:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 5090,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1250:7:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1236:21:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 5095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 5092,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1261:3:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1261:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 5094,
                            "name": "gmAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5003,
                            "src": "1275:9:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1261:23:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1236:48:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79206f776e6572206f7220676d",
                        "id": 5097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1286:18:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa786c7eff684954605e0b0bcfe270c9d75f20dcbe6c98891ffa24972743eb08",
                          "typeString": "literal_string \"only owner or gm\""
                        },
                        "value": "only owner or gm"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa786c7eff684954605e0b0bcfe270c9d75f20dcbe6c98891ffa24972743eb08",
                          "typeString": "literal_string \"only owner or gm\""
                        }
                      ],
                      "id": 5086,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1228:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1228:77:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5099,
                  "nodeType": "ExpressionStatement",
                  "src": "1228:77:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5103,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1330:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1330:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 5109,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1366:4:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Faucet_$5116",
                                  "typeString": "contract Faucet"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Faucet_$5116",
                                  "typeString": "contract Faucet"
                                }
                              ],
                              "id": 5108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1358:7:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 5107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1358:7:31",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 5110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1358:13:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 5105,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5001,
                            "src": "1342:5:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20MELD_$5227",
                              "typeString": "contract IERC20MELD"
                            }
                          },
                          "id": 5106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1803,
                          "src": "1342:15:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 5111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1342:30:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5100,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5001,
                        "src": "1315:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20MELD_$5227",
                          "typeString": "contract IERC20MELD"
                        }
                      },
                      "id": 5102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1813,
                      "src": "1315:14:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1315:58:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5113,
                  "nodeType": "ExpressionStatement",
                  "src": "1315:58:31"
                }
              ]
            },
            "functionSelector": "2a8c01c6",
            "id": 5115,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reciveAll",
            "nameLocation": "1198:9:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1207:2:31"
            },
            "returnParameters": {
              "id": 5085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1218:0:31"
            },
            "scope": 5116,
            "src": "1189:191:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5117,
        "src": "364:1018:31",
        "usedErrors": []
      }
    ],
    "src": "32:1350:31"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x6764579CcB291B9f7CB1BC0F7Cd279a96bA5d20E",
      "transactionHash": "0xb637d8a300976ad09ce90ce884db3c56285c2e5cf60f3da745588bfdea92845e"
    },
    "80001": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xAd65eD39BA3a0872bdAE8B8c8911Cb44712aA168",
      "transactionHash": "0xb39059bbd939e675327c88608ddd8eee10b657d6468c019f69b31e6002d755ba"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-07T05:18:47.581Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}