{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x839F84E10218Bf498447C320999929D8270702A9",
      "txHash": "0x0dad81b56df8c8bfc43ab76c7068b8e6aab1f4050d0236f02409d81eebfc81d7",
      "kind": "uups"
    },
    {
      "address": "0x94D611D0328542A4dd8D1010f2c05D5D1F2473B1",
      "txHash": "0x8a4f5e489d5309af37f31fd6a8bb6f7a117c2d0ffac2c995e0c821f06f2fd2b4",
      "kind": "uups"
    },
    {
      "address": "0xE7b99fa5D07008890A7d34B9f9D564bfb24d51B8",
      "txHash": "0xce48404fbd08bb356e4d150fab4229aa39f508b03f5b538093b5d7c94c8b0315",
      "kind": "uups"
    },
    {
      "address": "0xb6C1cDc3E38783fE22e92099dcb402bc26B5451b",
      "txHash": "0x64b32062d11bec96523e5169dec069c226d30c9320dff5776a1f8f4b0e69f906",
      "kind": "uups"
    },
    {
      "address": "0x42e9FfBF89cebeb617Ab5f9Cef64E8d25Ed0C25d",
      "txHash": "0x6e1d64dfa20046f2bc4db862be464119e42ffdf0bc80f6f0dd71ff3c7e9d09b3",
      "kind": "uups"
    },
    {
      "address": "0x8E6e62a84B81A1B2B6ec161183b51EC97751A785",
      "txHash": "0x9d7c9dc3efa143a97b2e1d948917ff22d66c5fb19c491f8cb6fe11316168f368",
      "kind": "uups"
    },
    {
      "address": "0x57e5ec9c023173121aA3166b4EDD415B09a15F99",
      "txHash": "0xf6bab2fcb11dd1a5ee6b1489c96abf045d8b1fab080832380716b535eb7a2558",
      "kind": "uups"
    },
    {
      "address": "0x1896eB7D986d3A2Df419D54Fe8E99c6689992647",
      "txHash": "0x05b688ca9c2a4740c5412eda7c345f267887b9fb2d3fca697afaea2fba320733",
      "kind": "uups"
    },
    {
      "address": "0x839E4A71Bdb8f3588059974bE7Ab65964C413d31",
      "txHash": "0x0f9ac10bb436cd28216ae98296300d865b7aba7bcf9395ad5a195a5d121e7817",
      "kind": "uups"
    },
    {
      "address": "0xB601afC509a6ff3E67062BaC0F9E4CbE6F8B973D",
      "txHash": "0x8ede745136534339a98de910ffd7ded1d52ab0f9b4d6825e7104d5e10d0cb587",
      "kind": "uups"
    },
    {
      "address": "0x3687EE6B6132Ff0AB65527948DF29e9066d799E2",
      "txHash": "0x1cd604eb01d88412852f86f887c379ce5a1abbe1a996e690dc12925ba48064ad",
      "kind": "uups"
    },
    {
      "address": "0x31fdD2149087b222026F5EEB66647D9BCc78efe3",
      "txHash": "0xecd5a9142ee3c74562aac77399252c83ad83c411d9937a1dd34cfd611f5b6ed2",
      "kind": "uups"
    },
    {
      "address": "0x6EB4E67FDfB09347dabbcD92Cf36DeAd3323C8a8",
      "txHash": "0x445d28d40531df21dcbc5bb19c88f1de7bc1e97f1d4f126f45b47fb83828b167",
      "kind": "uups"
    },
    {
      "address": "0x432Ba28AA1f573733cE75B437B3B76A4d03B9015",
      "txHash": "0x928710ec5a0b834094882379da29f24444faeb1daef26061e5be304bd9de7f26",
      "kind": "uups"
    },
    {
      "address": "0x1B6A1297b008f28E555BcB4Ed1b53A3A7644709a",
      "txHash": "0x449af79212c31342c88d73fd77683f27f3199d425b750ab9e9edb40bb0769a58",
      "kind": "uups"
    },
    {
      "address": "0xBC70a27c097a9F063b08F4C3C21d7C71dBed17ee",
      "txHash": "0x60bc577b811398f517a55f71100675ea3361c995a7fbc84735521e8f02b3c611",
      "kind": "uups"
    },
    {
      "address": "0x58A72ECab781B8D2DC317db3742665A818d4C77e",
      "txHash": "0x783a1503c2624d045e03d5db964b8e813df0373bdd8f4c1b4f2a5cc9cd7e5be6",
      "kind": "uups"
    },
    {
      "address": "0x953fEe0ed2cEB5718eCbFf854C7655659e28F7Dc",
      "txHash": "0xc912fc143e327727bf5493b34f518ec8a9dd45f3d9adc5edc49e76d2fc0fd660",
      "kind": "uups"
    },
    {
      "address": "0x7105DD63586727763420e4eFac70aaB73723676A",
      "txHash": "0xea7c988551124115a1601327b2c5324a128dd17972934cd8605ffcba4e77506e",
      "kind": "uups"
    },
    {
      "address": "0x0Af017CC2a35Cb46f759ff639137C549500BEdC7",
      "txHash": "0xe96e3981ec8af8cfff56249eecfb63d3f3aca733606a0715b1eae38c79e186c1",
      "kind": "uups"
    },
    {
      "address": "0x90620D1a6B2B0ea4715B48338d34613CF272E7a8",
      "txHash": "0x1152e838efedd60ca2381c84ec4f5a38eed7918893134ce247695d92fc49dbbf",
      "kind": "uups"
    },
    {
      "address": "0xA04fC29C1d6be4739894444d7E51B78722132E7B",
      "txHash": "0x64c7ac295acf24d22af95d32c7cd2ccbbbd4f08aad5476ed3f165bd9042193bb",
      "kind": "uups"
    },
    {
      "address": "0x443F156B80Fe6dB5349BD5ea32b09B40E6369a04",
      "txHash": "0x4123e4696ded6ff4f9f757bbd6d9eb4e03a2e28a11ceb2a328dbf3c1dd10d071",
      "kind": "uups"
    },
    {
      "address": "0xd6D713cE5F53CEd59f63dFe94E50DE0a79280639",
      "txHash": "0x85040e1d2bbd52c81a0507aee8358f2124a0b85d0ccb0dd53c96040ef71e0b40",
      "kind": "uups"
    },
    {
      "address": "0x835E34D1B055fC35D8dD0BDdA61C4b53e1E60889",
      "txHash": "0x6755767478f72d718ec7ed21beb1b2b2eae9258b5cb7c8538e51647b25ea2d9b",
      "kind": "uups"
    },
    {
      "address": "0xF536d333aaE5B288dE7f31E52774940015C7D778",
      "txHash": "0x53a0aeb3c1b71cf7c87096197a1a8e352bc0c999f3f67d29a7ec84f91d0ed47b",
      "kind": "uups"
    },
    {
      "address": "0x83d7D23a7b6FB82df2831EeB13E8ff11D237bF76",
      "txHash": "0xd793d77f6177a82a15b93d47d8376ddf0396b8ae23e8a1e035c9a70a1fe905f9",
      "kind": "uups"
    },
    {
      "address": "0x048927c437a3b6c7BF06940485DCe5eb7f51f955",
      "txHash": "0xa522a3dfaa4524e8369efdb59be4a6f72560faabd79316a8d180ec840435920c",
      "kind": "uups"
    },
    {
      "address": "0xA1ee4d21b469A2f4131639923F65ac5bc592EB7D",
      "txHash": "0xa8d94ee8342fcb1efefb0352c30749407fad1f4c98be033fe6d7013b5a535c26",
      "kind": "uups"
    },
    {
      "address": "0xAB251f8DC79Dde6Ee83269dD63f4A0A3d39013a9",
      "txHash": "0xc88538bc17390b464e9dc5b9a2bbb3779e5413f11658cfe8f6ab3bff564aefcc",
      "kind": "uups"
    },
    {
      "address": "0xB6980331c7720a6C4395E5Ca89048FB656fd551F",
      "txHash": "0xac68c723d55530804f20d3761a77650d2db657047d15bd5244969d6ca75a8c7f",
      "kind": "uups"
    },
    {
      "address": "0x4665B2453F0961d7D0b19136e55b6E4FDb4Bc476",
      "txHash": "0x16012275fdbce81cf69424d03123a5e7bb8e7f5c19ed0ce609af1b7317cd02aa",
      "kind": "uups"
    },
    {
      "address": "0x98f4Ce8aFC30dc56638f7EDBb9BaE6b834b914F9",
      "txHash": "0xf205ccddfcbef6d663e787879204b4388be0bca6a7b935a4979ca4af07c1ebab",
      "kind": "uups"
    },
    {
      "address": "0xaFE0db7D983283cc8f0FaceA98c99c6F7Bfd8daf",
      "txHash": "0xda0a1ba45b74da0debe48359ae6d5e3d7dc85ec3665028b19723756dbad8e355",
      "kind": "uups"
    },
    {
      "address": "0x4A61c7AC092b98f9cD7A1E9f8c054e1D866d3642",
      "txHash": "0x03251665d9a6674e9d84052097a83cc902ca59abd257fcee5ce7f74c85e12a6b",
      "kind": "uups"
    },
    {
      "address": "0x930F04A02e3946311D8B6ad74f6067B68af4C773",
      "txHash": "0xdd4b83700eba425c822fe25c7ce32f5b75574e68ee699c19916609e76a9fc249",
      "kind": "uups"
    },
    {
      "address": "0x8d84Dc56659a15d8A8B4EfB600d0014046caFA2d",
      "txHash": "0x188bb02983706086316a4d60de02bf0bcf41379bbeb7dd677adaf8786ddf39d3",
      "kind": "uups"
    },
    {
      "address": "0x6e48F31f1D4dB84f9c1bcA5BAe2fb83c183102db",
      "txHash": "0x57ddda5831511c7c2afbda9e80a9a54bf1800e435d65140aa1e51d6866785ec3",
      "kind": "uups"
    },
    {
      "address": "0xf25186B5081Ff5cE73482AD761DB0eB0d25abfBF",
      "txHash": "0xd610cab606fce4f8be28f437a40ebfefd03f4e6ff95680ef428cf630ae3e6a03",
      "kind": "uups"
    },
    {
      "address": "0x2C2B9C9a4a25e24B174f26114e8926a9f2128FE4",
      "txHash": "0x28b9f7ea32f6de69219d965f0b99ebcb963a68ee855147af9badbcf51ba3797f",
      "kind": "uups"
    },
    {
      "address": "0xAa588d3737B611baFD7bD713445b314BD453a5C8",
      "txHash": "0xf89dc6027ee11dc6cc06157e4ef25f651e6df97b0e2266e3f9058a37af7c57fd",
      "kind": "uups"
    }
  ],
  "impls": {
    "c919d6eeb9797e8c86caac4cc00b2c2682ee34bad95af7cb783a906af732b5f9": {
      "address": "0x345cA3e014Aaf5dcA488057592ee47305D9B3e10",
      "txHash": "0x26f78578f7c3a6cdb82305bde3abd4f8b28eb72aa91639043d0c26007d6adaaa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:50"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "89b6ff9317f93d1bb4386eff2f7b467294a909d7249aa25725b5c6817a8e14d5": {
      "address": "0x9bE8b2DdF9D33660314E03710D8A2f4f45e1cFE9",
      "txHash": "0x6e9895c28c26eb21108d50e6ffc4ab4358e217feed7f2874c0388e1015a4a1d8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "acceptedToken",
            "type": "t_contract(IERC20MELD)5016",
            "src": "../project:/contracts/NFTStoreStorage.sol:21"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "foundationWallet",
            "type": "t_address",
            "src": "../project:/contracts/NFTStoreStorage.sol:25"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "officialWallet",
            "type": "t_address",
            "src": "../project:/contracts/NFTStoreStorage.sol:26"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "itemByNFT",
            "type": "t_mapping(t_contract(IERC721MelandNFT)4953,t_struct(Item)6828_storage)",
            "src": "../project:/contracts/NFTStoreStorage.sol:35"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "tokenIdsByNFT",
            "type": "t_mapping(t_contract(IERC721MelandNFT)4953,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/NFTStoreStorage.sol:39"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "ownerCutPerMillion",
            "type": "t_uint256",
            "src": "../project:/contracts/NFTStoreStorage.sol:41"
          },
          {
            "contract": "NFTStore",
            "label": "itemIdCounters",
            "type": "t_struct(Counter)3794_storage",
            "src": "../project:/contracts/NFTStore.sol:31"
          }
        ],
        "types": {
          "t_struct(Counter)3794_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20MELD)5016": {
            "label": "contract IERC20MELD"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IERC721MelandNFT)4953,t_struct(Item)6828_storage)": {
            "label": "mapping(contract IERC721MelandNFT => struct NFTStoreStorage.Item)"
          },
          "t_contract(IERC721MelandNFT)4953": {
            "label": "contract IERC721MelandNFT"
          },
          "t_struct(Item)6828_storage": {
            "label": "struct NFTStoreStorage.Item",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "tokenIdPool",
                "type": "t_bool"
              },
              {
                "label": "priceInWei",
                "type": "t_uint256"
              },
              {
                "label": "sellsCount",
                "type": "t_uint256"
              },
              {
                "label": "limit",
                "type": "t_uint32"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_contract(IERC721MelandNFT)4953,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(contract IERC721MelandNFT => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "3e2946d30768c7dcec522eae601f302cb710ad87423bdce5f7e503aee42a9849": {
      "address": "0x0C91e65fCA083BE264B1f6a2fBA5E2D126B0AA5a",
      "txHash": "0x6b9a6ebe1624edb2bb0595f66877695312fc88f523b1f9404dc0ddb1197d94b7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "BaseLand",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "../project:/contracts/BaseLand.sol:27"
          },
          {
            "contract": "BaseLand",
            "label": "otherLands",
            "type": "t_array(t_contract(IERC721Land)4988)dyn_storage",
            "src": "../project:/contracts/BaseLand.sol:31"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_contract(IERC721Land)4988)dyn_storage": {
            "label": "contract IERC721Land[]"
          },
          "t_contract(IERC721Land)4988": {
            "label": "contract IERC721Land"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "4c8b19f2bf2fc44631d6797da6c1d395181c1c20a294288431fcff1cd256c4ad": {
      "address": "0xA65e3f9daFA410b77447145b842E1E37f7F7B5cD",
      "txHash": "0x944b025d9ec7801238879277ed81865196cd52b21c8a8c990900e606c61c388f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "acceptedToken",
            "type": "t_contract(IERC20MELD)5016",
            "src": "../project:/contracts/NFTStoreStorage.sol:21"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "foundationWallet",
            "type": "t_address",
            "src": "../project:/contracts/NFTStoreStorage.sol:25"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "officialWallet",
            "type": "t_address",
            "src": "../project:/contracts/NFTStoreStorage.sol:26"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "itemByNFT",
            "type": "t_mapping(t_contract(IERC721MelandNFT)4953,t_struct(Item)6830_storage)",
            "src": "../project:/contracts/NFTStoreStorage.sol:35"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "tokenIdsByNFT",
            "type": "t_mapping(t_contract(IERC721MelandNFT)4953,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/NFTStoreStorage.sol:39"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "ownerCutPerMillion",
            "type": "t_uint256",
            "src": "../project:/contracts/NFTStoreStorage.sol:41"
          },
          {
            "contract": "NFTStore",
            "label": "itemIdCounters",
            "type": "t_struct(Counter)3794_storage",
            "src": "../project:/contracts/NFTStore.sol:31"
          }
        ],
        "types": {
          "t_struct(Counter)3794_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20MELD)5016": {
            "label": "contract IERC20MELD"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IERC721MelandNFT)4953,t_struct(Item)6830_storage)": {
            "label": "mapping(contract IERC721MelandNFT => struct NFTStoreStorage.Item)"
          },
          "t_contract(IERC721MelandNFT)4953": {
            "label": "contract IERC721MelandNFT"
          },
          "t_struct(Item)6830_storage": {
            "label": "struct NFTStoreStorage.Item",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "tokenIdPool",
                "type": "t_bool"
              },
              {
                "label": "priceInWei",
                "type": "t_uint256"
              },
              {
                "label": "sellsCount",
                "type": "t_uint256"
              },
              {
                "label": "limit",
                "type": "t_uint32"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_contract(IERC721MelandNFT)4953,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(contract IERC721MelandNFT => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "950a7e6a4766524e69e3f31de9824f7929f190f1867921d01baea3bb1664ac93": {
      "address": "0xf13c385521164f09F523B2BCeE85685BA382065a",
      "txHash": "0x6cec81e44ebccd3dbfc2684f5234ea7fc39b9a3282afc8f20e4abaecc7c852ae",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "BaseLand",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "../project:/contracts/BaseLand.sol:25"
          },
          {
            "contract": "BaseLand",
            "label": "otherLands",
            "type": "t_array(t_contract(IERC721Land)4987)dyn_storage",
            "src": "../project:/contracts/BaseLand.sol:29"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_contract(IERC721Land)4987)dyn_storage": {
            "label": "contract IERC721Land[]"
          },
          "t_contract(IERC721Land)4987": {
            "label": "contract IERC721Land"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "8a765346acc07fdf2685774ebb75351faed38895c2d0f5713b39b3a8f3a2ff4c": {
      "address": "0xFB88dE099e13c3ED21F80a7a1E49f8CAEcF10df6",
      "txHash": "0x82221e56959f631d47acc0dd82aa541215e08373ef8508787f8587c97b7f2f58",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "BaseLand",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "../project:/contracts/BaseLand.sol:28"
          },
          {
            "contract": "BaseLand",
            "label": "otherLands",
            "type": "t_array(t_contract(IERC721Land)4993)dyn_storage",
            "src": "../project:/contracts/BaseLand.sol:32"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_contract(IERC721Land)4993)dyn_storage": {
            "label": "contract IERC721Land[]"
          },
          "t_contract(IERC721Land)4993": {
            "label": "contract IERC721Land"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "9b664532fd5f7e42a5f1c7215b5d3c0e1813a907d3fbbc53e8dffffd41292b36": {
      "address": "0x9FBDa871d559710256a2502A2517b794B482Db40",
      "txHash": "0xd3afcf81f22b1b1c233ad6c52d1b8f3f865c2e232cb35a410624633e4418f07c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "acceptedToken",
            "type": "t_contract(IERC20MELD)5021",
            "src": "../project:/contracts/NFTStoreStorage.sol:21"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "foundationWallet",
            "type": "t_address",
            "src": "../project:/contracts/NFTStoreStorage.sol:25"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "officialWallet",
            "type": "t_address",
            "src": "../project:/contracts/NFTStoreStorage.sol:26"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "itemByNFT",
            "type": "t_mapping(t_contract(IERC721MelandNFT)4958,t_struct(Item)6894_storage)",
            "src": "../project:/contracts/NFTStoreStorage.sol:36"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "tokenIdsByNFT",
            "type": "t_mapping(t_contract(IERC721MelandNFT)4958,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/NFTStoreStorage.sol:36"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "limitPool",
            "type": "t_mapping(t_contract(IERC721MelandNFT)4958,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NFTStoreStorage.sol:44"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "ownerCutPerMillion",
            "type": "t_uint256",
            "src": "../project:/contracts/NFTStoreStorage.sol:47"
          },
          {
            "contract": "NFTStore",
            "label": "itemIdCounters",
            "type": "t_struct(Counter)3794_storage",
            "src": "../project:/contracts/NFTStore.sol:31"
          }
        ],
        "types": {
          "t_struct(Counter)3794_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20MELD)5021": {
            "label": "contract IERC20MELD"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IERC721MelandNFT)4958,t_struct(Item)6894_storage)": {
            "label": "mapping(contract IERC721MelandNFT => struct NFTStoreStorage.Item)"
          },
          "t_contract(IERC721MelandNFT)4958": {
            "label": "contract IERC721MelandNFT"
          },
          "t_struct(Item)6894_storage": {
            "label": "struct NFTStoreStorage.Item",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "tokenIdPool",
                "type": "t_bool"
              },
              {
                "label": "priceInWei",
                "type": "t_uint256"
              },
              {
                "label": "sellsCount",
                "type": "t_uint256"
              },
              {
                "label": "limit",
                "type": "t_uint32"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_contract(IERC721MelandNFT)4958,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(contract IERC721MelandNFT => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_contract(IERC721MelandNFT)4958,t_mapping(t_address,t_uint256))": {
            "label": "mapping(contract IERC721MelandNFT => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    }
  }
}
