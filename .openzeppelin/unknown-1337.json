{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xE7b99fa5D07008890A7d34B9f9D564bfb24d51B8",
      "txHash": "0xce48404fbd08bb356e4d150fab4229aa39f508b03f5b538093b5d7c94c8b0315",
      "kind": "uups"
    },
    {
      "address": "0xb6C1cDc3E38783fE22e92099dcb402bc26B5451b",
      "txHash": "0x64b32062d11bec96523e5169dec069c226d30c9320dff5776a1f8f4b0e69f906",
      "kind": "uups"
    },
    {
      "address": "0x42e9FfBF89cebeb617Ab5f9Cef64E8d25Ed0C25d",
      "txHash": "0x6e1d64dfa20046f2bc4db862be464119e42ffdf0bc80f6f0dd71ff3c7e9d09b3",
      "kind": "uups"
    },
    {
      "address": "0xB601afC509a6ff3E67062BaC0F9E4CbE6F8B973D",
      "txHash": "0x8ede745136534339a98de910ffd7ded1d52ab0f9b4d6825e7104d5e10d0cb587",
      "kind": "uups"
    },
    {
      "address": "0x31fdD2149087b222026F5EEB66647D9BCc78efe3",
      "txHash": "0xecd5a9142ee3c74562aac77399252c83ad83c411d9937a1dd34cfd611f5b6ed2",
      "kind": "uups"
    },
    {
      "address": "0x58A72ECab781B8D2DC317db3742665A818d4C77e",
      "txHash": "0x783a1503c2624d045e03d5db964b8e813df0373bdd8f4c1b4f2a5cc9cd7e5be6",
      "kind": "uups"
    },
    {
      "address": "0x90620D1a6B2B0ea4715B48338d34613CF272E7a8",
      "txHash": "0x1152e838efedd60ca2381c84ec4f5a38eed7918893134ce247695d92fc49dbbf",
      "kind": "uups"
    },
    {
      "address": "0xd6D713cE5F53CEd59f63dFe94E50DE0a79280639",
      "txHash": "0x85040e1d2bbd52c81a0507aee8358f2124a0b85d0ccb0dd53c96040ef71e0b40",
      "kind": "uups"
    },
    {
      "address": "0xF536d333aaE5B288dE7f31E52774940015C7D778",
      "txHash": "0x53a0aeb3c1b71cf7c87096197a1a8e352bc0c999f3f67d29a7ec84f91d0ed47b",
      "kind": "uups"
    },
    {
      "address": "0x048927c437a3b6c7BF06940485DCe5eb7f51f955",
      "txHash": "0xa522a3dfaa4524e8369efdb59be4a6f72560faabd79316a8d180ec840435920c",
      "kind": "uups"
    },
    {
      "address": "0xAB251f8DC79Dde6Ee83269dD63f4A0A3d39013a9",
      "txHash": "0xc88538bc17390b464e9dc5b9a2bbb3779e5413f11658cfe8f6ab3bff564aefcc",
      "kind": "uups"
    },
    {
      "address": "0xB6980331c7720a6C4395E5Ca89048FB656fd551F",
      "txHash": "0xac68c723d55530804f20d3761a77650d2db657047d15bd5244969d6ca75a8c7f",
      "kind": "uups"
    },
    {
      "address": "0x4665B2453F0961d7D0b19136e55b6E4FDb4Bc476",
      "txHash": "0x16012275fdbce81cf69424d03123a5e7bb8e7f5c19ed0ce609af1b7317cd02aa",
      "kind": "uups"
    },
    {
      "address": "0x98f4Ce8aFC30dc56638f7EDBb9BaE6b834b914F9",
      "txHash": "0xf205ccddfcbef6d663e787879204b4388be0bca6a7b935a4979ca4af07c1ebab",
      "kind": "uups"
    },
    {
      "address": "0x4A61c7AC092b98f9cD7A1E9f8c054e1D866d3642",
      "txHash": "0x03251665d9a6674e9d84052097a83cc902ca59abd257fcee5ce7f74c85e12a6b",
      "kind": "uups"
    },
    {
      "address": "0x930F04A02e3946311D8B6ad74f6067B68af4C773",
      "txHash": "0xdd4b83700eba425c822fe25c7ce32f5b75574e68ee699c19916609e76a9fc249",
      "kind": "uups"
    },
    {
      "address": "0x8d84Dc56659a15d8A8B4EfB600d0014046caFA2d",
      "txHash": "0x188bb02983706086316a4d60de02bf0bcf41379bbeb7dd677adaf8786ddf39d3",
      "kind": "uups"
    },
    {
      "address": "0x6e48F31f1D4dB84f9c1bcA5BAe2fb83c183102db",
      "txHash": "0x57ddda5831511c7c2afbda9e80a9a54bf1800e435d65140aa1e51d6866785ec3",
      "kind": "uups"
    },
    {
      "address": "0x8E6e62a84B81A1B2B6ec161183b51EC97751A785",
      "txHash": "0x759b0acec6a45ca36062445d41a43a1cd11e7f0762a4bd90c4c36c9ffb35bf70",
      "kind": "uups"
    },
    {
      "address": "0x041d5CE6ed885dcd9729C95D70336731ca7687A7",
      "txHash": "0x631d65c15c6657334ab5bd6c126821d8db4001b2d5ec72e13e9f92a75c5f7ebb",
      "kind": "uups"
    },
    {
      "address": "0x5d63e9Ede241B3900aF941A2a95432b38ac5b22B",
      "txHash": "0x3f71f07e15b81572f914cfac26fdcb392a39f675f12e6f65884d29cca9b5d7a9",
      "kind": "uups"
    },
    {
      "address": "0x1896eB7D986d3A2Df419D54Fe8E99c6689992647",
      "txHash": "0xe6d33a5860c674cbec990844cea40316528a7fd1261d904b989354cb84efadc4",
      "kind": "uups"
    },
    {
      "address": "0x22a0FA166eDC1B0486870deBCc93e7c0DD2baC98",
      "txHash": "0x556fb97daf3a17263b51f9ec97abb131b17c40aecc2350db91e377bcdfd9e97b",
      "kind": "uups"
    },
    {
      "address": "0xd4703c6F47BBb665B9E315956969A23F5734cEd8",
      "txHash": "0x63c53bd4181a257951cd3cc14ae38f02fd2752c580cddef615084d1cb1f890ef",
      "kind": "uups"
    },
    {
      "address": "0xA29810C6b80F389133D6F1dE7FB5d2E01464B3a5",
      "txHash": "0xc67476681f9aa4db23e2da4b55c0a49f410d23f34a7a84c9a3a4efc1a410221e",
      "kind": "uups"
    },
    {
      "address": "0x839E4A71Bdb8f3588059974bE7Ab65964C413d31",
      "txHash": "0xfbea9f1e38231555b06b721ea7694e81221e46fcba8eef866311708076842279",
      "kind": "uups"
    },
    {
      "address": "0xBC70a27c097a9F063b08F4C3C21d7C71dBed17ee",
      "txHash": "0x2343b69984ca363d9190174f73a4805d670cbdc613efdaab59327068647c520a",
      "kind": "uups"
    },
    {
      "address": "0xdd3f45f5a4840B4eA890a411eC29D3F1F630a70B",
      "txHash": "0x5e271dbf8fde37b5b9ee7f8fdd3d793b48ed9d2e893b3206944efda5619e530f",
      "kind": "uups"
    },
    {
      "address": "0x953fEe0ed2cEB5718eCbFf854C7655659e28F7Dc",
      "txHash": "0xe322885d153ed2c671d5c552279666b7b6a130f6506cad441e34339ae2e33388",
      "kind": "uups"
    },
    {
      "address": "0x3E4bAAaCB314a1d76aF506D5eB688e1940396Dad",
      "txHash": "0xa59c74bf31945b21423cf4b18193eb2b9eea162a1ae480bbba56e52a6f2c55db",
      "kind": "uups"
    },
    {
      "address": "0xA04fC29C1d6be4739894444d7E51B78722132E7B",
      "txHash": "0x117672722725ca75d266049f9657e042dd88e2fad0529216714662f36fae4c42",
      "kind": "uups"
    },
    {
      "address": "0x443F156B80Fe6dB5349BD5ea32b09B40E6369a04",
      "txHash": "0x0acc900e3bfa273ee7daf15781654d92b8e2303d664520aedf1a6fc8191e9285",
      "kind": "uups"
    },
    {
      "address": "0xbDBd5ce243C4FaA1326a055663637Bc016373A5b",
      "txHash": "0xff62543a21e121e79bfa082bdd901082892fabc5655b2a17b8d35ec55d62350f",
      "kind": "uups"
    },
    {
      "address": "0x1e2a0F31FEd5967c7549841Ee2297C8A80C3433e",
      "txHash": "0x230f1db291f9b2ad345b5d270f34ec8746b71664e58c20b179a968ceadc51d18",
      "kind": "uups"
    },
    {
      "address": "0x747194A3AbEc834fAC2089c95AE2568b968474e6",
      "txHash": "0x5264f2534ab68b47805612ec02b44cfaddbe57327a8fd1ad3c1183bf5c5f5ebc",
      "kind": "uups"
    },
    {
      "address": "0xE82cA0578492Ce61fBfc7edB5e22Ef6A72BF0860",
      "txHash": "0x16f0b45905bde813909074131cf98fdb32eda8cb687b428a4d0f6c3fdf6aed73",
      "kind": "uups"
    },
    {
      "address": "0x83d7D23a7b6FB82df2831EeB13E8ff11D237bF76",
      "txHash": "0x2d268ea6b24dc0532e94a40ffd08115ea729ce0d5971e06c1b0f0a2679a6f667",
      "kind": "uups"
    },
    {
      "address": "0x819667096E5DaE7935145401E62a217bA11A2836",
      "txHash": "0x3ce8dc489d4fa9047a5084d83dfff820bb216f9b2d1175237b8b234bd6c40999",
      "kind": "uups"
    },
    {
      "address": "0xA1ee4d21b469A2f4131639923F65ac5bc592EB7D",
      "txHash": "0x622d5ed183353397511b52985908143b773dcf9c5b8199c4ef0faf71f071a178",
      "kind": "uups"
    },
    {
      "address": "0x40aa7b98eD926B7B26648EF5aAfb4b0088C11C3F",
      "txHash": "0x0cec5ba15866408923e25f8d0bfa0f7907212550be3569150cbee42a83acff88",
      "kind": "uups"
    },
    {
      "address": "0x840d87BF609978f0AeEE578FB5039227F11319eC",
      "txHash": "0xafb08b52112a5f436f9d71aa5102b93d05e84ee5d3d8e443451f8a0096ba0707",
      "kind": "uups"
    },
    {
      "address": "0x604348A1C08C82b40fA614021075263885B6cc2B",
      "txHash": "0x0e4980c7f4e954b8bbc8b0aebeb433d6945c0fd9c96cd39c33462499029bbf86",
      "kind": "uups"
    },
    {
      "address": "0xDE79C13367790d9cc7d06F8557b38b90a043290f",
      "txHash": "0xbf961237205edd2077d9c33f64e8e37f00e5d4bd7723d3a01db8db00baebca19",
      "kind": "uups"
    },
    {
      "address": "0x58D9Dc7eD2c02dDf38016b84416F40d56d4cC565",
      "txHash": "0x231ef8e1e79848d16076240c8acadae4cf84c0d33a127d270a11b795f004a654",
      "kind": "uups"
    },
    {
      "address": "0xBFf67Cc5F5159A623C675d5c16007630BE24369b",
      "txHash": "0x4c50eb0b55f465d4fe262cc4b600002f68be5d3571ffc4c0bd1c2ad151980685",
      "kind": "uups"
    },
    {
      "address": "0x0Af017CC2a35Cb46f759ff639137C549500BEdC7",
      "txHash": "0xec1cd360f6efbf520c56a9c0ed011da8e1edd33872b950f5ea39bae3feef0f81",
      "kind": "uups"
    },
    {
      "address": "0x3B374062eC84639495875FfE5297E6B302D28404",
      "txHash": "0x7a7fdd588c2861904808bdab0798035ed37bc0d274c71cde6a3a1907d4c97500",
      "kind": "uups"
    },
    {
      "address": "0x0B50D432cFCdaf802a2A995788C6D086CcdfaD6d",
      "txHash": "0x05ef2f4554f00ed70da219781338057ecdcde9c3b0e7c2d036b6a1fbc6013fc2",
      "kind": "uups"
    },
    {
      "address": "0x3C58d54014728046A8a2eA65229E9b8527ec1a26",
      "txHash": "0x776220e485d7b499d98bf3520a31e562cc5ee93f0831859f5d00607787917950",
      "kind": "uups"
    },
    {
      "address": "0xaFE0db7D983283cc8f0FaceA98c99c6F7Bfd8daf",
      "txHash": "0xdda4dd9fb0990bd0a1ea2cdbb1e8c5c877cefc726b1e021587264fe66140832a",
      "kind": "uups"
    },
    {
      "address": "0x8Ee5eD966466D67248D348933c96240543C57432",
      "txHash": "0xc9915e87d8c5a0c77c232d34c5abccdf0223738dbd4c3e8d772d101578b084ab",
      "kind": "uups"
    },
    {
      "address": "0x9c6876b06132eb3f3B806863B5aF17B4313330E9",
      "txHash": "0xb5fe1eac4e6ed7da8e2d8a49c6bbe07bbad5d857f5b501e9c1662c14cf092d51",
      "kind": "uups"
    },
    {
      "address": "0xEA572d1E786209546Bb56040EBa7D4B6e4F77f78",
      "txHash": "0x8bd693b4d4d5900409d335212e7518cb54f81504b4a2c856bd19a01307aa01af",
      "kind": "uups"
    },
    {
      "address": "0x67e5395195b016e2f239D307A7629127ccB2B4Fc",
      "txHash": "0x98b55ae8836da3b0ae45cc0f9eb1eae19166c7c35f584a59960863f34da9897d",
      "kind": "uups"
    },
    {
      "address": "0x362A4B61169aFa202A1237A135eBD3eBd35e7644",
      "txHash": "0xeb7a52c0c56ad822a4fc4469597373750dd0f699723771e5b1e69e614e8622c9",
      "kind": "uups"
    },
    {
      "address": "0x5aB59bF7Fdce70A5BAe25d430D795B312ED5fBD3",
      "txHash": "0x001221ac376ba3c48a24ff7bf4839f42abb5665b9125acad913f8d430d3000af",
      "kind": "uups"
    },
    {
      "address": "0x94D611D0328542A4dd8D1010f2c05D5D1F2473B1",
      "txHash": "0x259db8c85346707890bb0d057a81da081466f0befb2e36c115ccdb3bcdd877d2",
      "kind": "uups"
    },
    {
      "address": "0xFEd52577ed97C36744BF0d55878c046b3804A696",
      "txHash": "0x7525486f698421b64953e8a5f97dfe3dc084c271fd5751cf30b11583328f4a18",
      "kind": "uups"
    },
    {
      "address": "0x3687EE6B6132Ff0AB65527948DF29e9066d799E2",
      "txHash": "0x60537de0f5516f348c0459b36359d176c4c78f8e2902492fe1bb7a9ee6b3c515",
      "kind": "uups"
    },
    {
      "address": "0x76bBd2391AdeCC83CA7dE9a2505292C31576259B",
      "txHash": "0x965418b4e42385b1ac5f89da9648b6a0bcc695bade352aed8a696b95820e8486",
      "kind": "uups"
    },
    {
      "address": "0x852C28448399063a0dFeCaBfcbc07d4561c02ce6",
      "txHash": "0x53f1b4b269d79d9cecb979b92b7b9951d1706aa4afec41bedf6d05fdcbec6195",
      "kind": "uups"
    },
    {
      "address": "0xb518Ac8BA092AC34633623798520Ca2cbC11D68F",
      "txHash": "0x362726e4cf426534bda03ea909edc5734eec9e4331bdc316cf33d97cf4339a97",
      "kind": "uups"
    },
    {
      "address": "0x947eA77D49b3B6Eb3B0004E480c98bD0aD739a0c",
      "txHash": "0x9b7dfcd1aca9a9c4db3915a9ae0fa5f258370f17376305b3842d8544f5ad00a7",
      "kind": "uups"
    },
    {
      "address": "0xD964264675C894fFc0Ac254c74968b227a7a31fe",
      "txHash": "0x35c9a296e35ed13cb38c766b94b5c7257b47c0d03ced66c1df7bcd022eb25e9e",
      "kind": "uups"
    },
    {
      "address": "0x39F9b97F39FadC441d87FAdaab1F3cC1Ece059E6",
      "txHash": "0x28f68357c5f24348e6bbf1e9f5c7c67f9aa4d7f05a5f06d82e6670e24a33bc8d",
      "kind": "uups"
    },
    {
      "address": "0x7D1B61442e0A54AD319eD60f054186FaB9280DE2",
      "txHash": "0x4f3267dfa8709b2722865a84e3e4fde2d06ba2a0dfabae8fbe40ab6a288820d8",
      "kind": "uups"
    },
    {
      "address": "0xc73Be343F4bE06d0151EC938CbbfC13fc5EAf153",
      "txHash": "0x0464e755db2d9428de2c3abd586019990bede7aec67aa762992f8be99af595dd",
      "kind": "uups"
    },
    {
      "address": "0x20E2a646fbd7347A4EbE4C0e2A28DEFFcc2BC1F9",
      "txHash": "0x03e89ea16587ebae256dea79e188e4014c06b9b978d0c19c2ec323eeed55ac73",
      "kind": "uups"
    },
    {
      "address": "0x835E34D1B055fC35D8dD0BDdA61C4b53e1E60889",
      "txHash": "0x019365d6a8e3b21b37d2a09c5dda7d1497139b7fdc2e80d4d8f1cb942c61bedf",
      "kind": "uups"
    },
    {
      "address": "0x9bE8b2DdF9D33660314E03710D8A2f4f45e1cFE9",
      "txHash": "0x45773cafdf3d440920a71d351def7080b1dc10b88c7b8548e40ac8e34317ea2f",
      "kind": "uups"
    },
    {
      "address": "0x0C91e65fCA083BE264B1f6a2fBA5E2D126B0AA5a",
      "txHash": "0x282d8d0ee3ea8945d383f06109e50abd9542f01015d962215b96a032c945aaa7",
      "kind": "uups"
    },
    {
      "address": "0x1e02bAf663Db99C9260C669cf553911e382C2CA9",
      "txHash": "0x93a381618c4815a19df7477eb9abfdac96f78370283fc0297eb9e3009877aa7d",
      "kind": "uups"
    },
    {
      "address": "0x57e5ec9c023173121aA3166b4EDD415B09a15F99",
      "txHash": "0x81aad82c5e2ed1172d44a330b128a14826e8a6e202050d708e1fdf5c14725f73",
      "kind": "uups"
    },
    {
      "address": "0xDBB2b53D6Dbe8002715B050570f0A859Ec0a1f91",
      "txHash": "0x71e89cfd59a32e19de27433e1c916e69abedda83d61623f8e2c62da159a3ce11",
      "kind": "uups"
    },
    {
      "address": "0xc9004ecD4cc5beEa93425BFA19FbE38D6f924F92",
      "txHash": "0x7cab724eeb3bd4f9e1620d792ec56c8e623608f121e717b266f53648a77bccb9",
      "kind": "uups"
    },
    {
      "address": "0xE8D75e697474583b4E7fBE107D74C4f5456187Ba",
      "txHash": "0x7a4fa4669bd9c727c7f57b5bb7760edaf457373646e94c9c69b203200dcd6063",
      "kind": "uups"
    },
    {
      "address": "0x0C4688f0867a7D0a0cfa1D419b4939F5c0ad30C8",
      "txHash": "0x48566734d484de116ed76945794b6e08a76018d7826436e961a1ea1d086202f2",
      "kind": "uups"
    },
    {
      "address": "0x1B6A1297b008f28E555BcB4Ed1b53A3A7644709a",
      "txHash": "0x2ea722df845e1ffb14b228cf495c2b71b7499e4866b328a703131d1431603053",
      "kind": "uups"
    },
    {
      "address": "0xA65e3f9daFA410b77447145b842E1E37f7F7B5cD",
      "txHash": "0x70131da7d767b20de1834862b37d62910869c68593f73d45351650e50c924322",
      "kind": "uups"
    },
    {
      "address": "0xDCF071FA20668F3C2e515d22EBb5b2bfBEF87cF3",
      "txHash": "0x636b5dd68b998866fdc6735eccb0e8c9a81a92b64d9688f8acec82231ce97262",
      "kind": "uups"
    },
    {
      "address": "0xf25186B5081Ff5cE73482AD761DB0eB0d25abfBF",
      "txHash": "0xd610cab606fce4f8be28f437a40ebfefd03f4e6ff95680ef428cf630ae3e6a03",
      "kind": "uups"
    },
    {
      "address": "0x2C2B9C9a4a25e24B174f26114e8926a9f2128FE4",
      "txHash": "0x28b9f7ea32f6de69219d965f0b99ebcb963a68ee855147af9badbcf51ba3797f",
      "kind": "uups"
    },
    {
      "address": "0xAa588d3737B611baFD7bD713445b314BD453a5C8",
      "txHash": "0xf89dc6027ee11dc6cc06157e4ef25f651e6df97b0e2266e3f9058a37af7c57fd",
      "kind": "uups"
    },
    {
      "address": "0xdDA6327139485221633A1FcD65f4aC932E60A2e1",
      "txHash": "0x96b989638616b0db0d6f55eb12a6cfe2eeed2563f6a087796bcf6ef44b20284f",
      "kind": "uups"
    },
    {
      "address": "0xEcFcaB0A285d3380E488A39B4BB21e777f8A4EaC",
      "txHash": "0x34d4b2f7bf385d023b6b28cdc6bbb766ba7a923b5cfa1ae31f4e8ec0f2f2ec2e",
      "kind": "uups"
    },
    {
      "address": "0x4e71920b7330515faf5EA0c690f1aD06a85fB60c",
      "txHash": "0x5b9331d745bdb6176789a760fe6e08528b56e2e9ec3bd8f4ad8aecf8794965a9",
      "kind": "uups"
    },
    {
      "address": "0x839F84E10218Bf498447C320999929D8270702A9",
      "txHash": "0xbf0e95b6e141f90d866e574dd3d9a7422fae2be00ff9087c8457e54c6c825678",
      "kind": "uups"
    },
    {
      "address": "0xA27d2b5f34c1218a433ae81837471342992CE313",
      "txHash": "0x67237401829f755062986726a1e956aa7e718798ea09e99295fbb15e1003c9c5",
      "kind": "uups"
    },
    {
      "address": "0x318f97b614c1d1215CFb94d177140B8b3406A7d3",
      "txHash": "0x06228de292df674b81d647758e7bdbadc8e21a585a4ab81328829d5857faecc7",
      "kind": "uups"
    },
    {
      "address": "0xeB8DCAA09860eD72ED3bd1e2D1B7cDE660c27fdD",
      "txHash": "0x74782b0b6d72a4b5cdd7de8a9ff37eeff4cd953f322592c981554fec3de1d41e",
      "kind": "uups"
    },
    {
      "address": "0x796EE9387cDff8EaD4C58202fA29547A0B9e41CD",
      "txHash": "0x3e4d7c0d41870a5da28f06f6e1043968ec9381def1f7edc41f3a27ea4801d03d",
      "kind": "uups"
    },
    {
      "address": "0xb58fA6AE197f32ad21C72Ac80643622Da01dEBcA",
      "txHash": "0x52a294923265c293d02b6a3571ce6f1cc331e87be3c32b82833860154d738618",
      "kind": "uups"
    },
    {
      "address": "0x6EB4E67FDfB09347dabbcD92Cf36DeAd3323C8a8",
      "txHash": "0xfe90621aca54ea726abd0ce32879bab69b5d483c44e752eba26d0690583d3d0e",
      "kind": "uups"
    },
    {
      "address": "0x432Ba28AA1f573733cE75B437B3B76A4d03B9015",
      "txHash": "0xefc5e26e6a62458ecc6a63923b4f3931f92c5c3160b8a537850170ea969a1331",
      "kind": "uups"
    },
    {
      "address": "0xc6839b501420e327145d9341e53367810287D978",
      "txHash": "0xf959e76df7e5ce72431acfe714d924bf9d7fbecdd9c259d3486362fc52a13bf2",
      "kind": "uups"
    },
    {
      "address": "0x8C31a8B566d635E8626A8a0E47f86AbAA4372cac",
      "txHash": "0x854cd9673a60a4ee3921ca9457301fee4fe998f529ea83515a2bfb0c782582ab",
      "kind": "uups"
    },
    {
      "address": "0x6229d73125875fbE83fDe461af9F5c3C8a2E8Ac9",
      "txHash": "0x6638feb672c12e07352a47e9f3bca935ddbaa4d428f4a27aa941e7b77aac6177",
      "kind": "uups"
    },
    {
      "address": "0x7105DD63586727763420e4eFac70aaB73723676A",
      "txHash": "0x1748fd96b806274c1775c7d9f630072c34b10b9d7a0aa4653830a027b4894891",
      "kind": "uups"
    }
  ],
  "impls": {
    "89b6ff9317f93d1bb4386eff2f7b467294a909d7249aa25725b5c6817a8e14d5": {
      "address": "0x9bE8b2DdF9D33660314E03710D8A2f4f45e1cFE9",
      "txHash": "0x6e9895c28c26eb21108d50e6ffc4ab4358e217feed7f2874c0388e1015a4a1d8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "acceptedToken",
            "type": "t_contract(IERC20MELD)5016",
            "src": "../project:/contracts/NFTStoreStorage.sol:21"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "foundationWallet",
            "type": "t_address",
            "src": "../project:/contracts/NFTStoreStorage.sol:25"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "officialWallet",
            "type": "t_address",
            "src": "../project:/contracts/NFTStoreStorage.sol:26"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "itemByNFT",
            "type": "t_mapping(t_contract(IERC721MelandNFT)4953,t_struct(Item)6828_storage)",
            "src": "../project:/contracts/NFTStoreStorage.sol:35"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "tokenIdsByNFT",
            "type": "t_mapping(t_contract(IERC721MelandNFT)4953,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/NFTStoreStorage.sol:39"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "ownerCutPerMillion",
            "type": "t_uint256",
            "src": "../project:/contracts/NFTStoreStorage.sol:41"
          },
          {
            "contract": "NFTStore",
            "label": "itemIdCounters",
            "type": "t_struct(Counter)3794_storage",
            "src": "../project:/contracts/NFTStore.sol:31"
          }
        ],
        "types": {
          "t_struct(Counter)3794_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20MELD)5016": {
            "label": "contract IERC20MELD"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IERC721MelandNFT)4953,t_struct(Item)6828_storage)": {
            "label": "mapping(contract IERC721MelandNFT => struct NFTStoreStorage.Item)"
          },
          "t_contract(IERC721MelandNFT)4953": {
            "label": "contract IERC721MelandNFT"
          },
          "t_struct(Item)6828_storage": {
            "label": "struct NFTStoreStorage.Item",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "tokenIdPool",
                "type": "t_bool"
              },
              {
                "label": "priceInWei",
                "type": "t_uint256"
              },
              {
                "label": "sellsCount",
                "type": "t_uint256"
              },
              {
                "label": "limit",
                "type": "t_uint32"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_contract(IERC721MelandNFT)4953,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(contract IERC721MelandNFT => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "3e2946d30768c7dcec522eae601f302cb710ad87423bdce5f7e503aee42a9849": {
      "address": "0x0C91e65fCA083BE264B1f6a2fBA5E2D126B0AA5a",
      "txHash": "0x6b9a6ebe1624edb2bb0595f66877695312fc88f523b1f9404dc0ddb1197d94b7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:23"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:75"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "BaseLand",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "../project:/contracts/BaseLand.sol:27"
          },
          {
            "contract": "BaseLand",
            "label": "otherLands",
            "type": "t_array(t_contract(IERC721Land)4988)dyn_storage",
            "src": "../project:/contracts/BaseLand.sol:31"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_contract(IERC721Land)4988)dyn_storage": {
            "label": "contract IERC721Land[]"
          },
          "t_contract(IERC721Land)4988": {
            "label": "contract IERC721Land"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "950a7e6a4766524e69e3f31de9824f7929f190f1867921d01baea3bb1664ac93": {
      "address": "0xf13c385521164f09F523B2BCeE85685BA382065a",
      "txHash": "0x6cec81e44ebccd3dbfc2684f5234ea7fc39b9a3282afc8f20e4abaecc7c852ae",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "BaseLand",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "../project:/contracts/BaseLand.sol:25"
          },
          {
            "contract": "BaseLand",
            "label": "otherLands",
            "type": "t_array(t_contract(IERC721Land)4987)dyn_storage",
            "src": "../project:/contracts/BaseLand.sol:29"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_contract(IERC721Land)4987)dyn_storage": {
            "label": "contract IERC721Land[]"
          },
          "t_contract(IERC721Land)4987": {
            "label": "contract IERC721Land"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "a163f0dde55aa22139f22580479c25b2e2b245d45754e78058538d4200cbde8c": {
      "address": "0x31fdD2149087b222026F5EEB66647D9BCc78efe3",
      "txHash": "0x2c7bb2a0e4b2c2c404483b16f3c4bcf827b468e3410604307f51fe9b12d27ec7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "acceptedToken",
            "type": "t_contract(IERC20MELD)5119",
            "src": "../project:/contracts/MarketplaceStorage.sol:9"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "foundationWallet",
            "type": "t_address",
            "src": "../project:/contracts/MarketplaceStorage.sol:13"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "officialWallet",
            "type": "t_address",
            "src": "../project:/contracts/MarketplaceStorage.sol:19"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "orderByAssetId",
            "type": "t_mapping(t_contract(IERC721)4611,t_mapping(t_uint256,t_struct(Order)6359_storage))",
            "src": "../project:/contracts/MarketplaceStorage.sol:44"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "ownerCutPerMillion",
            "type": "t_uint256",
            "src": "../project:/contracts/MarketplaceStorage.sol:50"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "publicationFeeInWei",
            "type": "t_uint256",
            "src": "../project:/contracts/MarketplaceStorage.sol:55"
          }
        ],
        "types": {
          "t_contract(IERC20MELD)5119": {
            "label": "contract IERC20MELD"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IERC721)4611,t_mapping(t_uint256,t_struct(Order)6359_storage))": {
            "label": "mapping(contract IERC721 => mapping(uint256 => struct MarketplaceStorage.Order))"
          },
          "t_contract(IERC721)4611": {
            "label": "contract IERC721"
          },
          "t_mapping(t_uint256,t_struct(Order)6359_storage)": {
            "label": "mapping(uint256 => struct MarketplaceStorage.Order)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Order)6359_storage": {
            "label": "struct MarketplaceStorage.Order",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "nftAddress",
                "type": "t_contract(IERC721)4611"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "expiresAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "19b424584427b53e76fda77bd870169958cbf39f8c98a827f4a99c2766d55412": {
      "address": "0xA65e3f9daFA410b77447145b842E1E37f7F7B5cD",
      "txHash": "0x973995b7235e6298994b0c50f4f83c0f1354b74f4342c178c0bdf1dde4a5be2e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:50"
          },
          {
            "contract": "LiquidityTrap",
            "label": "trapAmount",
            "type": "t_uint128",
            "src": "../project:/contracts/LiquidityTrap.sol:17"
          },
          {
            "contract": "LiquidityTrap",
            "label": "liquidityAddedBlock",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityTrap.sol:18"
          },
          {
            "contract": "LiquidityTrap",
            "label": "bought",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityTrap.sol:19"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "2bb1eeb3cb8c55c8a9805471c5ea13c84bafae9d5b67696814e69b2c7139bdc8": {
      "address": "0x7D1B61442e0A54AD319eD60f054186FaB9280DE2",
      "txHash": "0x33936439465008ae0da58404a04a8faa11484df98877954a6479e58b0fe9afc2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:50"
          },
          {
            "contract": "LiquidityTrap",
            "label": "trapAmount",
            "type": "t_uint128",
            "src": "../project:/contracts/LiquidityTrap.sol:17"
          },
          {
            "contract": "LiquidityTrap",
            "label": "liquidityAddedBlock",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityTrap.sol:18"
          },
          {
            "contract": "LiquidityTrap",
            "label": "bought",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityTrap.sol:19"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a25d4d581f3def5b42f3a6874a96e87344f9bf91418ff747483e3147a14ad527": {
      "address": "0xBFf65a708c21AACC3D0B28b0B99fE9A78b41318A",
      "txHash": "0xb546af4c2efe91fd1ac16b43a6063f5c96deab165f233b11628499636bfb8d83",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "acceptedToken",
            "type": "t_contract(IERC20MELD)5175",
            "src": "../project:/contracts/MarketplaceStorage.sol:9"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "foundationWallet",
            "type": "t_address",
            "src": "../project:/contracts/MarketplaceStorage.sol:13"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "officialWallet",
            "type": "t_address",
            "src": "../project:/contracts/MarketplaceStorage.sol:19"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "orderByAssetId",
            "type": "t_mapping(t_contract(IERC721)4611,t_mapping(t_uint256,t_struct(Order)6556_storage))",
            "src": "../project:/contracts/MarketplaceStorage.sol:44"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "ownerCutPerMillion",
            "type": "t_uint256",
            "src": "../project:/contracts/MarketplaceStorage.sol:50"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "publicationFeeInWei",
            "type": "t_uint256",
            "src": "../project:/contracts/MarketplaceStorage.sol:55"
          }
        ],
        "types": {
          "t_contract(IERC20MELD)5175": {
            "label": "contract IERC20MELD"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IERC721)4611,t_mapping(t_uint256,t_struct(Order)6556_storage))": {
            "label": "mapping(contract IERC721 => mapping(uint256 => struct MarketplaceStorage.Order))"
          },
          "t_contract(IERC721)4611": {
            "label": "contract IERC721"
          },
          "t_mapping(t_uint256,t_struct(Order)6556_storage)": {
            "label": "mapping(uint256 => struct MarketplaceStorage.Order)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Order)6556_storage": {
            "label": "struct MarketplaceStorage.Order",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "nftAddress",
                "type": "t_contract(IERC721)4611"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "expiresAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "320db19d27e93b44cf5c6279a65d1bc866210bc4a21c1fa7bc99fd8a9514063f": {
      "address": "0xd4703c6F47BBb665B9E315956969A23F5734cEd8",
      "txHash": "0x07ab82e874c49575fc4f6838e0c351cac65b0b10a3fab5c6070d04f74fec15a3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "acceptedToken",
            "type": "t_contract(IERC20MELD)5163",
            "src": "../project:/contracts/NFTStoreStorage.sol:21"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "foundationWallet",
            "type": "t_address",
            "src": "../project:/contracts/NFTStoreStorage.sol:25"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "officialWallet",
            "type": "t_address",
            "src": "../project:/contracts/NFTStoreStorage.sol:26"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "itemByNFT",
            "type": "t_mapping(t_contract(IERC721MelandNFT)5100,t_struct(Item)7622_storage)",
            "src": "../project:/contracts/NFTStoreStorage.sol:36"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "tokenIdsByNFT",
            "type": "t_mapping(t_contract(IERC721MelandNFT)5100,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/NFTStoreStorage.sol:39"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "nftByCid",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "src": "../project:/contracts/NFTStoreStorage.sol:43"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "limitPool",
            "type": "t_mapping(t_contract(IERC721MelandNFT)5100,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NFTStoreStorage.sol:48"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "ownerCutPerMillion",
            "type": "t_uint256",
            "src": "../project:/contracts/NFTStoreStorage.sol:52"
          },
          {
            "contract": "NFTStore",
            "label": "itemIdCounters",
            "type": "t_struct(Counter)3794_storage",
            "src": "../project:/contracts/NFTStore.sol:31"
          }
        ],
        "types": {
          "t_struct(Counter)3794_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20MELD)5163": {
            "label": "contract IERC20MELD"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IERC721MelandNFT)5100,t_struct(Item)7622_storage)": {
            "label": "mapping(contract IERC721MelandNFT => struct NFTStoreStorage.Item)"
          },
          "t_contract(IERC721MelandNFT)5100": {
            "label": "contract IERC721MelandNFT"
          },
          "t_struct(Item)7622_storage": {
            "label": "struct NFTStoreStorage.Item",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "tokenIdPool",
                "type": "t_bool"
              },
              {
                "label": "priceInWei",
                "type": "t_uint256"
              },
              {
                "label": "sellsCount",
                "type": "t_uint256"
              },
              {
                "label": "limit",
                "type": "t_uint32"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_contract(IERC721MelandNFT)5100,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(contract IERC721MelandNFT => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)"
          },
          "t_mapping(t_contract(IERC721MelandNFT)5100,t_mapping(t_address,t_uint256))": {
            "label": "mapping(contract IERC721MelandNFT => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "09c5dd3ac0f5a3b1500aa3b4df0429f1657f4857d63e4d8e8a6db5da9a0f75ff": {
      "address": "0x007B120fd352Ab03F83f73BFA1A510DC947De564",
      "txHash": "0x0e5b3fee933ececaa7718af403bbe229ce0b342bde1b9577ba780901fcf8ffcc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "acceptedToken",
            "type": "t_contract(IERC20MELD)5163",
            "src": "../project:/contracts/NFTStoreStorage.sol:21"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "foundationWallet",
            "type": "t_address",
            "src": "../project:/contracts/NFTStoreStorage.sol:25"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "officialWallet",
            "type": "t_address",
            "src": "../project:/contracts/NFTStoreStorage.sol:26"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "itemByNFT",
            "type": "t_mapping(t_contract(IERC721MelandNFT)5100,t_struct(Item)7625_storage)",
            "src": "../project:/contracts/NFTStoreStorage.sol:36"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "tokenIdsByNFT",
            "type": "t_mapping(t_contract(IERC721MelandNFT)5100,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/NFTStoreStorage.sol:39"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "nftByCid",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "src": "../project:/contracts/NFTStoreStorage.sol:43"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "limitPool",
            "type": "t_mapping(t_contract(IERC721MelandNFT)5100,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NFTStoreStorage.sol:48"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "ownerCutPerMillion",
            "type": "t_uint256",
            "src": "../project:/contracts/NFTStoreStorage.sol:52"
          },
          {
            "contract": "NFTStore",
            "label": "itemIdCounters",
            "type": "t_struct(Counter)3794_storage",
            "src": "../project:/contracts/NFTStore.sol:31"
          }
        ],
        "types": {
          "t_struct(Counter)3794_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20MELD)5163": {
            "label": "contract IERC20MELD"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IERC721MelandNFT)5100,t_struct(Item)7625_storage)": {
            "label": "mapping(contract IERC721MelandNFT => struct NFTStoreStorage.Item)"
          },
          "t_contract(IERC721MelandNFT)5100": {
            "label": "contract IERC721MelandNFT"
          },
          "t_struct(Item)7625_storage": {
            "label": "struct NFTStoreStorage.Item",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "tokenIdPool",
                "type": "t_bool"
              },
              {
                "label": "priceInWei",
                "type": "t_uint256"
              },
              {
                "label": "sellsCount",
                "type": "t_uint256"
              },
              {
                "label": "limit",
                "type": "t_uint32"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_contract(IERC721MelandNFT)5100,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(contract IERC721MelandNFT => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)"
          },
          "t_mapping(t_contract(IERC721MelandNFT)5100,t_mapping(t_address,t_uint256))": {
            "label": "mapping(contract IERC721MelandNFT => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "be4e2b2dc20e9d2d05b834fefc67b50803de55e671a7d4f3094585396e3b0db3": {
      "address": "0x9932f04F928a6c02091AbaFCCfa8345570F11aba",
      "txHash": "0xaa9791dce4a0cbce59678c8290888496bade96e057262d9574a931be52a3c40f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "acceptedToken",
            "type": "t_contract(IERC20MELD)5163",
            "src": "../project:/contracts/NFTStoreStorage.sol:21"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "foundationWallet",
            "type": "t_address",
            "src": "../project:/contracts/NFTStoreStorage.sol:25"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "officialWallet",
            "type": "t_address",
            "src": "../project:/contracts/NFTStoreStorage.sol:26"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "itemByNFT",
            "type": "t_mapping(t_contract(IERC721MelandNFT)5100,t_struct(Item)7775_storage)",
            "src": "../project:/contracts/NFTStoreStorage.sol:36"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "tokenIdsByNFT",
            "type": "t_mapping(t_contract(IERC721MelandNFT)5100,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/NFTStoreStorage.sol:39"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "nftByCid",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "src": "../project:/contracts/NFTStoreStorage.sol:43"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "limitPool",
            "type": "t_mapping(t_contract(IERC721MelandNFT)5100,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NFTStoreStorage.sol:48"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "ownerCutPerMillion",
            "type": "t_uint256",
            "src": "../project:/contracts/NFTStoreStorage.sol:52"
          },
          {
            "contract": "NFTStore",
            "label": "itemIdCounters",
            "type": "t_struct(Counter)3794_storage",
            "src": "../project:/contracts/NFTStore.sol:31"
          }
        ],
        "types": {
          "t_struct(Counter)3794_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20MELD)5163": {
            "label": "contract IERC20MELD"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IERC721MelandNFT)5100,t_struct(Item)7775_storage)": {
            "label": "mapping(contract IERC721MelandNFT => struct NFTStoreStorage.Item)"
          },
          "t_contract(IERC721MelandNFT)5100": {
            "label": "contract IERC721MelandNFT"
          },
          "t_struct(Item)7775_storage": {
            "label": "struct NFTStoreStorage.Item",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "tokenIdPool",
                "type": "t_bool"
              },
              {
                "label": "priceInWei",
                "type": "t_uint256"
              },
              {
                "label": "sellsCount",
                "type": "t_uint256"
              },
              {
                "label": "limit",
                "type": "t_uint32"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_contract(IERC721MelandNFT)5100,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(contract IERC721MelandNFT => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)"
          },
          "t_mapping(t_contract(IERC721MelandNFT)5100,t_mapping(t_address,t_uint256))": {
            "label": "mapping(contract IERC721MelandNFT => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "b9e2e0675b7a72596f38f900388c10ebba0e1c1121005a857d194046bcae37f5": {
      "address": "0xbc85A5AE17aaC6D35434DBE92B74d1cf58cD4008",
      "txHash": "0xadb783dcbd48c482192739ebe90a759b01e83724b669d310bba4da71f7944ff3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "NFTFactoryV2",
            "label": "supportNFTs",
            "type": "t_mapping(t_contract(IERC721)4611,t_bool)",
            "src": "../project:/contracts/NFTFactoryV2.sol:19"
          },
          {
            "contract": "NFTFactoryV2",
            "label": "nfts",
            "type": "t_array(t_contract(IERC721)4611)dyn_storage",
            "src": "../project:/contracts/NFTFactoryV2.sol:21"
          }
        ],
        "types": {
          "t_mapping(t_contract(IERC721)4611,t_bool)": {
            "label": "mapping(contract IERC721 => bool)"
          },
          "t_contract(IERC721)4611": {
            "label": "contract IERC721"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_contract(IERC721)4611)dyn_storage": {
            "label": "contract IERC721[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "48413eb177f3fb5a02493b6862795f48cfb296c64859d4fc8c0cef5ee2c7d152": {
      "address": "0x604348A1C08C82b40fA614021075263885B6cc2B",
      "txHash": "0xdf6c5772980adf10019350ab8197bfee79c82ab63036d317a4febbec5c1e1478",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "VestPool",
            "label": "MELDToken",
            "type": "t_contract(ERC20Upgradeable)1749",
            "src": "../project:/contracts/VestPool.sol:17"
          },
          {
            "contract": "VestPool",
            "label": "tokensToVest",
            "type": "t_uint256",
            "src": "../project:/contracts/VestPool.sol:19"
          },
          {
            "contract": "VestPool",
            "label": "vestingId",
            "type": "t_uint256",
            "src": "../project:/contracts/VestPool.sol:20"
          },
          {
            "contract": "VestPool",
            "label": "vestings",
            "type": "t_mapping(t_uint256,t_struct(Vesting)8437_storage)",
            "src": "../project:/contracts/VestPool.sol:43"
          },
          {
            "contract": "VestPool",
            "label": "vcmap",
            "type": "t_mapping(t_address,t_struct(VC)8452_storage)",
            "src": "../project:/contracts/VestPool.sol:44"
          }
        ],
        "types": {
          "t_contract(ERC20Upgradeable)1749": {
            "label": "contract ERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Vesting)8437_storage)": {
            "label": "mapping(uint256 => struct VestPool.Vesting)"
          },
          "t_struct(Vesting)8437_storage": {
            "label": "struct VestPool.Vesting",
            "members": [
              {
                "label": "releaseTime",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "beneficiary",
                "type": "t_address"
              },
              {
                "label": "released",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(VC)8452_storage)": {
            "label": "mapping(address => struct VestPool.VC)"
          },
          "t_struct(VC)8452_storage": {
            "label": "struct VestPool.VC",
            "members": [
              {
                "label": "timeOfTGE",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "cliffMonth",
                "type": "t_uint256"
              },
              {
                "label": "vestingMonth",
                "type": "t_uint256"
              },
              {
                "label": "unlockTGE",
                "type": "t_uint256"
              },
              {
                "label": "beneficiary",
                "type": "t_address"
              },
              {
                "label": "recived",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "2fb88c864eef09ce183407c1e940d77cc4599ddd72b35bf34c902680d10a195a": {
      "address": "0xE7b99fa5D07008890A7d34B9f9D564bfb24d51B8",
      "txHash": "0x912b73f44eb9e47fdf65964ca42b2f40e66e2b13b39a95a730a3be80253aef15",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "acceptedToken",
            "type": "t_contract(IERC20MELD)5175",
            "src": "../project:/contracts/NFTStoreStorage.sol:21"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "foundationWallet",
            "type": "t_address",
            "src": "../project:/contracts/NFTStoreStorage.sol:25"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "officialWallet",
            "type": "t_address",
            "src": "../project:/contracts/NFTStoreStorage.sol:26"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "itemByNFT",
            "type": "t_mapping(t_contract(IERC721MelandNFT)5112,t_struct(Item)8070_storage)",
            "src": "../project:/contracts/NFTStoreStorage.sol:36"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "tokenIdsByNFT",
            "type": "t_mapping(t_contract(IERC721MelandNFT)5112,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/NFTStoreStorage.sol:39"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "nftByCid",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "src": "../project:/contracts/NFTStoreStorage.sol:43"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "limitPool",
            "type": "t_mapping(t_contract(IERC721MelandNFT)5112,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NFTStoreStorage.sol:48"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "ownerCutPerMillion",
            "type": "t_uint256",
            "src": "../project:/contracts/NFTStoreStorage.sol:52"
          },
          {
            "contract": "NFTStore",
            "label": "itemIdCounters",
            "type": "t_struct(Counter)3794_storage",
            "src": "../project:/contracts/NFTStore.sol:31"
          }
        ],
        "types": {
          "t_struct(Counter)3794_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20MELD)5175": {
            "label": "contract IERC20MELD"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IERC721MelandNFT)5112,t_struct(Item)8070_storage)": {
            "label": "mapping(contract IERC721MelandNFT => struct NFTStoreStorage.Item)"
          },
          "t_contract(IERC721MelandNFT)5112": {
            "label": "contract IERC721MelandNFT"
          },
          "t_struct(Item)8070_storage": {
            "label": "struct NFTStoreStorage.Item",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "tokenIdPool",
                "type": "t_bool"
              },
              {
                "label": "priceInWei",
                "type": "t_uint256"
              },
              {
                "label": "sellsCount",
                "type": "t_uint256"
              },
              {
                "label": "limit",
                "type": "t_uint32"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_contract(IERC721MelandNFT)5112,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(contract IERC721MelandNFT => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)"
          },
          "t_mapping(t_contract(IERC721MelandNFT)5112,t_mapping(t_address,t_uint256))": {
            "label": "mapping(contract IERC721MelandNFT => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "3e429965a14d86d437e96dc10aaaac616248fd88292be79537abc8b6ce232d45": {
      "address": "0xb6C1cDc3E38783fE22e92099dcb402bc26B5451b",
      "txHash": "0x6e0dc8f6fa35a76e6402a7cca1bbe8e028c455f2e1bb034b2421eee046128dc1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "BaseLand",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "../project:/contracts/BaseLand.sol:28"
          },
          {
            "contract": "BaseLand",
            "label": "otherLands",
            "type": "t_array(t_contract(IERC721Land)5147)dyn_storage",
            "src": "../project:/contracts/BaseLand.sol:32"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_contract(IERC721Land)5147)dyn_storage": {
            "label": "contract IERC721Land[]"
          },
          "t_contract(IERC721Land)5147": {
            "label": "contract IERC721Land"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "57b54b5d57e5f5f995fcffacbf7da94d665fb9a66c8d05061704f7cf5205039c": {
      "address": "0x2C10b904B6C446533fab5ffeeD2a3839E3a34746",
      "txHash": "0xe337dc42991798720c14741e05c25bc19e96d1b583d7490257af9a2a0426261c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "NFTFactory",
            "label": "supportNFTs",
            "type": "t_mapping(t_contract(IERC721)4611,t_bool)",
            "src": "../project:/contracts/NFTFactory.sol:19"
          }
        ],
        "types": {
          "t_mapping(t_contract(IERC721)4611,t_bool)": {
            "label": "mapping(contract IERC721 => bool)"
          },
          "t_contract(IERC721)4611": {
            "label": "contract IERC721"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "d2cce7273cfe53d379e9172a99cc0f474d37bcca7bc24aa5caa56c3fb6eb150c": {
      "address": "0xB601afC509a6ff3E67062BaC0F9E4CbE6F8B973D",
      "txHash": "0x19a79ec9c28d1342f3082dbe3f9d9da0c38742a878c1dc7471bfcc55f3fb7776",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "VestPool",
            "label": "MELDToken",
            "type": "t_contract(ERC20Upgradeable)1749",
            "src": "../project:/contracts/VestPool.sol:17"
          },
          {
            "contract": "VestPool",
            "label": "tokensToVest",
            "type": "t_uint256",
            "src": "../project:/contracts/VestPool.sol:19"
          },
          {
            "contract": "VestPool",
            "label": "vestingId",
            "type": "t_uint256",
            "src": "../project:/contracts/VestPool.sol:20"
          },
          {
            "contract": "VestPool",
            "label": "vestings",
            "type": "t_mapping(t_uint256,t_struct(Vesting)8530_storage)",
            "src": "../project:/contracts/VestPool.sol:44"
          },
          {
            "contract": "VestPool",
            "label": "vcmap",
            "type": "t_mapping(t_address,t_struct(VC)8545_storage)",
            "src": "../project:/contracts/VestPool.sol:45"
          }
        ],
        "types": {
          "t_contract(ERC20Upgradeable)1749": {
            "label": "contract ERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Vesting)8530_storage)": {
            "label": "mapping(uint256 => struct VestPool.Vesting)"
          },
          "t_struct(Vesting)8530_storage": {
            "label": "struct VestPool.Vesting",
            "members": [
              {
                "label": "releaseTime",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "beneficiary",
                "type": "t_address"
              },
              {
                "label": "released",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(VC)8545_storage)": {
            "label": "mapping(address => struct VestPool.VC)"
          },
          "t_struct(VC)8545_storage": {
            "label": "struct VestPool.VC",
            "members": [
              {
                "label": "timeOfTGE",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "cliffMonth",
                "type": "t_uint256"
              },
              {
                "label": "vestingMonth",
                "type": "t_uint256"
              },
              {
                "label": "unlockTGE",
                "type": "t_uint256"
              },
              {
                "label": "beneficiary",
                "type": "t_address"
              },
              {
                "label": "recived",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "ff8097be2fb8e08f2a529d9168c13921eb3921347f8b0e85174ac7624ac69ab9": {
      "address": "0x345cA3e014Aaf5dcA488057592ee47305D9B3e10",
      "txHash": "0x487ff6f43d11de98fb7ca2699557e68d8185cacb824980b134a4bff9a5c86434",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:50"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "MELD",
            "label": "BP",
            "type": "t_contract(BPContract)4635",
            "src": "../project:/contracts/MELD.sol:21"
          },
          {
            "contract": "MELD",
            "label": "bpEnabled",
            "type": "t_bool",
            "src": "../project:/contracts/MELD.sol:22"
          },
          {
            "contract": "MELD",
            "label": "BPDisabledForever",
            "type": "t_bool",
            "src": "../project:/contracts/MELD.sol:23"
          },
          {
            "contract": "MELD",
            "label": "upgradeDelay",
            "type": "t_uint256",
            "src": "../project:/contracts/MELD.sol:25"
          },
          {
            "contract": "MELD",
            "label": "prepareUpgradeImpl",
            "type": "t_struct(PrepareUpgradeImpl)5487_storage",
            "src": "../project:/contracts/MELD.sol:27"
          }
        ],
        "types": {
          "t_contract(BPContract)4635": {
            "label": "contract BPContract"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(PrepareUpgradeImpl)5487_storage": {
            "label": "struct MELD.PrepareUpgradeImpl",
            "members": [
              {
                "label": "newImplementation",
                "type": "t_address"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "0b29057ebcacc0d56132a25b6203a41217777b6151fa9ad76b3dbad682a88a1a": {
      "address": "0xd82e5Ea55188ad85a0C4DcC9cc3DE88Bde5aDe6C",
      "txHash": "0x98a153dbe1b73b19a525a37acee405beb6cf30338a6d5cd9c4591ef19d5deeb2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:50"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "MELD",
            "label": "BP",
            "type": "t_contract(BPContract)4635",
            "src": "../project:/contracts/MELD.sol:21"
          },
          {
            "contract": "MELD",
            "label": "bpEnabled",
            "type": "t_bool",
            "src": "../project:/contracts/MELD.sol:22"
          },
          {
            "contract": "MELD",
            "label": "BPDisabledForever",
            "type": "t_bool",
            "src": "../project:/contracts/MELD.sol:23"
          },
          {
            "contract": "MELD",
            "label": "upgradeDelay",
            "type": "t_uint256",
            "src": "../project:/contracts/MELD.sol:25"
          },
          {
            "contract": "MELD",
            "label": "prepareUpgradeImpl",
            "type": "t_struct(PrepareUpgradeImpl)5487_storage",
            "src": "../project:/contracts/MELD.sol:27"
          }
        ],
        "types": {
          "t_contract(BPContract)4635": {
            "label": "contract BPContract"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(PrepareUpgradeImpl)5487_storage": {
            "label": "struct MELD.PrepareUpgradeImpl",
            "members": [
              {
                "label": "newImplementation",
                "type": "t_address"
              },
              {
                "label": "createdAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "ef167f0fbab0b16c52bbfef06f919f1b161425e971fbc53ecfc27e99f408a822": {
      "address": "0x376c568555368Cf151EC78aD8bD80f568eED0Dff",
      "txHash": "0x21732ac69bc482ccb00cb94d72cb273258995ee0b9c7b75461fb6a38651febf1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "VestPool",
            "label": "MELDToken",
            "type": "t_contract(ERC20Upgradeable)1749",
            "src": "../project:/contracts/VestPool.sol:17"
          },
          {
            "contract": "VestPool",
            "label": "tokensToVest",
            "type": "t_uint256",
            "src": "../project:/contracts/VestPool.sol:19"
          },
          {
            "contract": "VestPool",
            "label": "vestingId",
            "type": "t_uint256",
            "src": "../project:/contracts/VestPool.sol:20"
          },
          {
            "contract": "VestPool",
            "label": "vestings",
            "type": "t_mapping(t_uint256,t_struct(Vesting)8530_storage)",
            "src": "../project:/contracts/VestPool.sol:44"
          },
          {
            "contract": "VestPool",
            "label": "vcmap",
            "type": "t_mapping(t_address,t_struct(VC)8545_storage)",
            "src": "../project:/contracts/VestPool.sol:45"
          }
        ],
        "types": {
          "t_contract(ERC20Upgradeable)1749": {
            "label": "contract ERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Vesting)8530_storage)": {
            "label": "mapping(uint256 => struct VestPool.Vesting)"
          },
          "t_struct(Vesting)8530_storage": {
            "label": "struct VestPool.Vesting",
            "members": [
              {
                "label": "releaseTime",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "beneficiary",
                "type": "t_address"
              },
              {
                "label": "released",
                "type": "t_bool"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(VC)8545_storage)": {
            "label": "mapping(address => struct VestPool.VC)"
          },
          "t_struct(VC)8545_storage": {
            "label": "struct VestPool.VC",
            "members": [
              {
                "label": "timeOfTGE",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "cliffMonth",
                "type": "t_uint256"
              },
              {
                "label": "vestingMonth",
                "type": "t_uint256"
              },
              {
                "label": "unlockTGE",
                "type": "t_uint256"
              },
              {
                "label": "beneficiary",
                "type": "t_address"
              },
              {
                "label": "recived",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    }
  }
}
