{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xEfeE344F07553D891e7b0459d103e78beb20fEaE",
    "txHash": "0x1889cd77433eabf19e3dfb0f01fd7df4fb24661365c0c847d714c030909b1cc8"
  },
  "proxies": [
    {
      "address": "0xE7b99fa5D07008890A7d34B9f9D564bfb24d51B8",
      "txHash": "0xd687b91f17e1c3669de7a7eb7d269ab827f4e3248ea2ea0884d9de0a763c06f1",
      "kind": "transparent"
    },
    {
      "address": "0xA27d2b5f34c1218a433ae81837471342992CE313",
      "txHash": "0xacd53866a65681ece7432198153e1ad5b903be7fafa36bc0b9b999e38c929a9d",
      "kind": "transparent"
    },
    {
      "address": "0x9bE8b2DdF9D33660314E03710D8A2f4f45e1cFE9",
      "txHash": "0x4470ddaffe8e4078cf4ba3c8cb1a664bfca8af25ff74de2d0978c8026de061e2",
      "kind": "transparent"
    },
    {
      "address": "0x318f97b614c1d1215CFb94d177140B8b3406A7d3",
      "txHash": "0x15d71220b43aadd4ed162aedd91916b15589b35c919ce0770740cebeaa9e4447",
      "kind": "transparent"
    },
    {
      "address": "0xFEd52577ed97C36744BF0d55878c046b3804A696",
      "txHash": "0xf3404f7a9e967428a29f1889db5631de0500b2ea808050ff79cb54ddce183479",
      "kind": "transparent"
    },
    {
      "address": "0x796EE9387cDff8EaD4C58202fA29547A0B9e41CD",
      "txHash": "0x7ef4f210aa11ad4ff9fb85e9dc9c6787c03742fadb67c641bf2b684573158f75",
      "kind": "transparent"
    },
    {
      "address": "0xd82e5Ea55188ad85a0C4DcC9cc3DE88Bde5aDe6C",
      "txHash": "0x572df5d1c635258d490bedc344603ca23da6f43891d8a8bd7e77543e458c74bf",
      "kind": "transparent"
    },
    {
      "address": "0x94D611D0328542A4dd8D1010f2c05D5D1F2473B1",
      "txHash": "0x3cc2630db789b3e62b8e9a5db560e141a6500c9dce4994d0033db5d24a0c1114",
      "kind": "transparent"
    }
  ],
  "impls": {
    "e189ca348cbba97569c7163c6bac67a20dc1da35eaea5a1687cdb2dedb9f7f56": {
      "address": "0xb6C1cDc3E38783fE22e92099dcb402bc26B5451b",
      "txHash": "0xfa043346fcf3896bff337aa2286698dbaf868766b0111c89254118e0146419c9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "Question",
            "label": "questionOnlyChoiceAnswerMapping",
            "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_bool))",
            "src": "../project:/contracts/Question.sol:80"
          },
          {
            "contract": "Question",
            "label": "questionAutherMapping",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/Question.sol:95"
          },
          {
            "contract": "Question",
            "label": "allQuestionOnlyChoices",
            "type": "t_mapping(t_uint256,t_struct(QuestionOnlyChoice)3974_storage)",
            "src": "../project:/contracts/Question.sol:99"
          },
          {
            "contract": "Question",
            "label": "unReadyQuestionOnlyChoiceIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/Question.sol:109"
          },
          {
            "contract": "Question",
            "label": "readyQuestionOnlyChoiceIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/Question.sol:117"
          },
          {
            "contract": "Question",
            "label": "MELDAddress",
            "type": "t_address",
            "src": "../project:/contracts/Question.sol:120"
          },
          {
            "contract": "Question",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)3310_storage",
            "src": "../project:/contracts/Question.sol:120"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_uint8,t_bool))": {
            "label": "mapping(uint256 => mapping(uint8 => bool))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint8,t_bool)": {
            "label": "mapping(uint8 => bool)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(QuestionOnlyChoice)3974_storage)": {
            "label": "mapping(uint256 => struct Question.QuestionOnlyChoice)"
          },
          "t_struct(QuestionOnlyChoice)3974_storage": {
            "label": "struct Question.QuestionOnlyChoice",
            "members": [
              {
                "label": "qid",
                "type": "t_uint256"
              },
              {
                "label": "title",
                "type": "t_string_storage"
              },
              {
                "label": "option1",
                "type": "t_string_storage"
              },
              {
                "label": "option2",
                "type": "t_string_storage"
              },
              {
                "label": "option3",
                "type": "t_string_storage"
              },
              {
                "label": "option4",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_struct(Counter)3310_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "d4ef249ebf83af5a2b78ca25eb10f462dce7e2f8a8e5f4095dcedcbdc3193b5a": {
      "address": "0x839F84E10218Bf498447C320999929D8270702A9",
      "txHash": "0x49a6bca0a0f9f5f4ccfc259d8a4dd9e3741f02199c35cff2eb63af6df6a32b2f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "Question",
            "label": "questionOnlyChoiceAnswerMapping",
            "type": "t_mapping(t_uint256,t_mapping(t_uint8,t_bool))",
            "src": "../project:/contracts/Question.sol:94"
          },
          {
            "contract": "Question",
            "label": "questionAutherMapping",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../project:/contracts/Question.sol:109"
          },
          {
            "contract": "Question",
            "label": "allQuestionOnlyChoices",
            "type": "t_mapping(t_uint256,t_struct(QuestionOnlyChoice)3931_storage)",
            "src": "../project:/contracts/Question.sol:113"
          },
          {
            "contract": "Question",
            "label": "unReadyQuestionOnlyChoiceIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/Question.sol:120"
          },
          {
            "contract": "Question",
            "label": "readyQuestionOnlyChoiceIds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../project:/contracts/Question.sol:130"
          },
          {
            "contract": "Question",
            "label": "MELDAddress",
            "type": "t_address",
            "src": "../project:/contracts/Question.sol:133"
          },
          {
            "contract": "Question",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)3185_storage",
            "src": "../project:/contracts/Question.sol:134"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_mapping(t_uint8,t_bool))": {
            "label": "mapping(uint256 => mapping(uint8 => bool))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint8,t_bool)": {
            "label": "mapping(uint8 => bool)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(QuestionOnlyChoice)3931_storage)": {
            "label": "mapping(uint256 => struct Question.QuestionOnlyChoice)"
          },
          "t_struct(QuestionOnlyChoice)3931_storage": {
            "label": "struct Question.QuestionOnlyChoice",
            "members": [
              {
                "label": "qid",
                "type": "t_uint256"
              },
              {
                "label": "title",
                "type": "t_string_storage"
              },
              {
                "label": "option1",
                "type": "t_string_storage"
              },
              {
                "label": "option2",
                "type": "t_string_storage"
              },
              {
                "label": "option3",
                "type": "t_string_storage"
              },
              {
                "label": "option4",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_struct(Counter)3185_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "339d13fb412a4abd3d758b9ee4489457327aba05a9ed6957308534f436c8ce45": {
      "address": "0xA27deCFe9C47fc61e9bd1db72E99B9bF840f0255",
      "txHash": "0x86755bb36bce3d64f9e88fd1c3b0e8d9f753582de48eb472d16f317e9255a284",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    }
  }
}
