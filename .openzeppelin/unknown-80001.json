{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x839F84E10218Bf498447C320999929D8270702A9",
      "txHash": "0x755237a30824b7827932c4d772939769aceb3c6c9e1d65166815a60cbc5fb4c3",
      "kind": "uups"
    },
    {
      "address": "0xA27d2b5f34c1218a433ae81837471342992CE313",
      "txHash": "0xc7faf6ffe6ba6039ba2f05c9756a9556538ae723bcd206462583c7ba4d16f35a",
      "kind": "uups"
    },
    {
      "address": "0x318f97b614c1d1215CFb94d177140B8b3406A7d3",
      "txHash": "0x60917fac5361ce558bd2641f2de2b7052c3c20bf5b3cf06c9aad13090d471a5c",
      "kind": "uups"
    },
    {
      "address": "0x796EE9387cDff8EaD4C58202fA29547A0B9e41CD",
      "txHash": "0xff76fc69a00c3ff697fd4114963225d5c0e8cf087859b80a8fd00123c3af6f4e",
      "kind": "uups"
    },
    {
      "address": "0x2205BB12b9f6D92813900083E211010D98064a03",
      "txHash": "0x4c8422f643b647e56e29eb293765ce8e5ee2fd82d4415db48a862f8db1fef87e",
      "kind": "uups"
    },
    {
      "address": "0x40aa7b98eD926B7B26648EF5aAfb4b0088C11C3F",
      "txHash": "0x14843b0353acd00e17a438e00eab3f86d7c51851200c9133d3e0fc0fca61bb5b",
      "kind": "uups"
    },
    {
      "address": "0xbc85A5AE17aaC6D35434DBE92B74d1cf58cD4008",
      "txHash": "0x9523cd3d881691768cd0d0ad40f02026e2b8fb4ee678814ce65ea619cc907b8f",
      "kind": "uups"
    },
    {
      "address": "0xB601afC509a6ff3E67062BaC0F9E4CbE6F8B973D",
      "txHash": "0x037580fd156ae1f9a7daf912f7ddb24a0d56646a53c44ae46b8b4c920800cf13",
      "kind": "uups"
    },
    {
      "address": "0x604348A1C08C82b40fA614021075263885B6cc2B",
      "txHash": "0x0aecbb9c149c8942c8814191c86828efcb37233fa418ae026536f1d6135978c7",
      "kind": "uups"
    },
    {
      "address": "0xc1FA5Bf19d906d3759927a263Ab7D1C9b302050F",
      "txHash": "0x1ff08c9662f38ff05f060552169af21700028c1ffd4603c697284c66be9c5b53",
      "kind": "uups"
    },
    {
      "address": "0x852C28448399063a0dFeCaBfcbc07d4561c02ce6",
      "txHash": "0xa4b50a361d95e0d6b145d6cecf26636929e77265a578c29e425d1fde15150ddd",
      "kind": "uups"
    },
    {
      "address": "0x432Ba28AA1f573733cE75B437B3B76A4d03B9015",
      "txHash": "0xd6ed97564c7380a605a41edeeaa36ace75c6ae24defa7419a4d2eafdec75604e",
      "kind": "uups"
    },
    {
      "address": "0xc6839b501420e327145d9341e53367810287D978",
      "txHash": "0xcc128d55e3f6b88f11d693a8aed002e6cd15761e616fa83807fa954d65ace8de",
      "kind": "uups"
    },
    {
      "address": "0xA65e3f9daFA410b77447145b842E1E37f7F7B5cD",
      "txHash": "0x31021f2cc3cff99e55773b128cd0ec11e600832ee6a714aa8b170ce340797beb",
      "kind": "uups"
    },
    {
      "address": "0xDE79C13367790d9cc7d06F8557b38b90a043290f",
      "txHash": "0x74f42d6ec7826202224bf8beda814dfa18c3b52593aeaef83d6e68f796099b9a",
      "kind": "uups"
    },
    {
      "address": "0xdd3f45f5a4840B4eA890a411eC29D3F1F630a70B",
      "txHash": "0x736297458a73c2834dd131fe4a372a3cc080354d1e03943861d8166d85aa2d1c",
      "kind": "uups"
    },
    {
      "address": "0x947eA77D49b3B6Eb3B0004E480c98bD0aD739a0c",
      "txHash": "0xb5a8206505d56b1d6764f94daeddfb1d6cfd80ddf2fe8ffa86e40d77f8fc354a",
      "kind": "uups"
    },
    {
      "address": "0x953fEe0ed2cEB5718eCbFf854C7655659e28F7Dc",
      "txHash": "0xf9187270c2c8d24c93e26e5f92a6530da1e3e10a1fbf482bb3175bc5c147b3c9",
      "kind": "uups"
    },
    {
      "address": "0xf4E7084B98191C29A05D2dCBc064B2207BFcdf92",
      "txHash": "0x00827a3ca867fda059bdba495872aeb9a939c747c4e99f832afee7bf02743d81",
      "kind": "uups"
    },
    {
      "address": "0x3dC42C7df45A1314fD380F03f9F351F99c25A172",
      "txHash": "0x5bd49bec94515f884e910b9cfb0a7a267a9e6b683a540a11e7910939d71dbcca",
      "kind": "uups"
    },
    {
      "address": "0x5d63e9Ede241B3900aF941A2a95432b38ac5b22B",
      "txHash": "0xc88acc345441185b441684b1a350d0ec84b156f72c431e004b5000d3dc0eeb6f",
      "kind": "uups"
    },
    {
      "address": "0x90620D1a6B2B0ea4715B48338d34613CF272E7a8",
      "txHash": "0x9cfbc97d33ce0e9fbf9bf0bd5ce0d3090959eb123da8465845906a89286659bc",
      "kind": "uups"
    },
    {
      "address": "0xA04fC29C1d6be4739894444d7E51B78722132E7B",
      "txHash": "0x8c7fc4569aa2b45f801577f69fd93811d91cc2cdca86f0179d5282f57de405f6",
      "kind": "uups"
    },
    {
      "address": "0x34eBC87c989f49B06FcDC0FbecE00056049E3Ac9",
      "txHash": "0xa10ce8ce9f0c70aef2a417bf2395e2d07982b2653b570d561d5f84b166662140",
      "kind": "uups"
    },
    {
      "address": "0x902DEa0531aF3c11c4fDD6599DeD07b2bAfCbe64",
      "txHash": "0x42dbd7ea3f12a48cbc44c9be5bd88ef46786c2409d002377542fb7da89abdb39",
      "kind": "uups"
    },
    {
      "address": "0xbc7B370F6692a838f280e1114c6862458192D02B",
      "txHash": "0x30de021a0b4b25fc3d150cbc91e8ed358611e942b53e67275173142b1ffd09e3",
      "kind": "uups"
    },
    {
      "address": "0x6E5F5653bC78571974c511DC7324190e9B53C3f3",
      "txHash": "0x9ef59c39f0e4df5f2e6f9e27ed40c4f6ff88ee9fe4eb3bd9e8a5d117fe39dc3d",
      "kind": "uups"
    },
    {
      "address": "0x9F8fd4060ECC0b444651Ebb78AcA47fB554eaF56",
      "txHash": "0xa4f4cb4c8095c5d6dd65032cd0b5843c90fc832b81941818935f7a551b453b2e",
      "kind": "uups"
    },
    {
      "address": "0x5c46c8Af827AF33dcEdF061467C09a770aD988eb",
      "txHash": "0x25c74418e7e5b49bdac4ea0949ab2fb19d0306b36042f5a23ee3dc9df68fb178",
      "kind": "uups"
    },
    {
      "address": "0x4E46eE4e55eF8a65BCF48dF57B135CDbE5eC1c98",
      "txHash": "0x6cbedcfc6602ca33f6838344d5291ab15e449482ee325f04526743b11a67a6a0",
      "kind": "uups"
    },
    {
      "address": "0xbeD0Af2606b377AcBAb8A0B9C62662A9B8488435",
      "txHash": "0x941587e18c5e327e131ffe02620e385b20611229ec3660440a1e5b78aefb1fa3",
      "kind": "uups"
    },
    {
      "address": "0x6282F8Cc981976d9c8c10CC29E48779F2b6FFcC0",
      "txHash": "0x81a482b97344d564bb38d49440a603b47f9ead3905105c8549fae944f98f0d6a",
      "kind": "uups"
    },
    {
      "address": "0x9EE142DdBB1fbC07e5D880f762b7e2fc12bAB635",
      "txHash": "0x2a3a073c2350ded18ea49536a68e232bc90e1073a55c0e44033f2812eb2c41c4",
      "kind": "uups"
    },
    {
      "address": "0xdba2f3e230b9593ADB4Ea65c7a47BB74f790a81a",
      "txHash": "0x6d718f24d87944f4ab1d4fbc0209fa5d59e94be8512ca99b429b6a42caf54b95",
      "kind": "uups"
    },
    {
      "address": "0x622f018f90fE087E74f4Bd0E2347eb67C1D70d1C",
      "txHash": "0xb06201374fa0b5e27dee3a28ebc8c141b414b68ecd8e64851d923079e7de54bf",
      "kind": "uups"
    },
    {
      "address": "0x4f0e8dB885Bc284EA6a7519CD6b7A2d84F4Eeb77",
      "txHash": "0xc0c7d5080639d339c08dd5264875ae36e877c5484f373a1fc794cb94615e123b",
      "kind": "uups"
    },
    {
      "address": "0xA187Dd9F849De0b294B4254DADed65eb18c9323D",
      "txHash": "0x4bcf70b4b6c78cefbc342427cd51206e7eb41e4e99b734d92b4cfda34321ce31",
      "kind": "uups"
    },
    {
      "address": "0x9bA45db7828Ae2f122977071c45a36b7Eef440C8",
      "txHash": "0x788e6fb71eeff2bac139f36a5d52445050798333d21fefc6cb7c5507664733f7",
      "kind": "uups"
    },
    {
      "address": "0x963b04ce89a8c5019f63A761dC08caD9bf825F71",
      "txHash": "0x27923b658b62078835986d00d0cc5f015fff0492a014ae0b7c7b7d3c9c3cd3e9",
      "kind": "uups"
    },
    {
      "address": "0x94A62c42646D6a07A04036e95aAf45E917643e63",
      "txHash": "0xc52d6e0f354b327a4ed84d727fbf4c468c3821bd588ecd7013b466b2af57843d",
      "kind": "uups"
    },
    {
      "address": "0x5A85edaD3e06C91F844261d4AA7dCd4A3051D79F",
      "txHash": "0x40a1a355d3c04985d0834d23dcf72beb13cf517065cc8065fe20674f1a664ddb",
      "kind": "uups"
    },
    {
      "address": "0xD3b605721a2a731b546efD4f7A67ec55658BAE28",
      "txHash": "0x4e685a469815b5eb64f0e4309c683746a48b6330d72f49ec97fccf761b93fb2d",
      "kind": "uups"
    },
    {
      "address": "0xfb4DEe113e25539CB0CD7663C3e101e04ca8b248",
      "txHash": "0x697975f3687abb7da01aff240082345730e24a5ff258aec4a79b94f207428cb8",
      "kind": "uups"
    },
    {
      "address": "0xe323E3A071909972c062C55624e3b61314a38C93",
      "txHash": "0xdb81c93857fb757125e8aa59ac374dd76a9b91c4d771092c4cb04dd7207fd8d6",
      "kind": "uups"
    },
    {
      "address": "0xc26c20B84363cd1F8Cee66c1128a384ce3C9809E",
      "txHash": "0xf163465d59ba0f011c9168613e1a6c7c2693e8eb318c2e5c912f66830a9abbec",
      "kind": "uups"
    },
    {
      "address": "0x78087E9De7340b2BBf0c20db9230A33D8E4273bf",
      "txHash": "0x6a83d7c30748652fc620b8a1b286c9f26131ad0ec1570cac4ee958049b5e7bd3",
      "kind": "uups"
    },
    {
      "address": "0xc289eF4e52De5E7c5bEBA2191e1E71d89b189463",
      "txHash": "0x17018f636f4ddd71bcc04844851736ec36fad7baca2b5f0a35f51a15b73274ac",
      "kind": "uups"
    },
    {
      "address": "0xE96FcD3B5B79e251F6A4D61b1af099f9E6635919",
      "txHash": "0xe4b3239b2b67c9e0bce9144860fc90805255b872e428a8873c95af2524fde0cd",
      "kind": "uups"
    },
    {
      "address": "0x8d41fFe4Eb22b200765A5b5148b44D41c1CC6408",
      "txHash": "0xbeafbe911fdf1ab510082a957d7876787c26d174e0d6b9ff3340db3418d83505",
      "kind": "uups"
    },
    {
      "address": "0x962b597ce160b3730dC8fE06c8EF7b7afe4eBd2b",
      "txHash": "0x944d3b8d4cb3b6b331dc6b7a2578462d71f2902bda761c1bb386972d44296130",
      "kind": "uups"
    },
    {
      "address": "0x5Ec3e739e34717c57D2dD28223321E07d8D4521C",
      "txHash": "0x5aed0f798ea778edb5dd990bbc3442e1da31491586901b3ff19306154ad7868e",
      "kind": "uups"
    },
    {
      "address": "0xfbDD6a2b4F9eBd4A41CE53896fB863C4c479FF63",
      "txHash": "0xb28379293046cda5f76e8de2f6c114df042cfd49455ad5a945d6c3deaaf19291",
      "kind": "uups"
    },
    {
      "address": "0x32b7A796ec7d0B86a89db962cEB1788A540b1Dd9",
      "txHash": "0xbe5675eb5944979453c5064fdca543a5390937de01274a14b32ff2e2131f2dfd",
      "kind": "uups"
    }
  ],
  "impls": {
    "c919d6eeb9797e8c86caac4cc00b2c2682ee34bad95af7cb783a906af732b5f9": {
      "address": "0xd82e5Ea55188ad85a0C4DcC9cc3DE88Bde5aDe6C",
      "txHash": "0x131b6ec20c7cbe058c67e6abc70a07dd821b8030b7b98595384f66b7478b62d2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:50"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4c8b19f2bf2fc44631d6797da6c1d395181c1c20a294288431fcff1cd256c4ad": {
      "address": "0xE7b99fa5D07008890A7d34B9f9D564bfb24d51B8",
      "txHash": "0x6266f28e00ca2d30ddf01fef0bd521504fb1975c7c4b9e92e2b4fc405bad6145",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "acceptedToken",
            "type": "t_contract(IERC20MELD)5021",
            "src": "../project:/contracts/NFTStoreStorage.sol:21"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "foundationWallet",
            "type": "t_address",
            "src": "../project:/contracts/NFTStoreStorage.sol:25"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "officialWallet",
            "type": "t_address",
            "src": "../project:/contracts/NFTStoreStorage.sol:26"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "itemByNFT",
            "type": "t_mapping(t_contract(IERC721MelandNFT)4958,t_struct(Item)6835_storage)",
            "src": "../project:/contracts/NFTStoreStorage.sol:35"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "tokenIdsByNFT",
            "type": "t_mapping(t_contract(IERC721MelandNFT)4958,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/NFTStoreStorage.sol:39"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "ownerCutPerMillion",
            "type": "t_uint256",
            "src": "../project:/contracts/NFTStoreStorage.sol:41"
          },
          {
            "contract": "NFTStore",
            "label": "itemIdCounters",
            "type": "t_struct(Counter)3794_storage",
            "src": "../project:/contracts/NFTStore.sol:31"
          }
        ],
        "types": {
          "t_struct(Counter)3794_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20MELD)5021": {
            "label": "contract IERC20MELD"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IERC721MelandNFT)4958,t_struct(Item)6835_storage)": {
            "label": "mapping(contract IERC721MelandNFT => struct NFTStoreStorage.Item)"
          },
          "t_contract(IERC721MelandNFT)4958": {
            "label": "contract IERC721MelandNFT"
          },
          "t_struct(Item)6835_storage": {
            "label": "struct NFTStoreStorage.Item",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "tokenIdPool",
                "type": "t_bool"
              },
              {
                "label": "priceInWei",
                "type": "t_uint256"
              },
              {
                "label": "sellsCount",
                "type": "t_uint256"
              },
              {
                "label": "limit",
                "type": "t_uint32"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_contract(IERC721MelandNFT)4958,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(contract IERC721MelandNFT => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "8a765346acc07fdf2685774ebb75351faed38895c2d0f5713b39b3a8f3a2ff4c": {
      "address": "0xb6C1cDc3E38783fE22e92099dcb402bc26B5451b",
      "txHash": "0x26414e94a4f56d5649a2e3fefdc8976b1c47058604d8326fa28201e01adf0ce0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "BaseLand",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "../project:/contracts/BaseLand.sol:28"
          },
          {
            "contract": "BaseLand",
            "label": "otherLands",
            "type": "t_array(t_contract(IERC721Land)4993)dyn_storage",
            "src": "../project:/contracts/BaseLand.sol:32"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_contract(IERC721Land)4993)dyn_storage": {
            "label": "contract IERC721Land[]"
          },
          "t_contract(IERC721Land)4993": {
            "label": "contract IERC721Land"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "e19e5de487de15c05fd3233807bcf24140471e020091f54bb0d0d3b1961b8ea5": {
      "address": "0x8E6e62a84B81A1B2B6ec161183b51EC97751A785",
      "txHash": "0x57ec56faed1345082fc7a109e457ee4143100cdf84f9f53b364a519351445c8e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "acceptedToken",
            "type": "t_contract(IERC20MELD)5021",
            "src": "../project:/contracts/NFTStoreStorage.sol:21"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "foundationWallet",
            "type": "t_address",
            "src": "../project:/contracts/NFTStoreStorage.sol:25"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "officialWallet",
            "type": "t_address",
            "src": "../project:/contracts/NFTStoreStorage.sol:26"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "itemByNFT",
            "type": "t_mapping(t_contract(IERC721MelandNFT)4958,t_struct(Item)6945_storage)",
            "src": "../project:/contracts/NFTStoreStorage.sol:36"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "tokenIdsByNFT",
            "type": "t_mapping(t_contract(IERC721MelandNFT)4958,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/NFTStoreStorage.sol:36"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "limitPool",
            "type": "t_mapping(t_contract(IERC721MelandNFT)4958,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NFTStoreStorage.sol:44"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "ownerCutPerMillion",
            "type": "t_uint256",
            "src": "../project:/contracts/NFTStoreStorage.sol:47"
          },
          {
            "contract": "NFTStore",
            "label": "itemIdCounters",
            "type": "t_struct(Counter)3794_storage",
            "src": "../project:/contracts/NFTStore.sol:31"
          }
        ],
        "types": {
          "t_struct(Counter)3794_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20MELD)5021": {
            "label": "contract IERC20MELD"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IERC721MelandNFT)4958,t_struct(Item)6945_storage)": {
            "label": "mapping(contract IERC721MelandNFT => struct NFTStoreStorage.Item)"
          },
          "t_contract(IERC721MelandNFT)4958": {
            "label": "contract IERC721MelandNFT"
          },
          "t_struct(Item)6945_storage": {
            "label": "struct NFTStoreStorage.Item",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "tokenIdPool",
                "type": "t_bool"
              },
              {
                "label": "priceInWei",
                "type": "t_uint256"
              },
              {
                "label": "sellsCount",
                "type": "t_uint256"
              },
              {
                "label": "limit",
                "type": "t_uint32"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_contract(IERC721MelandNFT)4958,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(contract IERC721MelandNFT => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_contract(IERC721MelandNFT)4958,t_mapping(t_address,t_uint256))": {
            "label": "mapping(contract IERC721MelandNFT => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "542945ad73d679515389138322ecb8b8fb9623944147a38bffdc0d6e6fc9433e": {
      "address": "0x840d87BF609978f0AeEE578FB5039227F11319eC",
      "txHash": "0x0aa5eaa07bf42e550fe02a8c079e4b6f982a29f82dfbc6dfac31c60f7de69549",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "acceptedToken",
            "type": "t_contract(IERC20MELD)5021",
            "src": "../project:/contracts/MarketplaceStorage.sol:9"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "foundationWallet",
            "type": "t_address",
            "src": "../project:/contracts/MarketplaceStorage.sol:13"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "officialWallet",
            "type": "t_address",
            "src": "../project:/contracts/MarketplaceStorage.sol:19"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "orderByAssetId",
            "type": "t_mapping(t_contract(IERC721)4611,t_mapping(t_uint256,t_struct(Order)5941_storage))",
            "src": "../project:/contracts/MarketplaceStorage.sol:44"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "ownerCutPerMillion",
            "type": "t_uint256",
            "src": "../project:/contracts/MarketplaceStorage.sol:50"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "publicationFeeInWei",
            "type": "t_uint256",
            "src": "../project:/contracts/MarketplaceStorage.sol:55"
          }
        ],
        "types": {
          "t_contract(IERC20MELD)5021": {
            "label": "contract IERC20MELD"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IERC721)4611,t_mapping(t_uint256,t_struct(Order)5941_storage))": {
            "label": "mapping(contract IERC721 => mapping(uint256 => struct MarketplaceStorage.Order))"
          },
          "t_contract(IERC721)4611": {
            "label": "contract IERC721"
          },
          "t_mapping(t_uint256,t_struct(Order)5941_storage)": {
            "label": "mapping(uint256 => struct MarketplaceStorage.Order)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Order)5941_storage": {
            "label": "struct MarketplaceStorage.Order",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "nftAddress",
                "type": "t_contract(IERC721)4611"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "expiresAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "32924104186db8c7d6d1f6cc58b4c020113cda49d3b6c31170b4f171d248020b": {
      "address": "0x22a0FA166eDC1B0486870deBCc93e7c0DD2baC98",
      "txHash": "0x5ffa1267aa5425ccc200de6289bc10087a6af51af9b7c9556560f9895f5ba487",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "NFTFactory",
            "label": "supportNFTs",
            "type": "t_mapping(t_contract(IERC721)4611,t_bool)",
            "src": "../project:/contracts/NFTFactory.sol:19"
          }
        ],
        "types": {
          "t_mapping(t_contract(IERC721)4611,t_bool)": {
            "label": "mapping(contract IERC721 => bool)"
          },
          "t_contract(IERC721)4611": {
            "label": "contract IERC721"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "4239f98e3ca3ae6b36f3befa5183a05cc1a1e1460feb672f878e19628974528e": {
      "address": "0x31fdD2149087b222026F5EEB66647D9BCc78efe3",
      "txHash": "0xd9972b756c22188746ad70908011eba21a1295570f4f402ebbe476d207b0936c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "BaseLand",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "../project:/contracts/BaseLand.sol:28"
          },
          {
            "contract": "BaseLand",
            "label": "otherLands",
            "type": "t_array(t_contract(IERC721Land)4993)dyn_storage",
            "src": "../project:/contracts/BaseLand.sol:32"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_contract(IERC721Land)4993)dyn_storage": {
            "label": "contract IERC721Land[]"
          },
          "t_contract(IERC721Land)4993": {
            "label": "contract IERC721Land"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "7d57088680b12ed367531289de60594bcfc8e08f3f778240db3eabdba8c2e71e": {
      "address": "0x199b86f512B0556255b264c6566F5140C557F540",
      "txHash": "0x8c831dc0ce03b26f7a7a52623fb559fca901c466b0f57077af996b493278187c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:50"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6579775473c6dee0909ee8e7381a0af2a2827b2a1e6eee2c2e1c4563eb0e2402": {
      "address": "0x127a031B700D5a84a62e3aD28A68c560A9cAe9d6",
      "txHash": "0x8faf5af829482602899e2f9ba73cf835d8e015506152a53f9c418af63bc72f95",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "acceptedToken",
            "type": "t_contract(IERC20MELD)5032",
            "src": "../project:/contracts/NFTStoreStorage.sol:21"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "foundationWallet",
            "type": "t_address",
            "src": "../project:/contracts/NFTStoreStorage.sol:25"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "officialWallet",
            "type": "t_address",
            "src": "../project:/contracts/NFTStoreStorage.sol:26"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "itemByNFT",
            "type": "t_mapping(t_contract(IERC721MelandNFT)4969,t_struct(Item)6971_storage)",
            "src": "../project:/contracts/NFTStoreStorage.sol:36"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "tokenIdsByNFT",
            "type": "t_mapping(t_contract(IERC721MelandNFT)4969,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/NFTStoreStorage.sol:36"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "limitPool",
            "type": "t_mapping(t_contract(IERC721MelandNFT)4969,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NFTStoreStorage.sol:44"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "ownerCutPerMillion",
            "type": "t_uint256",
            "src": "../project:/contracts/NFTStoreStorage.sol:47"
          },
          {
            "contract": "NFTStore",
            "label": "itemIdCounters",
            "type": "t_struct(Counter)3794_storage",
            "src": "../project:/contracts/NFTStore.sol:31"
          }
        ],
        "types": {
          "t_struct(Counter)3794_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20MELD)5032": {
            "label": "contract IERC20MELD"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IERC721MelandNFT)4969,t_struct(Item)6971_storage)": {
            "label": "mapping(contract IERC721MelandNFT => struct NFTStoreStorage.Item)"
          },
          "t_contract(IERC721MelandNFT)4969": {
            "label": "contract IERC721MelandNFT"
          },
          "t_struct(Item)6971_storage": {
            "label": "struct NFTStoreStorage.Item",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "tokenIdPool",
                "type": "t_bool"
              },
              {
                "label": "priceInWei",
                "type": "t_uint256"
              },
              {
                "label": "sellsCount",
                "type": "t_uint256"
              },
              {
                "label": "limit",
                "type": "t_uint32"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_contract(IERC721MelandNFT)4969,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(contract IERC721MelandNFT => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_contract(IERC721MelandNFT)4969,t_mapping(t_address,t_uint256))": {
            "label": "mapping(contract IERC721MelandNFT => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "530415187f5a8a2beba54f3d39c828ccd11314746bcc5647f9e548226739b5a1": {
      "address": "0x618d68804d09Dd67B1a124cF52d31c9D8cB8F23E",
      "txHash": "0xdcb5d66a2c5bbf87494f8b121b3d754d408b5fbf87df471f4a0df86272145ad7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "BaseLand",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "../project:/contracts/BaseLand.sol:28"
          },
          {
            "contract": "BaseLand",
            "label": "otherLands",
            "type": "t_array(t_contract(IERC721Land)5004)dyn_storage",
            "src": "../project:/contracts/BaseLand.sol:32"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_contract(IERC721Land)5004)dyn_storage": {
            "label": "contract IERC721Land[]"
          },
          "t_contract(IERC721Land)5004": {
            "label": "contract IERC721Land"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "6187461ab9a61c195c07776ac930f077347c3a57564f8a6abdc8619456f4caff": {
      "address": "0xD74cB6C084c697E8b18194b8a64e6203b6fc9fe8",
      "txHash": "0x5c78c2e5448577f78b5c9a5613f201347f86940341f9aa78d611e720e0821b4c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:50"
          },
          {
            "contract": "LiquidityTrap",
            "label": "trapAmount",
            "type": "t_uint128",
            "src": "../project:/contracts/LiquidityTrap.sol:17"
          },
          {
            "contract": "LiquidityTrap",
            "label": "liquidityAddedBlock",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityTrap.sol:18"
          },
          {
            "contract": "LiquidityTrap",
            "label": "bought",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityTrap.sol:19"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "2d2c44588aa6d11008bb5d04cd02e75d9568ea19dfe59944010d900963268aa0": {
      "address": "0x924dB3F51836ED4b0b772f859bE738647232974f",
      "txHash": "0x55b3e678dda9fc7e99ab3b3c3aa6d58bf2a3888aaf62082d012233b0c776ebb3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "acceptedToken",
            "type": "t_contract(IERC20MELD)5119",
            "src": "../project:/contracts/NFTStoreStorage.sol:21"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "foundationWallet",
            "type": "t_address",
            "src": "../project:/contracts/NFTStoreStorage.sol:25"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "officialWallet",
            "type": "t_address",
            "src": "../project:/contracts/NFTStoreStorage.sol:26"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "itemByNFT",
            "type": "t_mapping(t_contract(IERC721MelandNFT)5056,t_struct(Item)7365_storage)",
            "src": "../project:/contracts/NFTStoreStorage.sol:36"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "tokenIdsByNFT",
            "type": "t_mapping(t_contract(IERC721MelandNFT)5056,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/NFTStoreStorage.sol:36"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "limitPool",
            "type": "t_mapping(t_contract(IERC721MelandNFT)5056,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NFTStoreStorage.sol:44"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "ownerCutPerMillion",
            "type": "t_uint256",
            "src": "../project:/contracts/NFTStoreStorage.sol:47"
          },
          {
            "contract": "NFTStore",
            "label": "itemIdCounters",
            "type": "t_struct(Counter)3794_storage",
            "src": "../project:/contracts/NFTStore.sol:31"
          }
        ],
        "types": {
          "t_struct(Counter)3794_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20MELD)5119": {
            "label": "contract IERC20MELD"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IERC721MelandNFT)5056,t_struct(Item)7365_storage)": {
            "label": "mapping(contract IERC721MelandNFT => struct NFTStoreStorage.Item)"
          },
          "t_contract(IERC721MelandNFT)5056": {
            "label": "contract IERC721MelandNFT"
          },
          "t_struct(Item)7365_storage": {
            "label": "struct NFTStoreStorage.Item",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "tokenIdPool",
                "type": "t_bool"
              },
              {
                "label": "priceInWei",
                "type": "t_uint256"
              },
              {
                "label": "sellsCount",
                "type": "t_uint256"
              },
              {
                "label": "limit",
                "type": "t_uint32"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_contract(IERC721MelandNFT)5056,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(contract IERC721MelandNFT => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_contract(IERC721MelandNFT)5056,t_mapping(t_address,t_uint256))": {
            "label": "mapping(contract IERC721MelandNFT => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "5a0fd9529354be3399aaf28c57b15a045cdd28164c61f8946d1f57ea0ac7e529": {
      "address": "0x095181FF4f1210E4001886e2bdB162ba693438E8",
      "txHash": "0xb4e5cbb462301550766876e835a5ba9ef076245176e57d6057f8e234f43ae3d4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "BaseLand",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "../project:/contracts/BaseLand.sol:28"
          },
          {
            "contract": "BaseLand",
            "label": "otherLands",
            "type": "t_array(t_contract(IERC721Land)5091)dyn_storage",
            "src": "../project:/contracts/BaseLand.sol:32"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_contract(IERC721Land)5091)dyn_storage": {
            "label": "contract IERC721Land[]"
          },
          "t_contract(IERC721Land)5091": {
            "label": "contract IERC721Land"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "a163f0dde55aa22139f22580479c25b2e2b245d45754e78058538d4200cbde8c": {
      "address": "0xe738EFa2Aa2AF8B44a6A4B2AF6662044F0283f18",
      "txHash": "0x1c59981d7d15a65c89f8de37c374271699e26fb7e9726c949a93a3a46dd0ffbe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "acceptedToken",
            "type": "t_contract(IERC20MELD)5119",
            "src": "../project:/contracts/MarketplaceStorage.sol:9"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "foundationWallet",
            "type": "t_address",
            "src": "../project:/contracts/MarketplaceStorage.sol:13"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "officialWallet",
            "type": "t_address",
            "src": "../project:/contracts/MarketplaceStorage.sol:19"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "orderByAssetId",
            "type": "t_mapping(t_contract(IERC721)4611,t_mapping(t_uint256,t_struct(Order)6346_storage))",
            "src": "../project:/contracts/MarketplaceStorage.sol:44"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "ownerCutPerMillion",
            "type": "t_uint256",
            "src": "../project:/contracts/MarketplaceStorage.sol:50"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "publicationFeeInWei",
            "type": "t_uint256",
            "src": "../project:/contracts/MarketplaceStorage.sol:55"
          }
        ],
        "types": {
          "t_contract(IERC20MELD)5119": {
            "label": "contract IERC20MELD"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IERC721)4611,t_mapping(t_uint256,t_struct(Order)6346_storage))": {
            "label": "mapping(contract IERC721 => mapping(uint256 => struct MarketplaceStorage.Order))"
          },
          "t_contract(IERC721)4611": {
            "label": "contract IERC721"
          },
          "t_mapping(t_uint256,t_struct(Order)6346_storage)": {
            "label": "mapping(uint256 => struct MarketplaceStorage.Order)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Order)6346_storage": {
            "label": "struct MarketplaceStorage.Order",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "nftAddress",
                "type": "t_contract(IERC721)4611"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "expiresAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "f3fc782a1f1e553e2e2b8e47fe305434edb80baeafc128debe291de8c4bdc721": {
      "address": "0x43f44C527eae47eA9b2B3e483A3122BF8286E03E",
      "txHash": "0xd85e4e50a26f3668bc30fff62723d9a64b478af438aae0b703d74216ccf03a89",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:50"
          },
          {
            "contract": "LiquidityTrap",
            "label": "trapAmount",
            "type": "t_uint128",
            "src": "../project:/contracts/LiquidityTrap.sol:17"
          },
          {
            "contract": "LiquidityTrap",
            "label": "liquidityAddedBlock",
            "type": "t_uint256",
            "src": "../project:/contracts/LiquidityTrap.sol:18"
          },
          {
            "contract": "LiquidityTrap",
            "label": "bought",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../project:/contracts/LiquidityTrap.sol:19"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "69e9a00421b9e5344b2f92fbb2fc280f98c0cffdddd5d69f1b052d6287023d8a": {
      "address": "0x0973EbF18d2729577563a11C277240C721d8D230",
      "txHash": "0xc6d333f780be9139746064d1182b3b7e02e26b64cd25eba6304cb44f1a2f9cae",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "acceptedToken",
            "type": "t_contract(IERC20MELD)5163",
            "src": "../project:/contracts/NFTStoreStorage.sol:21"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "foundationWallet",
            "type": "t_address",
            "src": "../project:/contracts/NFTStoreStorage.sol:25"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "officialWallet",
            "type": "t_address",
            "src": "../project:/contracts/NFTStoreStorage.sol:26"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "itemByNFT",
            "type": "t_mapping(t_contract(IERC721MelandNFT)5100,t_struct(Item)7615_storage)",
            "src": "../project:/contracts/NFTStoreStorage.sol:36"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "tokenIdsByNFT",
            "type": "t_mapping(t_contract(IERC721MelandNFT)5100,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/NFTStoreStorage.sol:39"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "nftByCid",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "src": "../project:/contracts/NFTStoreStorage.sol:43"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "limitPool",
            "type": "t_mapping(t_contract(IERC721MelandNFT)5100,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NFTStoreStorage.sol:48"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "ownerCutPerMillion",
            "type": "t_uint256",
            "src": "../project:/contracts/NFTStoreStorage.sol:52"
          },
          {
            "contract": "NFTStore",
            "label": "itemIdCounters",
            "type": "t_struct(Counter)3794_storage",
            "src": "../project:/contracts/NFTStore.sol:31"
          }
        ],
        "types": {
          "t_struct(Counter)3794_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20MELD)5163": {
            "label": "contract IERC20MELD"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IERC721MelandNFT)5100,t_struct(Item)7615_storage)": {
            "label": "mapping(contract IERC721MelandNFT => struct NFTStoreStorage.Item)"
          },
          "t_contract(IERC721MelandNFT)5100": {
            "label": "contract IERC721MelandNFT"
          },
          "t_struct(Item)7615_storage": {
            "label": "struct NFTStoreStorage.Item",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "tokenIdPool",
                "type": "t_bool"
              },
              {
                "label": "priceInWei",
                "type": "t_uint256"
              },
              {
                "label": "sellsCount",
                "type": "t_uint256"
              },
              {
                "label": "limit",
                "type": "t_uint32"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_contract(IERC721MelandNFT)5100,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(contract IERC721MelandNFT => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)"
          },
          "t_mapping(t_contract(IERC721MelandNFT)5100,t_mapping(t_address,t_uint256))": {
            "label": "mapping(contract IERC721MelandNFT => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "3e429965a14d86d437e96dc10aaaac616248fd88292be79537abc8b6ce232d45": {
      "address": "0xF1cc304C8f517C7192C27A4EEb642DfE7C19342b",
      "txHash": "0xb5e7aef66b9fda0ce5a1e527f19b82d54e9aca00b66b7db996cdd4fc029cb8fa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:27"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:30"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:33"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "contract": "BaseLand",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "../project:/contracts/BaseLand.sol:28"
          },
          {
            "contract": "BaseLand",
            "label": "otherLands",
            "type": "t_array(t_contract(IERC721Land)5135)dyn_storage",
            "src": "../project:/contracts/BaseLand.sol:32"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_contract(IERC721Land)5135)dyn_storage": {
            "label": "contract IERC721Land[]"
          },
          "t_contract(IERC721Land)5135": {
            "label": "contract IERC721Land"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "a25d4d581f3def5b42f3a6874a96e87344f9bf91418ff747483e3147a14ad527": {
      "address": "0xEf8813A46BfaB446Ec152334FB22d6Bb6a5b991a",
      "txHash": "0x201935eb985d543282d6d9cf228f95eaf9dddf318d9a186f53bb8debfa9c3984",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "acceptedToken",
            "type": "t_contract(IERC20MELD)5163",
            "src": "../project:/contracts/MarketplaceStorage.sol:9"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "foundationWallet",
            "type": "t_address",
            "src": "../project:/contracts/MarketplaceStorage.sol:13"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "officialWallet",
            "type": "t_address",
            "src": "../project:/contracts/MarketplaceStorage.sol:19"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "orderByAssetId",
            "type": "t_mapping(t_contract(IERC721)4611,t_mapping(t_uint256,t_struct(Order)6390_storage))",
            "src": "../project:/contracts/MarketplaceStorage.sol:44"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "ownerCutPerMillion",
            "type": "t_uint256",
            "src": "../project:/contracts/MarketplaceStorage.sol:50"
          },
          {
            "contract": "MarketplaceStorage",
            "label": "publicationFeeInWei",
            "type": "t_uint256",
            "src": "../project:/contracts/MarketplaceStorage.sol:55"
          }
        ],
        "types": {
          "t_contract(IERC20MELD)5163": {
            "label": "contract IERC20MELD"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IERC721)4611,t_mapping(t_uint256,t_struct(Order)6390_storage))": {
            "label": "mapping(contract IERC721 => mapping(uint256 => struct MarketplaceStorage.Order))"
          },
          "t_contract(IERC721)4611": {
            "label": "contract IERC721"
          },
          "t_mapping(t_uint256,t_struct(Order)6390_storage)": {
            "label": "mapping(uint256 => struct MarketplaceStorage.Order)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Order)6390_storage": {
            "label": "struct MarketplaceStorage.Order",
            "members": [
              {
                "label": "id",
                "type": "t_bytes32"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "assetId",
                "type": "t_uint256"
              },
              {
                "label": "nftAddress",
                "type": "t_contract(IERC721)4611"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "expiresAt",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "57b54b5d57e5f5f995fcffacbf7da94d665fb9a66c8d05061704f7cf5205039c": {
      "address": "0x2546701776B8Fc049584640A8f0A1d0b192B922D",
      "txHash": "0x9f637244fbf6469458c303c1148dcdbcd86de30bf3c3aaf6da3d5913b9ad55d7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "NFTFactory",
            "label": "supportNFTs",
            "type": "t_mapping(t_contract(IERC721)4611,t_bool)",
            "src": "../project:/contracts/NFTFactory.sol:19"
          }
        ],
        "types": {
          "t_mapping(t_contract(IERC721)4611,t_bool)": {
            "label": "mapping(contract IERC721 => bool)"
          },
          "t_contract(IERC721)4611": {
            "label": "contract IERC721"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "be4e2b2dc20e9d2d05b834fefc67b50803de55e671a7d4f3094585396e3b0db3": {
      "address": "0x99F308742b9a61e0F0bF21Da258CFF2595dA3EeF",
      "txHash": "0xc5c5ca73c211e0b38b99770bda1a11d4750cd9038f0601f228d75e4fea995157",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "acceptedToken",
            "type": "t_contract(IERC20MELD)5163",
            "src": "../project:/contracts/NFTStoreStorage.sol:21"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "foundationWallet",
            "type": "t_address",
            "src": "../project:/contracts/NFTStoreStorage.sol:25"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "officialWallet",
            "type": "t_address",
            "src": "../project:/contracts/NFTStoreStorage.sol:26"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "itemByNFT",
            "type": "t_mapping(t_contract(IERC721MelandNFT)5100,t_struct(Item)7775_storage)",
            "src": "../project:/contracts/NFTStoreStorage.sol:36"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "tokenIdsByNFT",
            "type": "t_mapping(t_contract(IERC721MelandNFT)5100,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/NFTStoreStorage.sol:39"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "nftByCid",
            "type": "t_mapping(t_string_memory_ptr,t_address)",
            "src": "../project:/contracts/NFTStoreStorage.sol:43"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "limitPool",
            "type": "t_mapping(t_contract(IERC721MelandNFT)5100,t_mapping(t_address,t_uint256))",
            "src": "../project:/contracts/NFTStoreStorage.sol:48"
          },
          {
            "contract": "NFTStoreStorage",
            "label": "ownerCutPerMillion",
            "type": "t_uint256",
            "src": "../project:/contracts/NFTStoreStorage.sol:52"
          },
          {
            "contract": "NFTStore",
            "label": "itemIdCounters",
            "type": "t_struct(Counter)3794_storage",
            "src": "../project:/contracts/NFTStore.sol:31"
          }
        ],
        "types": {
          "t_struct(Counter)3794_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20MELD)5163": {
            "label": "contract IERC20MELD"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_contract(IERC721MelandNFT)5100,t_struct(Item)7775_storage)": {
            "label": "mapping(contract IERC721MelandNFT => struct NFTStoreStorage.Item)"
          },
          "t_contract(IERC721MelandNFT)5100": {
            "label": "contract IERC721MelandNFT"
          },
          "t_struct(Item)7775_storage": {
            "label": "struct NFTStoreStorage.Item",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "tokenIdPool",
                "type": "t_bool"
              },
              {
                "label": "priceInWei",
                "type": "t_uint256"
              },
              {
                "label": "sellsCount",
                "type": "t_uint256"
              },
              {
                "label": "limit",
                "type": "t_uint32"
              },
              {
                "label": "description",
                "type": "t_string_storage"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_contract(IERC721MelandNFT)5100,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(contract IERC721MelandNFT => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_string_memory_ptr,t_address)": {
            "label": "mapping(string => address)"
          },
          "t_mapping(t_contract(IERC721MelandNFT)5100,t_mapping(t_address,t_uint256))": {
            "label": "mapping(contract IERC721MelandNFT => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "b9e2e0675b7a72596f38f900388c10ebba0e1c1121005a857d194046bcae37f5": {
      "address": "0x75bFbA7d81612A9E89Ca0fCFa8Dc38d343c7d217",
      "txHash": "0xf617d55078d0ffdf3094ec96759f2ab6bb1c3dca860b3518ad1d4a3e53c3b029",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "NFTFactoryV2",
            "label": "supportNFTs",
            "type": "t_mapping(t_contract(IERC721)4611,t_bool)",
            "src": "../project:/contracts/NFTFactoryV2.sol:19"
          },
          {
            "contract": "NFTFactoryV2",
            "label": "nfts",
            "type": "t_array(t_contract(IERC721)4611)dyn_storage",
            "src": "../project:/contracts/NFTFactoryV2.sol:21"
          }
        ],
        "types": {
          "t_mapping(t_contract(IERC721)4611,t_bool)": {
            "label": "mapping(contract IERC721 => bool)"
          },
          "t_contract(IERC721)4611": {
            "label": "contract IERC721"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_contract(IERC721)4611)dyn_storage": {
            "label": "contract IERC721[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    }
  }
}
