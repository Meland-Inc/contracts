{
  "contractName": "LiquidityTrap",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "TRAP_BLOCKS",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "bought",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidityAddedBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "trapAmount",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_trapAmount",
          "type": "uint128"
        }
      ],
      "name": "setTrapAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isUniswap",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isPancake",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isPool",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TRAP_BLOCKS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bought\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isPancake\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isPool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isUniswap\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityAddedBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_trapAmount\",\"type\":\"uint128\"}],\"name\":\"setTrapAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trapAmount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/LiquidityTrap.sol\":\"LiquidityTrap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xd0fc241d70f27a08c43c0c9e5a15d2661a643d8db46c219b2322bef8a34bbdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://272fdc13ea6d62470f1009a1adf0d28b67be2c75415e9f24eee38164dd69fb04\",\"dweb:/ipfs/QmfZDcxQEFdAi1AwMTHozZJrwFoUCEZnbcJcRhqmahuTBR\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x6287586f5e4a103c89d4dda41406136cdf283cc625bd1ebfdf1468aae5bfe449\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30e2e913292e86a9bce50d51882b23ef57ae4c811003ec96cf39b1781f68b202\",\"dweb:/ipfs/QmUXqjyiAHbEMJ4zLfaduWYuVwp1HozqVhtChe9VfdpjoV\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x47852df4456c4b7e2fbda473b1c237f24991d2ceb1c7cba8d90e229bf6add473\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb0411367470219c3994c3401b955531a39852f3ca9434961fc83a72c74ef199\",\"dweb:/ipfs/QmPdnTxHy6kyaXF8ncQ2fwbGjTj9ngCCFDnq1NX2JMBCbn\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xb34b8dc5fbc20d8d7e5ed2fd1a0ed87e1fb024d3ae0c61fd4368565ce733aa7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff7fe6e13cf851da3cdc27c7c4c58249ca6a53765f1bb40a5b8ec87b1b84599\",\"dweb:/ipfs/QmZ7JzzhpEMBgk7p9TVzwXDduvJJQtZhQwF3R1vZ9EdgMP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xc659324888f15893e60410d8b43ee4a9ed24cd5cdc074442837683ddbfdbcfa5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c4a449a96448cec5badf91fec0c437f87f2fa0fef9ab7c179e555ad474c00b2\",\"dweb:/ipfs/QmZZvbpp14FGJ6GM7tbY9WhHhtkW7zjvuvFcGvHZddSvLF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x0c85e40b29481eadb132cb5eb973d27b4567098f4bc257b250ee540d8d309a00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24a403828551f24407f9d90de2736d3a17bde482fa0790b63c52a00b89897fff\",\"dweb:/ipfs/QmWMGs1FTyywkd42jPqhQeyXa5asgnidaHfxk18aJuwWDP\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf308459c5ea0cde035b8c3b3d9144086a2c777c46dbe401f634e75dea1aba1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51755c6934703b61e7edb7d3edef985f429be6bef384b15e1b616ea65176934\",\"dweb:/ipfs/QmQVb4hBJcTMthp5hJquUy5tPsDwgiKQ8nGExckR75G88u\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x23ee0c2d7bcce5d09d40f3a14c91f29000d3a83b8a9c26440cd1b3748a93ea47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f7975f651c46b43acd346786d7cf5f78027d21a2dd694377b271ba97209ada\",\"dweb:/ipfs/QmNS7ppgMivJCJgu6JzEN8MvjWM7ctsDREcNyHTcZzYXRG\"]},\"project:/contracts/ISwap.sol\":{\"keccak256\":\"0xfb67becde3f2e5429f3a8d4ed22c2b80348aae51c12c04d313511478c790f021\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://742927f569741fc914be4242e763dc971fd1adae4cb25de8ff749c51a6e5cdc4\",\"dweb:/ipfs/QmNSyahqWQPGUUGxP8pM7ysEeMLVeoCzxX6tmeNSrrgVCk\"]},\"project:/contracts/LiquidityTrap.sol\":{\"keccak256\":\"0x2f06ac1d3ca9f45aaab52f1da5e3de9c259fef740d8f22c22b4bcbc5475f6253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ac0c4c25bb54efbf51ba6f904969737c31d9b977cca841b07b97ba57fcc3c16\",\"dweb:/ipfs/QmVJfc1f1Rkzx5NBwapKLybhyM1778JrcwX2HnfdVMeSKr\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611183806100206000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806370a08231116100c3578063a9059cbb1161007c578063a9059cbb146102fe578063bcff895a14610311578063c4cb3b091461031a578063dd62ed3e14610353578063f2fde38b1461038c578063fe0cf2541461039f57600080fd5b806370a0823114610284578063715018a6146102ad57806379cc6790146102b55780638da5cb5b146102c857806395d89b41146102e3578063a457c2d7146102eb57600080fd5b8063313ce56711610115578063313ce567146101eb578063395093511461020057806342966c681461021357806346022c8a146102265780635b16ebb714610251578063667022fd1461026457600080fd5b806306fdde031461015d578063095ea7b31461017b5780630df5d15e1461019e57806318160ddd146101b3578063199752f3146101c557806323b872dd146101d8575b600080fd5b6101656103a7565b6040516101729190610ef7565b60405180910390f35b61018e610189366004610f46565b610439565b6040519015158152602001610172565b6101b16101ac366004610f70565b61044f565b005b6067545b604051908152602001610172565b61018e6101d3366004610f70565b6104f1565b61018e6101e6366004610f92565b610574565b60125b60405160ff9091168152602001610172565b61018e61020e366004610f46565b610623565b6101b1610221366004610fce565b61065f565b60c954610239906001600160801b031681565b6040516001600160801b039091168152602001610172565b61018e61025f366004610f70565b61066c565b6101b7610272366004610f70565b60cb6020526000908152604090205481565b6101b7610292366004610f70565b6001600160a01b031660009081526065602052604090205490565b6101b16107ce565b6101b16102c3366004610f46565b610834565b6033546040516001600160a01b039091168152602001610172565b6101656108ba565b61018e6102f9366004610f46565b6108c9565b61018e61030c366004610f46565b610962565b6101b760ca5481565b6101b1610328366004610fe7565b60c980546fffffffffffffffffffffffffffffffff19166001600160801b0392909216919091179055565b6101b7610361366004611010565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b6101b161039a366004610f70565b61096f565b6101ee603c81565b6060606880546103b690611043565b80601f01602080910402602001604051908101604052809291908181526020018280546103e290611043565b801561042f5780601f106104045761010080835404028352916020019161042f565b820191906000526020600020905b81548152906001019060200180831161041257829003601f168201915b5050505050905090565b6000610446338484610a37565b50600192915050565b604051600060248201819052906001600160a01b0383169060440160408051601f198184030181529181526020820180516001600160e01b031663299ce14b60e11b1790525161049f919061107e565b600060405180830381855afa9150503d80600081146104da576040519150601f19603f3d011682016040523d82523d6000602084013e6104df565b606091505b50509050806104ed57600080fd5b5050565b600080829050806001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561053057600080fd5b505afa158015610544573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056891906110b8565b50600195945050505050565b6000610581848484610b5b565b6001600160a01b03841660009081526066602090815260408083203384529091529020548281101561060b5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6106188533858403610a37565b506001949350505050565b3360008181526066602090815260408083206001600160a01b0387168452909152812054909161044691859061065a90869061111e565b610a37565b6106693382610d2b565b50565b60006001600160a01b0382163b61068557506000919050565b6040516001600160a01b0383166024820152600090309060440160408051601f198184030181529181526020820180516001600160e01b03166306fae8af60e11b179052516106d4919061107e565b600060405180830381855afa9150503d806000811461070f576040519150601f19603f3d011682016040523d82523d6000602084013e610714565b606091505b5050905080156107245792915050565b6040516001600160a01b0384166024820152600090309060440160408051601f198184030181529181526020820180516001600160e01b031663199752f360e01b17905251610773919061107e565b600060405180830381855afa9150503d80600081146107ae576040519150601f19603f3d011682016040523d82523d6000602084013e6107b3565b606091505b5050905080156107c4579392505050565b5060009392505050565b6033546001600160a01b031633146108285760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610602565b6108326000610e79565b565b60006108408333610361565b90508181101561089e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b6064820152608401610602565b6108ab8333848403610a37565b6108b58383610d2b565b505050565b6060606980546103b690611043565b3360009081526066602090815260408083206001600160a01b03861684529091528120548281101561094b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610602565b6109583385858403610a37565b5060019392505050565b6000610446338484610b5b565b6033546001600160a01b031633146109c95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610602565b6001600160a01b038116610a2e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610602565b61066981610e79565b6001600160a01b038316610a995760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610602565b6001600160a01b038216610afa5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610602565b6001600160a01b0383811660008181526066602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610bbf5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610602565b6001600160a01b038216610c215760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610602565b6001600160a01b03831660009081526065602052604090205481811015610c995760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610602565b6001600160a01b03808516600090815260656020526040808220858503905591851681529081208054849290610cd090849061111e565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d1c91815260200190565b60405180910390a35b50505050565b6001600160a01b038216610d8b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610602565b6001600160a01b03821660009081526065602052604090205481811015610dff5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610602565b6001600160a01b0383166000908152606560205260408120838303905560678054849290610e2e908490611136565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60005b83811015610ee6578181015183820152602001610ece565b83811115610d255750506000910152565b6020815260008251806020840152610f16816040850160208701610ecb565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610f4157600080fd5b919050565b60008060408385031215610f5957600080fd5b610f6283610f2a565b946020939093013593505050565b600060208284031215610f8257600080fd5b610f8b82610f2a565b9392505050565b600080600060608486031215610fa757600080fd5b610fb084610f2a565b9250610fbe60208501610f2a565b9150604084013590509250925092565b600060208284031215610fe057600080fd5b5035919050565b600060208284031215610ff957600080fd5b81356001600160801b0381168114610f8b57600080fd5b6000806040838503121561102357600080fd5b61102c83610f2a565b915061103a60208401610f2a565b90509250929050565b600181811c9082168061105757607f821691505b6020821081141561107857634e487b7160e01b600052602260045260246000fd5b50919050565b60008251611090818460208701610ecb565b9190910192915050565b80516dffffffffffffffffffffffffffff81168114610f4157600080fd5b6000806000606084860312156110cd57600080fd5b6110d68461109a565b92506110e46020850161109a565b9150604084015163ffffffff811681146110fd57600080fd5b809150509250925092565b634e487b7160e01b600052601160045260246000fd5b6000821982111561113157611131611108565b500190565b60008282101561114857611148611108565b50039056fea264697066735822122064f9074cc785b7ec4a981db7334e80aaba5b8001e6443ef3d2a32184612149ce64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101585760003560e01c806370a08231116100c3578063a9059cbb1161007c578063a9059cbb146102fe578063bcff895a14610311578063c4cb3b091461031a578063dd62ed3e14610353578063f2fde38b1461038c578063fe0cf2541461039f57600080fd5b806370a0823114610284578063715018a6146102ad57806379cc6790146102b55780638da5cb5b146102c857806395d89b41146102e3578063a457c2d7146102eb57600080fd5b8063313ce56711610115578063313ce567146101eb578063395093511461020057806342966c681461021357806346022c8a146102265780635b16ebb714610251578063667022fd1461026457600080fd5b806306fdde031461015d578063095ea7b31461017b5780630df5d15e1461019e57806318160ddd146101b3578063199752f3146101c557806323b872dd146101d8575b600080fd5b6101656103a7565b6040516101729190610ef7565b60405180910390f35b61018e610189366004610f46565b610439565b6040519015158152602001610172565b6101b16101ac366004610f70565b61044f565b005b6067545b604051908152602001610172565b61018e6101d3366004610f70565b6104f1565b61018e6101e6366004610f92565b610574565b60125b60405160ff9091168152602001610172565b61018e61020e366004610f46565b610623565b6101b1610221366004610fce565b61065f565b60c954610239906001600160801b031681565b6040516001600160801b039091168152602001610172565b61018e61025f366004610f70565b61066c565b6101b7610272366004610f70565b60cb6020526000908152604090205481565b6101b7610292366004610f70565b6001600160a01b031660009081526065602052604090205490565b6101b16107ce565b6101b16102c3366004610f46565b610834565b6033546040516001600160a01b039091168152602001610172565b6101656108ba565b61018e6102f9366004610f46565b6108c9565b61018e61030c366004610f46565b610962565b6101b760ca5481565b6101b1610328366004610fe7565b60c980546fffffffffffffffffffffffffffffffff19166001600160801b0392909216919091179055565b6101b7610361366004611010565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b6101b161039a366004610f70565b61096f565b6101ee603c81565b6060606880546103b690611043565b80601f01602080910402602001604051908101604052809291908181526020018280546103e290611043565b801561042f5780601f106104045761010080835404028352916020019161042f565b820191906000526020600020905b81548152906001019060200180831161041257829003601f168201915b5050505050905090565b6000610446338484610a37565b50600192915050565b604051600060248201819052906001600160a01b0383169060440160408051601f198184030181529181526020820180516001600160e01b031663299ce14b60e11b1790525161049f919061107e565b600060405180830381855afa9150503d80600081146104da576040519150601f19603f3d011682016040523d82523d6000602084013e6104df565b606091505b50509050806104ed57600080fd5b5050565b600080829050806001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561053057600080fd5b505afa158015610544573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056891906110b8565b50600195945050505050565b6000610581848484610b5b565b6001600160a01b03841660009081526066602090815260408083203384529091529020548281101561060b5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6106188533858403610a37565b506001949350505050565b3360008181526066602090815260408083206001600160a01b0387168452909152812054909161044691859061065a90869061111e565b610a37565b6106693382610d2b565b50565b60006001600160a01b0382163b61068557506000919050565b6040516001600160a01b0383166024820152600090309060440160408051601f198184030181529181526020820180516001600160e01b03166306fae8af60e11b179052516106d4919061107e565b600060405180830381855afa9150503d806000811461070f576040519150601f19603f3d011682016040523d82523d6000602084013e610714565b606091505b5050905080156107245792915050565b6040516001600160a01b0384166024820152600090309060440160408051601f198184030181529181526020820180516001600160e01b031663199752f360e01b17905251610773919061107e565b600060405180830381855afa9150503d80600081146107ae576040519150601f19603f3d011682016040523d82523d6000602084013e6107b3565b606091505b5050905080156107c4579392505050565b5060009392505050565b6033546001600160a01b031633146108285760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610602565b6108326000610e79565b565b60006108408333610361565b90508181101561089e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b6064820152608401610602565b6108ab8333848403610a37565b6108b58383610d2b565b505050565b6060606980546103b690611043565b3360009081526066602090815260408083206001600160a01b03861684529091528120548281101561094b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610602565b6109583385858403610a37565b5060019392505050565b6000610446338484610b5b565b6033546001600160a01b031633146109c95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610602565b6001600160a01b038116610a2e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610602565b61066981610e79565b6001600160a01b038316610a995760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610602565b6001600160a01b038216610afa5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610602565b6001600160a01b0383811660008181526066602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610bbf5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610602565b6001600160a01b038216610c215760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610602565b6001600160a01b03831660009081526065602052604090205481811015610c995760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610602565b6001600160a01b03808516600090815260656020526040808220858503905591851681529081208054849290610cd090849061111e565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d1c91815260200190565b60405180910390a35b50505050565b6001600160a01b038216610d8b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610602565b6001600160a01b03821660009081526065602052604090205481811015610dff5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610602565b6001600160a01b0383166000908152606560205260408120838303905560678054849290610e2e908490611136565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60005b83811015610ee6578181015183820152602001610ece565b83811115610d255750506000910152565b6020815260008251806020840152610f16816040850160208701610ecb565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610f4157600080fd5b919050565b60008060408385031215610f5957600080fd5b610f6283610f2a565b946020939093013593505050565b600060208284031215610f8257600080fd5b610f8b82610f2a565b9392505050565b600080600060608486031215610fa757600080fd5b610fb084610f2a565b9250610fbe60208501610f2a565b9150604084013590509250925092565b600060208284031215610fe057600080fd5b5035919050565b600060208284031215610ff957600080fd5b81356001600160801b0381168114610f8b57600080fd5b6000806040838503121561102357600080fd5b61102c83610f2a565b915061103a60208401610f2a565b90509250929050565b600181811c9082168061105757607f821691505b6020821081141561107857634e487b7160e01b600052602260045260246000fd5b50919050565b60008251611090818460208701610ecb565b9190910192915050565b80516dffffffffffffffffffffffffffff81168114610f4157600080fd5b6000806000606084860312156110cd57600080fd5b6110d68461109a565b92506110e46020850161109a565b9150604084015163ffffffff811681146110fd57600080fd5b809150509250925092565b634e487b7160e01b600052601160045260246000fd5b6000821982111561113157611131611108565b500190565b60008282101561114857611148611108565b50039056fea264697066735822122064f9074cc785b7ec4a981db7334e80aaba5b8001e6443ef3d2a32184612149ce64736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:10097:62",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:62",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "67:205:62",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "77:10:62",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "86:1:62",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "81:1:62",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "146:63:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "171:3:62"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "176:1:62"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "167:3:62"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "167:11:62"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "190:3:62"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "195:1:62"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "186:3:62"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "186:11:62"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "180:5:62"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "180:18:62"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "160:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "160:39:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "160:39:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "107:1:62"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "110:6:62"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "104:2:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "104:13:62"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "118:19:62",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "120:15:62",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "129:1:62"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "132:2:62",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "125:3:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "125:10:62"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "120:1:62"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "100:3:62",
                    "statements": []
                  },
                  "src": "96:113:62"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "235:31:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "248:3:62"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "253:6:62"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "244:3:62"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "244:16:62"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "262:1:62",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "237:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "237:27:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "237:27:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "224:1:62"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "227:6:62"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "221:2:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "221:13:62"
                  },
                  "nodeType": "YulIf",
                  "src": "218:48:62"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "45:3:62",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "50:3:62",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "55:6:62",
                "type": ""
              }
            ],
            "src": "14:258:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "398:262:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "415:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "426:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "408:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "408:21:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "408:21:62"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "438:27:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "458:6:62"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "452:5:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "452:13:62"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "442:6:62",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "485:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "496:2:62",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "481:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "481:18:62"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "501:6:62"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "474:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "474:34:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "474:34:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "543:6:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "551:2:62",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "539:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "539:15:62"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "560:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "571:2:62",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "556:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "556:18:62"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "576:6:62"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "517:21:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "517:66:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "517:66:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "592:62:62",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "608:9:62"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "627:6:62"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "635:2:62",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "623:3:62"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "623:15:62"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "644:2:62",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "640:3:62"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "640:7:62"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "619:3:62"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "619:29:62"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "604:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "604:45:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "651:2:62",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "600:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "600:54:62"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "592:4:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "367:9:62",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "378:6:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "389:4:62",
                "type": ""
              }
            ],
            "src": "277:383:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "714:124:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "724:29:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "746:6:62"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "733:12:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "733:20:62"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "724:5:62"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "816:16:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "825:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "828:1:62",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "818:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "818:12:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "818:12:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "775:5:62"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "786:5:62"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "801:3:62",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "806:1:62",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "797:3:62"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "797:11:62"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "810:1:62",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "793:3:62"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "793:19:62"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "782:3:62"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "782:31:62"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "772:2:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "772:42:62"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "765:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "765:50:62"
                  },
                  "nodeType": "YulIf",
                  "src": "762:70:62"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "693:6:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "704:5:62",
                "type": ""
              }
            ],
            "src": "665:173:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "930:167:62",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "976:16:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "985:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "988:1:62",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "978:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "978:12:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "978:12:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "951:7:62"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "960:9:62"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "947:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "947:23:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "972:2:62",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "943:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "943:32:62"
                  },
                  "nodeType": "YulIf",
                  "src": "940:52:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1001:39:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1030:9:62"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1011:18:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1011:29:62"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1001:6:62"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1049:42:62",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1076:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1087:2:62",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1072:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1072:18:62"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1059:12:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1059:32:62"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1049:6:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "888:9:62",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "899:7:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "911:6:62",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "919:6:62",
                "type": ""
              }
            ],
            "src": "843:254:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1197:92:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1207:26:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1219:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1230:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1215:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1215:18:62"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1207:4:62"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1249:9:62"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1274:6:62"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1267:6:62"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1267:14:62"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1260:6:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1260:22:62"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1242:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1242:41:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1242:41:62"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1166:9:62",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1177:6:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1188:4:62",
                "type": ""
              }
            ],
            "src": "1102:187:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1364:116:62",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1410:16:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1419:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1422:1:62",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1412:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1412:12:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1412:12:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1385:7:62"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1394:9:62"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1381:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1381:23:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1406:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1377:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1377:32:62"
                  },
                  "nodeType": "YulIf",
                  "src": "1374:52:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1435:39:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1464:9:62"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1445:18:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1445:29:62"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1435:6:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1330:9:62",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1341:7:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1353:6:62",
                "type": ""
              }
            ],
            "src": "1294:186:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1586:76:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1596:26:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1608:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1619:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1604:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1604:18:62"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1596:4:62"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1638:9:62"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1649:6:62"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1631:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1631:25:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1631:25:62"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1555:9:62",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1566:6:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1577:4:62",
                "type": ""
              }
            ],
            "src": "1485:177:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1771:224:62",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1817:16:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1826:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1829:1:62",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1819:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1819:12:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1819:12:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1792:7:62"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1801:9:62"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1788:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1788:23:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1813:2:62",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1784:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1784:32:62"
                  },
                  "nodeType": "YulIf",
                  "src": "1781:52:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1842:39:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1871:9:62"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1852:18:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1852:29:62"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1842:6:62"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1890:48:62",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1923:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1934:2:62",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1919:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1919:18:62"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1900:18:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1900:38:62"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1890:6:62"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1947:42:62",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1974:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1985:2:62",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1970:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1970:18:62"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1957:12:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1957:32:62"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1947:6:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1721:9:62",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1732:7:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1744:6:62",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1752:6:62",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1760:6:62",
                "type": ""
              }
            ],
            "src": "1667:328:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2097:87:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2107:26:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2119:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2130:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2115:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2115:18:62"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2107:4:62"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2149:9:62"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2164:6:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2172:4:62",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2160:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2160:17:62"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2142:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2142:36:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2142:36:62"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2066:9:62",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2077:6:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2088:4:62",
                "type": ""
              }
            ],
            "src": "2000:184:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2259:110:62",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2305:16:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2314:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2317:1:62",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2307:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2307:12:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2307:12:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2280:7:62"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2289:9:62"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2276:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2276:23:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2301:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2272:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2272:32:62"
                  },
                  "nodeType": "YulIf",
                  "src": "2269:52:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2330:33:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2353:9:62"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2340:12:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2340:23:62"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2330:6:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2225:9:62",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2236:7:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2248:6:62",
                "type": ""
              }
            ],
            "src": "2189:180:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2475:117:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2485:26:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2497:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2508:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2493:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2493:18:62"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2485:4:62"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2527:9:62"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2542:6:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2550:34:62",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2538:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2538:47:62"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2520:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2520:66:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2520:66:62"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2444:9:62",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2455:6:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2466:4:62",
                "type": ""
              }
            ],
            "src": "2374:218:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2698:102:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2708:26:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2720:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2731:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2716:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2716:18:62"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2708:4:62"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2750:9:62"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2765:6:62"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2781:3:62",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2786:1:62",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2777:3:62"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2777:11:62"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2790:1:62",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2773:3:62"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2773:19:62"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2761:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2761:32:62"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2743:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2743:51:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2743:51:62"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2667:9:62",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2678:6:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2689:4:62",
                "type": ""
              }
            ],
            "src": "2597:203:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2875:231:62",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2921:16:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2930:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2933:1:62",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2923:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2923:12:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2923:12:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2896:7:62"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2905:9:62"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2892:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2892:23:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2917:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2888:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2888:32:62"
                  },
                  "nodeType": "YulIf",
                  "src": "2885:52:62"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2946:36:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2972:9:62"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2959:12:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2959:23:62"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2950:5:62",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3060:16:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3069:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3072:1:62",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3062:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3062:12:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3062:12:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3004:5:62"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3015:5:62"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3022:34:62",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3011:3:62"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3011:46:62"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3001:2:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3001:57:62"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2994:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2994:65:62"
                  },
                  "nodeType": "YulIf",
                  "src": "2991:85:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3085:15:62",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3095:5:62"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3085:6:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint128",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2841:9:62",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2852:7:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2864:6:62",
                "type": ""
              }
            ],
            "src": "2805:301:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3198:173:62",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3244:16:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3253:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3256:1:62",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3246:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3246:12:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3246:12:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3219:7:62"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3228:9:62"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3215:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3215:23:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3240:2:62",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3211:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3211:32:62"
                  },
                  "nodeType": "YulIf",
                  "src": "3208:52:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3269:39:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3298:9:62"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3279:18:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3279:29:62"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3269:6:62"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3317:48:62",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3350:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3361:2:62",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3346:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3346:18:62"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3327:18:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3327:38:62"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3317:6:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3156:9:62",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3167:7:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3179:6:62",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3187:6:62",
                "type": ""
              }
            ],
            "src": "3111:260:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3431:325:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3441:22:62",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3455:1:62",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3458:4:62"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "3451:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3451:12:62"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "3441:6:62"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3472:38:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "3502:4:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3508:1:62",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3498:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3498:12:62"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "3476:18:62",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3549:31:62",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3551:27:62",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "3565:6:62"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3573:4:62",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "3561:3:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3561:17:62"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3551:6:62"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3529:18:62"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3522:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3522:26:62"
                  },
                  "nodeType": "YulIf",
                  "src": "3519:61:62"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3639:111:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3660:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3667:3:62",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3672:10:62",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3663:3:62"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3663:20:62"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3653:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3653:31:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3653:31:62"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3704:1:62",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3707:4:62",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3697:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3697:15:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3697:15:62"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3732:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3735:4:62",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3725:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3725:15:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3725:15:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "3595:18:62"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3618:6:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3626:2:62",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3615:2:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3615:14:62"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "3592:2:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3592:38:62"
                  },
                  "nodeType": "YulIf",
                  "src": "3589:161:62"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "3411:4:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3420:6:62",
                "type": ""
              }
            ],
            "src": "3376:380:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3868:87:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3878:26:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3890:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3901:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3886:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3886:18:62"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3878:4:62"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3920:9:62"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3935:6:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3943:4:62",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3931:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3931:17:62"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3913:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3913:36:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3913:36:62"
                }
              ]
            },
            "name": "abi_encode_tuple_t_rational_0_by_1__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3837:9:62",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3848:6:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3859:4:62",
                "type": ""
              }
            ],
            "src": "3761:194:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4097:137:62",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4107:27:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4127:6:62"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4121:5:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4121:13:62"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4111:6:62",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4169:6:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4177:4:62",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4165:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4165:17:62"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4184:3:62"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4189:6:62"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4143:21:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4143:53:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4143:53:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4205:23:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4216:3:62"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4221:6:62"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4212:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4212:16:62"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4205:3:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4073:3:62",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4078:6:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4089:3:62",
                "type": ""
              }
            ],
            "src": "3960:274:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4299:128:62",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4309:22:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4324:6:62"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4318:5:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4318:13:62"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4309:5:62"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4405:16:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4414:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4417:1:62",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4407:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4407:12:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4407:12:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4353:5:62"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4364:5:62"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4371:30:62",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4360:3:62"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4360:42:62"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4350:2:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4350:53:62"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4343:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4343:61:62"
                  },
                  "nodeType": "YulIf",
                  "src": "4340:81:62"
                }
              ]
            },
            "name": "abi_decode_uint112_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "4278:6:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4289:5:62",
                "type": ""
              }
            ],
            "src": "4239:188:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4546:336:62",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4592:16:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4601:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4604:1:62",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4594:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4594:12:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4594:12:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4567:7:62"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4576:9:62"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4563:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4563:23:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4588:2:62",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4559:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4559:32:62"
                  },
                  "nodeType": "YulIf",
                  "src": "4556:52:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4617:50:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4657:9:62"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint112_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "4627:29:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4627:40:62"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4617:6:62"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4676:59:62",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4720:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4731:2:62",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4716:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4716:18:62"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint112_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "4686:29:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4686:49:62"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4676:6:62"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4744:38:62",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4767:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4778:2:62",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4763:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4763:18:62"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4757:5:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4757:25:62"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4748:5:62",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4836:16:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4845:1:62",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4848:1:62",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4838:6:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4838:12:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4838:12:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4804:5:62"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4815:5:62"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4822:10:62",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4811:3:62"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4811:22:62"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4801:2:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4801:33:62"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4794:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4794:41:62"
                  },
                  "nodeType": "YulIf",
                  "src": "4791:61:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4861:15:62",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4871:5:62"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4861:6:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4496:9:62",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4507:7:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4519:6:62",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4527:6:62",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4535:6:62",
                "type": ""
              }
            ],
            "src": "4432:450:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5061:230:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5078:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5089:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5071:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5071:21:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5071:21:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5112:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5123:2:62",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5108:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5108:18:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5128:2:62",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5101:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5101:30:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5101:30:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5151:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5162:2:62",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5147:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5147:18:62"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5167:34:62",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5140:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5140:62:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5140:62:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5222:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5233:2:62",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5218:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5218:18:62"
                      },
                      {
                        "hexValue": "6c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5238:10:62",
                        "type": "",
                        "value": "llowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5211:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5211:38:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5211:38:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5258:27:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5270:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5281:3:62",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5266:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5266:19:62"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5258:4:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5038:9:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5052:4:62",
                "type": ""
              }
            ],
            "src": "4887:404:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5328:95:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5345:1:62",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5352:3:62",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5357:10:62",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5348:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5348:20:62"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5338:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5338:31:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5338:31:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5385:1:62",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5388:4:62",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5378:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5378:15:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5378:15:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5409:1:62",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5412:4:62",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5402:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5402:15:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5402:15:62"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "5296:127:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5476:80:62",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5503:22:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5505:16:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5505:18:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5505:18:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5492:1:62"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "5499:1:62"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "5495:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5495:6:62"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5489:2:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5489:13:62"
                  },
                  "nodeType": "YulIf",
                  "src": "5486:39:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5534:16:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5545:1:62"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5548:1:62"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5541:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5541:9:62"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "5534:3:62"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5459:1:62",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5462:1:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "5468:3:62",
                "type": ""
              }
            ],
            "src": "5428:128:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5735:182:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5752:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5763:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5745:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5745:21:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5745:21:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5786:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5797:2:62",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5782:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5782:18:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5802:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5775:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5775:30:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5775:30:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5825:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5836:2:62",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5821:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5821:18:62"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5841:34:62",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5814:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5814:62:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5814:62:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5885:26:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5897:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5908:2:62",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5893:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5893:18:62"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5885:4:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5712:9:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5726:4:62",
                "type": ""
              }
            ],
            "src": "5561:356:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6096:226:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6113:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6124:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6106:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6106:21:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6106:21:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6147:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6158:2:62",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6143:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6143:18:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6163:2:62",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6136:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6136:30:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6136:30:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6186:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6197:2:62",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6182:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6182:18:62"
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6202:34:62",
                        "type": "",
                        "value": "ERC20: burn amount exceeds allow"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6175:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6175:62:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6175:62:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6257:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6268:2:62",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6253:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6253:18:62"
                      },
                      {
                        "hexValue": "616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6273:6:62",
                        "type": "",
                        "value": "ance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6246:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6246:34:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6246:34:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6289:27:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6301:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6312:3:62",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6297:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6297:19:62"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6289:4:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6073:9:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6087:4:62",
                "type": ""
              }
            ],
            "src": "5922:400:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6501:227:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6518:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6529:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6511:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6511:21:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6511:21:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6552:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6563:2:62",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6548:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6548:18:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6568:2:62",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6541:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6541:30:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6541:30:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6591:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6602:2:62",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6587:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6587:18:62"
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6607:34:62",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6580:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6580:62:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6580:62:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6662:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6673:2:62",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6658:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6658:18:62"
                      },
                      {
                        "hexValue": "207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6678:7:62",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6651:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6651:35:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6651:35:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6695:27:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6707:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6718:3:62",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6703:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6703:19:62"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6695:4:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6478:9:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6492:4:62",
                "type": ""
              }
            ],
            "src": "6327:401:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6907:228:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6924:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6935:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6917:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6917:21:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6917:21:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6958:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6969:2:62",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6954:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6954:18:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6974:2:62",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6947:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6947:30:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6947:30:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6997:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7008:2:62",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6993:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6993:18:62"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7013:34:62",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6986:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6986:62:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6986:62:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7068:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7079:2:62",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7064:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7064:18:62"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7084:8:62",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7057:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7057:36:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7057:36:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7102:27:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7114:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7125:3:62",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7110:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7110:19:62"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7102:4:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6884:9:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6898:4:62",
                "type": ""
              }
            ],
            "src": "6733:402:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7314:226:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7331:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7342:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7324:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7324:21:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7324:21:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7365:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7376:2:62",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7361:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7361:18:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7381:2:62",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7354:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7354:30:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7354:30:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7404:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7415:2:62",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7400:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7400:18:62"
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7420:34:62",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7393:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7393:62:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7393:62:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7475:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7486:2:62",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7471:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7471:18:62"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7491:6:62",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7464:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7464:34:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7464:34:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7507:27:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7519:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7530:3:62",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7515:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7515:19:62"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7507:4:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7291:9:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7305:4:62",
                "type": ""
              }
            ],
            "src": "7140:400:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7719:224:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7736:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7747:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7729:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7729:21:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7729:21:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7770:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7781:2:62",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7766:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7766:18:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7786:2:62",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7759:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7759:30:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7759:30:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7809:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7820:2:62",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7805:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7805:18:62"
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7825:34:62",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7798:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7798:62:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7798:62:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7880:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7891:2:62",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7876:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7876:18:62"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7896:4:62",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7869:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7869:32:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7869:32:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7910:27:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7922:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7933:3:62",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7918:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7918:19:62"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7910:4:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7696:9:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7710:4:62",
                "type": ""
              }
            ],
            "src": "7545:398:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8122:227:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8139:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8150:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8132:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8132:21:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8132:21:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8173:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8184:2:62",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8169:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8169:18:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8189:2:62",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8162:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8162:30:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8162:30:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8212:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8223:2:62",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8208:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8208:18:62"
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8228:34:62",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8201:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8201:62:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8201:62:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8283:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8294:2:62",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8279:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8279:18:62"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8299:7:62",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8272:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8272:35:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8272:35:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8316:27:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8328:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8339:3:62",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8324:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8324:19:62"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8316:4:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8099:9:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8113:4:62",
                "type": ""
              }
            ],
            "src": "7948:401:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8528:225:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8545:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8556:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8538:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8538:21:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8538:21:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8579:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8590:2:62",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8575:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8575:18:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8595:2:62",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8568:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8568:30:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8568:30:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8618:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8629:2:62",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8614:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8614:18:62"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8634:34:62",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8607:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8607:62:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8607:62:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8689:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8700:2:62",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8685:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8685:18:62"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8705:5:62",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8678:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8678:33:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8678:33:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8720:27:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8732:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8743:3:62",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8728:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8728:19:62"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8720:4:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8505:9:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8519:4:62",
                "type": ""
              }
            ],
            "src": "8354:399:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8932:228:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8949:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8960:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8942:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8942:21:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8942:21:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8983:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8994:2:62",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8979:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8979:18:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8999:2:62",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8972:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8972:30:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8972:30:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9022:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9033:2:62",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9018:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9018:18:62"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9038:34:62",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9011:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9011:62:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9011:62:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9093:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9104:2:62",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9089:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9089:18:62"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9109:8:62",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9082:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9082:36:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9082:36:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9127:27:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9139:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9150:3:62",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9135:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9135:19:62"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9127:4:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8909:9:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8923:4:62",
                "type": ""
              }
            ],
            "src": "8758:402:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9339:223:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9356:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9367:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9349:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9349:21:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9349:21:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9390:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9401:2:62",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9386:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9386:18:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9406:2:62",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9379:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9379:30:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9379:30:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9429:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9440:2:62",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9425:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9425:18:62"
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9445:34:62",
                        "type": "",
                        "value": "ERC20: burn from the zero addres"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9418:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9418:62:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9418:62:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9500:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9511:2:62",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9496:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9496:18:62"
                      },
                      {
                        "hexValue": "73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9516:3:62",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9489:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9489:31:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9489:31:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9529:27:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9541:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9552:3:62",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9537:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9537:19:62"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9529:4:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9316:9:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9330:4:62",
                "type": ""
              }
            ],
            "src": "9165:397:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9741:224:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9758:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9769:2:62",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9751:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9751:21:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9751:21:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9792:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9803:2:62",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9788:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9788:18:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9808:2:62",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9781:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9781:30:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9781:30:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9831:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9842:2:62",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9827:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9827:18:62"
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9847:34:62",
                        "type": "",
                        "value": "ERC20: burn amount exceeds balan"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9820:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9820:62:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9820:62:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9902:9:62"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9913:2:62",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9898:3:62"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9898:18:62"
                      },
                      {
                        "hexValue": "6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9918:4:62",
                        "type": "",
                        "value": "ce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9891:6:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9891:32:62"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9891:32:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9932:27:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9944:9:62"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9955:3:62",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9940:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9940:19:62"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9932:4:62"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9718:9:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9732:4:62",
                "type": ""
              }
            ],
            "src": "9567:398:62"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10019:76:62",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10041:22:62",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10043:16:62"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10043:18:62"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10043:18:62"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10035:1:62"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10038:1:62"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "10032:2:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10032:8:62"
                  },
                  "nodeType": "YulIf",
                  "src": "10029:34:62"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10072:17:62",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10084:1:62"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10087:1:62"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "10080:3:62"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10080:9:62"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "10072:4:62"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10001:1:62",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10004:1:62",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "10010:4:62",
                "type": ""
              }
            ],
            "src": "9970:125:62"
          }
        ]
      },
      "contents": "{\n    { }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint128(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_rational_0_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_decode_uint112_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint112_fromMemory(headStart)\n        value1 := abi_decode_uint112_fromMemory(add(headStart, 32))\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n        value2 := value\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds allow\")\n        mstore(add(headStart, 96), \"ance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n}",
      "id": 62,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "409:2343:43:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "409:2343:43:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2504:98:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4601:166;;;;;;:::i;:::-;;:::i;:::-;;;1267:14:62;;1260:22;1242:41;;1230:2;1215:18;4601:166:14;1102:187:62;1050:178:43;;;;;;:::i;:::-;;:::i;:::-;;3592:106:14;3679:12;;3592:106;;;1631:25:62;;;1619:2;1604:18;3592:106:14;1485:177:62;1234:169:43;;;;;;:::i;:::-;;:::i;5234:478:14:-;;;;;;:::i;:::-;;:::i;3441:91::-;3523:2;3441:91;;;2172:4:62;2160:17;;;2142:36;;2130:2;2115:18;3441:91:14;2000:184:62;6107:212:14;;;;;;:::i;:::-;;:::i;901:89:16:-;;;;;;:::i;:::-;;:::i;635:25:43:-;;;;;-1:-1:-1;;;;;635:25:43;;;;;;-1:-1:-1;;;;;2538:47:62;;;2520:66;;2508:2;2493:18;635:25:43;2374:218:62;1409:537:43;;;;;;:::i;:::-;;:::i;706:38::-;;;;;;:::i;:::-;;;;;;;;;;;;;;3756:125:14;;;;;;:::i;:::-;-1:-1:-1;;;;;3856:18:14;3830:7;3856:18;;;:9;:18;;;;;;;3756:125;1934:101:2;;;:::i;1296:361:16:-;;;;;;:::i;:::-;;:::i;1302:85:2:-;1374:6;;1302:85;;-1:-1:-1;;;;;1374:6:2;;;2743:51:62;;2731:2;2716:18;1302:85:2;2597:203:62;2715:102:14;;;:::i;6806:405::-;;;;;;:::i;:::-;;:::i;4084:172::-;;;;;;:::i;:::-;;:::i;666:34:43:-;;;;;;952:92;;;;;;:::i;:::-;1013:10;:24;;-1:-1:-1;;1013:24:43;-1:-1:-1;;;;;1013:24:43;;;;;;;;;;952:92;4314:149:14;;;;;;:::i;:::-;-1:-1:-1;;;;;4429:18:14;;;4403:7;4429:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4314:149;2184:198:2;;;;;;:::i;:::-;;:::i;591:38:43:-;;627:2;591:38;;2504:98:14;2558:13;2590:5;2583:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2504:98;:::o;4601:166::-;4684:4;4700:39;955:10:26;4723:7:14;4732:6;4700:8;:39::i;:::-;-1:-1:-1;4756:4:14;4601:166;;;;:::o;1050:178:43:-;1147:47;;1110:12;1147:47;;;2142:36:62;;;1110:12:43;-1:-1:-1;;;;;1127:19:43;;;2115:18:62;;1147:47:43;;;-1:-1:-1;;1147:47:43;;;;;;;;;;;;;;-1:-1:-1;;;;;1147:47:43;-1:-1:-1;;;1147:47:43;;;1127:68;;;1147:47;1127:68;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1109:86;;;1213:7;1205:16;;;;;;1099:129;1050:178;:::o;1234:169::-;1291:4;1307:16;1335:8;1307:37;;1354:7;-1:-1:-1;;;;;1354:19:43;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1392:4:43;;1234:169;-1:-1:-1;;;;;1234:169:43:o;5234:478:14:-;5370:4;5386:36;5396:6;5404:9;5415:6;5386:9;:36::i;:::-;-1:-1:-1;;;;;5460:19:14;;5433:24;5460:19;;;:11;:19;;;;;;;;955:10:26;5460:33:14;;;;;;;;5511:26;;;;5503:79;;;;-1:-1:-1;;;5503:79:14;;5089:2:62;5503:79:14;;;5071:21:62;5128:2;5108:18;;;5101:30;5167:34;5147:18;;;5140:62;-1:-1:-1;;;5218:18:62;;;5211:38;5266:19;;5503:79:14;;;;;;;;;5616:57;5625:6;955:10:26;5666:6:14;5647:16;:25;5616:8;:57::i;:::-;-1:-1:-1;5701:4:14;;5234:478;-1:-1:-1;;;;5234:478:14:o;6107:212::-;955:10:26;6195:4:14;6243:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6243:34:14;;;;;;;;;;6195:4;;6211:80;;6234:7;;6243:47;;6280:10;;6243:47;:::i;:::-;6211:8;:80::i;901:89:16:-;956:27;955:10:26;976:6:16;956:5;:27::i;:::-;901:89;:::o;1409:537:43:-;1463:4;-1:-1:-1;;;;;1484:19:43;;1098:20:25;1479:65:43;;-1:-1:-1;1528:5:43;;1409:537;-1:-1:-1;1409:537:43:o;1479:65::-;1605:55;;-1:-1:-1;;;;;2761:32:62;;1605:55:43;;;2743:51:62;1563:12:43;;1588:4;;2716:18:62;;1605:55:43;;;-1:-1:-1;;1605:55:43;;;;;;;;;;;;;;-1:-1:-1;;;;;1605:55:43;-1:-1:-1;;;1605:55:43;;;1580:81;;;1605:55;1580:81;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1562:99;;;1676:7;1672:52;;;1706:7;1409:537;-1:-1:-1;;1409:537:43:o;1672:52::-;1784:55;;-1:-1:-1;;;;;2761:32:62;;1784:55:43;;;2743:51:62;1735:19:43;;1767:4;;2716:18:62;;1784:55:43;;;-1:-1:-1;;1784:55:43;;;;;;;;;;;;;;-1:-1:-1;;;;;1784:55:43;-1:-1:-1;;;1784:55:43;;;1759:81;;;1784:55;1759:81;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1734:106;;;1855:14;1851:66;;;1892:14;1409:537;-1:-1:-1;;;1409:537:43:o;1851:66::-;-1:-1:-1;1934:5:43;;1409:537;-1:-1:-1;;;1409:537:43:o;1934:101:2:-;1374:6;;-1:-1:-1;;;;;1374:6:2;955:10:26;1514:23:2;1506:68;;;;-1:-1:-1;;;1506:68:2;;5763:2:62;1506:68:2;;;5745:21:62;;;5782:18;;;5775:30;5841:34;5821:18;;;5814:62;5893:18;;1506:68:2;5561:356:62;1506:68:2;1998:30:::1;2025:1;1998:18;:30::i;:::-;1934:101::o:0;1296:361:16:-;1372:24;1399:32;1409:7;955:10:26;4314:149:14;:::i;1399:32:16:-;1372:59;;1469:6;1449:16;:26;;1441:75;;;;-1:-1:-1;;;1441:75:16;;6124:2:62;1441:75:16;;;6106:21:62;6163:2;6143:18;;;6136:30;6202:34;6182:18;;;6175:62;-1:-1:-1;;;6253:18:62;;;6246:34;6297:19;;1441:75:16;5922:400:62;1441:75:16;1550:58;1559:7;955:10:26;1601:6:16;1582:16;:25;1550:8;:58::i;:::-;1628:22;1634:7;1643:6;1628:5;:22::i;:::-;1362:295;1296:361;;:::o;2715:102:14:-;2771:13;2803:7;2796:14;;;;;:::i;6806:405::-;955:10:26;6899:4:14;6942:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6942:34:14;;;;;;;;;;6994:35;;;;6986:85;;;;-1:-1:-1;;;6986:85:14;;6529:2:62;6986:85:14;;;6511:21:62;6568:2;6548:18;;;6541:30;6607:34;6587:18;;;6580:62;-1:-1:-1;;;6658:18:62;;;6651:35;6703:19;;6986:85:14;6327:401:62;6986:85:14;7105:67;955:10:26;7128:7:14;7156:15;7137:16;:34;7105:8;:67::i;:::-;-1:-1:-1;7200:4:14;;6806:405;-1:-1:-1;;;6806:405:14:o;4084:172::-;4170:4;4186:42;955:10:26;4210:9:14;4221:6;4186:9;:42::i;2184:198:2:-;1374:6;;-1:-1:-1;;;;;1374:6:2;955:10:26;1514:23:2;1506:68;;;;-1:-1:-1;;;1506:68:2;;5763:2:62;1506:68:2;;;5745:21:62;;;5782:18;;;5775:30;5841:34;5821:18;;;5814:62;5893:18;;1506:68:2;5561:356:62;1506:68:2;-1:-1:-1;;;;;2272:22:2;::::1;2264:73;;;::::0;-1:-1:-1;;;2264:73:2;;6935:2:62;2264:73:2::1;::::0;::::1;6917:21:62::0;6974:2;6954:18;;;6947:30;7013:34;6993:18;;;6986:62;-1:-1:-1;;;7064:18:62;;;7057:36;7110:19;;2264:73:2::1;6733:402:62::0;2264:73:2::1;2347:28;2366:8;2347:18;:28::i;10382:370:14:-:0;-1:-1:-1;;;;;10513:19:14;;10505:68;;;;-1:-1:-1;;;10505:68:14;;7342:2:62;10505:68:14;;;7324:21:62;7381:2;7361:18;;;7354:30;7420:34;7400:18;;;7393:62;-1:-1:-1;;;7471:18:62;;;7464:34;7515:19;;10505:68:14;7140:400:62;10505:68:14;-1:-1:-1;;;;;10591:21:14;;10583:68;;;;-1:-1:-1;;;10583:68:14;;7747:2:62;10583:68:14;;;7729:21:62;7786:2;7766:18;;;7759:30;7825:34;7805:18;;;7798:62;-1:-1:-1;;;7876:18:62;;;7869:32;7918:19;;10583:68:14;7545:398:62;10583:68:14;-1:-1:-1;;;;;10662:18:14;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10713:32;;1631:25:62;;;10713:32:14;;1604:18:62;10713:32:14;;;;;;;10382:370;;;:::o;7685:713::-;-1:-1:-1;;;;;7820:20:14;;7812:70;;;;-1:-1:-1;;;7812:70:14;;8150:2:62;7812:70:14;;;8132:21:62;8189:2;8169:18;;;8162:30;8228:34;8208:18;;;8201:62;-1:-1:-1;;;8279:18:62;;;8272:35;8324:19;;7812:70:14;7948:401:62;7812:70:14;-1:-1:-1;;;;;7900:23:14;;7892:71;;;;-1:-1:-1;;;7892:71:14;;8556:2:62;7892:71:14;;;8538:21:62;8595:2;8575:18;;;8568:30;8634:34;8614:18;;;8607:62;-1:-1:-1;;;8685:18:62;;;8678:33;8728:19;;7892:71:14;8354:399:62;7892:71:14;-1:-1:-1;;;;;8056:17:14;;8032:21;8056:17;;;:9;:17;;;;;;8091:23;;;;8083:74;;;;-1:-1:-1;;;8083:74:14;;8960:2:62;8083:74:14;;;8942:21:62;8999:2;8979:18;;;8972:30;9038:34;9018:18;;;9011:62;-1:-1:-1;;;9089:18:62;;;9082:36;9135:19;;8083:74:14;8758:402:62;8083:74:14;-1:-1:-1;;;;;8191:17:14;;;;;;;:9;:17;;;;;;8211:22;;;8191:42;;8253:20;;;;;;;;:30;;8227:6;;8191:17;8253:30;;8227:6;;8253:30;:::i;:::-;;;;;;;;8316:9;-1:-1:-1;;;;;8299:35:14;8308:6;-1:-1:-1;;;;;8299:35:14;;8327:6;8299:35;;;;1631:25:62;;1619:2;1604:18;;1485:177;8299:35:14;;;;;;;;8345:46;7802:596;7685:713;;;:::o;9383:576::-;-1:-1:-1;;;;;9466:21:14;;9458:67;;;;-1:-1:-1;;;9458:67:14;;9367:2:62;9458:67:14;;;9349:21:62;9406:2;9386:18;;;9379:30;9445:34;9425:18;;;9418:62;-1:-1:-1;;;9496:18:62;;;9489:31;9537:19;;9458:67:14;9165:397:62;9458:67:14;-1:-1:-1;;;;;9621:18:14;;9596:22;9621:18;;;:9;:18;;;;;;9657:24;;;;9649:71;;;;-1:-1:-1;;;9649:71:14;;9769:2:62;9649:71:14;;;9751:21:62;9808:2;9788:18;;;9781:30;9847:34;9827:18;;;9820:62;-1:-1:-1;;;9898:18:62;;;9891:32;9940:19;;9649:71:14;9567:398:62;9649:71:14;-1:-1:-1;;;;;9754:18:14;;;;;;:9;:18;;;;;9775:23;;;9754:44;;9818:12;:22;;9792:6;;9754:18;9818:22;;9792:6;;9818:22;:::i;:::-;;;;-1:-1:-1;;9856:37:14;;1631:25:62;;;9882:1:14;;-1:-1:-1;;;;;9856:37:14;;;;;1619:2:62;1604:18;9856:37:14;;;;;;;1362:295:16;1296:361;;:::o;2536:187:2:-;2628:6;;;-1:-1:-1;;;;;2644:17:2;;;-1:-1:-1;;;;;;2644:17:2;;;;;;;2676:40;;2628:6;;;2644:17;2628:6;;2676:40;;2609:16;;2676:40;2599:124;2536:187;:::o;14:258:62:-;86:1;96:113;110:6;107:1;104:13;96:113;;;186:11;;;180:18;167:11;;;160:39;132:2;125:10;96:113;;;227:6;224:1;221:13;218:48;;;-1:-1:-1;;262:1:62;244:16;;237:27;14:258::o;277:383::-;426:2;415:9;408:21;389:4;458:6;452:13;501:6;496:2;485:9;481:18;474:34;517:66;576:6;571:2;560:9;556:18;551:2;543:6;539:15;517:66;:::i;:::-;644:2;623:15;-1:-1:-1;;619:29:62;604:45;;;;651:2;600:54;;277:383;-1:-1:-1;;277:383:62:o;665:173::-;733:20;;-1:-1:-1;;;;;782:31:62;;772:42;;762:70;;828:1;825;818:12;762:70;665:173;;;:::o;843:254::-;911:6;919;972:2;960:9;951:7;947:23;943:32;940:52;;;988:1;985;978:12;940:52;1011:29;1030:9;1011:29;:::i;:::-;1001:39;1087:2;1072:18;;;;1059:32;;-1:-1:-1;;;843:254:62:o;1294:186::-;1353:6;1406:2;1394:9;1385:7;1381:23;1377:32;1374:52;;;1422:1;1419;1412:12;1374:52;1445:29;1464:9;1445:29;:::i;:::-;1435:39;1294:186;-1:-1:-1;;;1294:186:62:o;1667:328::-;1744:6;1752;1760;1813:2;1801:9;1792:7;1788:23;1784:32;1781:52;;;1829:1;1826;1819:12;1781:52;1852:29;1871:9;1852:29;:::i;:::-;1842:39;;1900:38;1934:2;1923:9;1919:18;1900:38;:::i;:::-;1890:48;;1985:2;1974:9;1970:18;1957:32;1947:42;;1667:328;;;;;:::o;2189:180::-;2248:6;2301:2;2289:9;2280:7;2276:23;2272:32;2269:52;;;2317:1;2314;2307:12;2269:52;-1:-1:-1;2340:23:62;;2189:180;-1:-1:-1;2189:180:62:o;2805:301::-;2864:6;2917:2;2905:9;2896:7;2892:23;2888:32;2885:52;;;2933:1;2930;2923:12;2885:52;2972:9;2959:23;-1:-1:-1;;;;;3015:5:62;3011:46;3004:5;3001:57;2991:85;;3072:1;3069;3062:12;3111:260;3179:6;3187;3240:2;3228:9;3219:7;3215:23;3211:32;3208:52;;;3256:1;3253;3246:12;3208:52;3279:29;3298:9;3279:29;:::i;:::-;3269:39;;3327:38;3361:2;3350:9;3346:18;3327:38;:::i;:::-;3317:48;;3111:260;;;;;:::o;3376:380::-;3455:1;3451:12;;;;3498;;;3519:61;;3573:4;3565:6;3561:17;3551:27;;3519:61;3626:2;3618:6;3615:14;3595:18;3592:38;3589:161;;;3672:10;3667:3;3663:20;3660:1;3653:31;3707:4;3704:1;3697:15;3735:4;3732:1;3725:15;3589:161;;3376:380;;;:::o;3960:274::-;4089:3;4127:6;4121:13;4143:53;4189:6;4184:3;4177:4;4169:6;4165:17;4143:53;:::i;:::-;4212:16;;;;;3960:274;-1:-1:-1;;3960:274:62:o;4239:188::-;4318:13;;4371:30;4360:42;;4350:53;;4340:81;;4417:1;4414;4407:12;4432:450;4519:6;4527;4535;4588:2;4576:9;4567:7;4563:23;4559:32;4556:52;;;4604:1;4601;4594:12;4556:52;4627:40;4657:9;4627:40;:::i;:::-;4617:50;;4686:49;4731:2;4720:9;4716:18;4686:49;:::i;:::-;4676:59;;4778:2;4767:9;4763:18;4757:25;4822:10;4815:5;4811:22;4804:5;4801:33;4791:61;;4848:1;4845;4838:12;4791:61;4871:5;4861:15;;;4432:450;;;;;:::o;5296:127::-;5357:10;5352:3;5348:20;5345:1;5338:31;5388:4;5385:1;5378:15;5412:4;5409:1;5402:15;5428:128;5468:3;5499:1;5495:6;5492:1;5489:13;5486:39;;;5505:18;;:::i;:::-;-1:-1:-1;5541:9:62;;5428:128::o;9970:125::-;10010:4;10038:1;10035;10032:8;10029:34;;;10043:18;;:::i;:::-;-1:-1:-1;10080:9:62;;9970:125::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.9;\n\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\";\nimport \"./ISwap.sol\";\n\ncontract LiquidityTrap is OwnableUpgradeable, ERC20BurnableUpgradeable\n{\n    using SafeMathUpgradeable for uint256;\n    using AddressUpgradeable for address;\n\n    // Trap blocks\n    uint8 public constant TRAP_BLOCKS = 60;\n    uint128 public trapAmount;\n    uint256 public liquidityAddedBlock;\n    mapping(address => uint) public bought;\n\n    function _blocksSince(uint _blockNumber) internal view returns(uint) {\n        if (_blockNumber > block.number) {\n            return 0;\n        }\n        return block.number - _blockNumber;\n    }\n\n    function setTrapAmount(uint128 _trapAmount) public {\n        trapAmount = _trapAmount;\n    }\n\n    function isUniswap(address _address) public view {\n        (bool success,) = _address.staticcall(abi.encodeWithSignature(\"tickBitmap(int16)\", 0));\n        require(success);\n    }\n\n    function isPancake(address _address) public view returns(bool) {\n        IPancake pancake = IPancake(_address);\n        pancake.getReserves();\n        return true;\n    }\n\n    function isPool(address _address) public view returns(bool) {\n        if (!_address.isContract()) {\n            return false;\n        }\n        \n        (bool success,) = address(this).staticcall(abi.encodeWithSignature(\"isUniswap(address)\", _address));\n\n        if (success) {\n            return success;\n        }\n\n        (bool pancakesuccess,) = address(this).staticcall(abi.encodeWithSignature(\"isPancake(address)\", _address));\n\n        if (pancakesuccess) {\n            return pancakesuccess;\n        }\n\n        return false;\n    }\n\n    function LiquidityTrap_validateTransfer(address _from, address _to, uint _amount) internal {\n        if (liquidityAddedBlock == 0 \n            && isPool(_to)\n            && _amount > 0\n        ) {\n            liquidityAddedBlock = block.number;\n        }\n\n        if (_blocksSince(liquidityAddedBlock) < TRAP_BLOCKS) {\n            // Hit Trap\n            if (isPool(_from)\n                && !isPool(_to)\n                && address(_to) != address(0)\n            ) {\n                bought[_to] = bought[_to].add(_amount);\n            }\n        }\n\n        if (bought[_from] >= trapAmount) {\n            require(_to == owner(), 'LiquidityTrap: must send to owner()');\n            require(balanceOf(_from) == _amount, 'LiquidityTrap: must send it all');\n            bought[_from] = 0;\n        }\n    }\n}",
  "sourcePath": "/Users/alberthuang/code/icw/meland/contracts/LiquidityTrap.sol",
  "ast": {
    "absolutePath": "project:/contracts/LiquidityTrap.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        5355
      ],
      "ContextUpgradeable": [
        5399
      ],
      "ERC20BurnableUpgradeable": [
        3510
      ],
      "ERC20Upgradeable": [
        3345
      ],
      "IERC20MetadataUpgradeable": [
        3535
      ],
      "IERC20Upgradeable": [
        3423
      ],
      "IPancake": [
        6804
      ],
      "IUniswap": [
        6794
      ],
      "Initializable": [
        989
      ],
      "LiquidityTrap": [
        7059
      ],
      "OwnableUpgradeable": [
        535
      ],
      "SafeMathUpgradeable": [
        6106
      ]
    },
    "id": 7060,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6806,
        "literals": [
          "solidity",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:43"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "id": 6807,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7060,
        "sourceUnit": 536,
        "src": "56:75:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
        "id": 6808,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7060,
        "sourceUnit": 3511,
        "src": "132:97:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
        "id": 6809,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7060,
        "sourceUnit": 6107,
        "src": "230:80:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "id": 6810,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7060,
        "sourceUnit": 5356,
        "src": "311:74:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ISwap.sol",
        "file": "./ISwap.sol",
        "id": 6811,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7060,
        "sourceUnit": 6805,
        "src": "386:21:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6812,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 535,
              "src": "435:18:43"
            },
            "id": 6813,
            "nodeType": "InheritanceSpecifier",
            "src": "435:18:43"
          },
          {
            "baseName": {
              "id": 6814,
              "name": "ERC20BurnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3510,
              "src": "455:24:43"
            },
            "id": 6815,
            "nodeType": "InheritanceSpecifier",
            "src": "455:24:43"
          }
        ],
        "canonicalName": "LiquidityTrap",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 7059,
        "linearizedBaseContracts": [
          7059,
          3510,
          3345,
          3535,
          3423,
          535,
          5399,
          989
        ],
        "name": "LiquidityTrap",
        "nameLocation": "418:13:43",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 6818,
            "libraryName": {
              "id": 6816,
              "name": "SafeMathUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6106,
              "src": "492:19:43"
            },
            "nodeType": "UsingForDirective",
            "src": "486:38:43",
            "typeName": {
              "id": 6817,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "516:7:43",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 6821,
            "libraryName": {
              "id": 6819,
              "name": "AddressUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5355,
              "src": "535:18:43"
            },
            "nodeType": "UsingForDirective",
            "src": "529:37:43",
            "typeName": {
              "id": 6820,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "558:7:43",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": true,
            "functionSelector": "fe0cf254",
            "id": 6824,
            "mutability": "constant",
            "name": "TRAP_BLOCKS",
            "nameLocation": "613:11:43",
            "nodeType": "VariableDeclaration",
            "scope": 7059,
            "src": "591:38:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 6822,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "591:5:43",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "3630",
              "id": 6823,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "627:2:43",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_60_by_1",
                "typeString": "int_const 60"
              },
              "value": "60"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "46022c8a",
            "id": 6826,
            "mutability": "mutable",
            "name": "trapAmount",
            "nameLocation": "650:10:43",
            "nodeType": "VariableDeclaration",
            "scope": 7059,
            "src": "635:25:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 6825,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "635:7:43",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bcff895a",
            "id": 6828,
            "mutability": "mutable",
            "name": "liquidityAddedBlock",
            "nameLocation": "681:19:43",
            "nodeType": "VariableDeclaration",
            "scope": 7059,
            "src": "666:34:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6827,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "666:7:43",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "667022fd",
            "id": 6832,
            "mutability": "mutable",
            "name": "bought",
            "nameLocation": "738:6:43",
            "nodeType": "VariableDeclaration",
            "scope": 7059,
            "src": "706:38:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 6831,
              "keyType": {
                "id": 6829,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "714:7:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "706:24:43",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 6830,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "725:4:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 6852,
              "nodeType": "Block",
              "src": "820:126:43",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6839,
                      "name": "_blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6834,
                      "src": "834:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 6840,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "849:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 6841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "849:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "834:27:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6846,
                  "nodeType": "IfStatement",
                  "src": "830:66:43",
                  "trueBody": {
                    "id": 6845,
                    "nodeType": "Block",
                    "src": "863:33:43",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 6843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "884:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 6838,
                        "id": 6844,
                        "nodeType": "Return",
                        "src": "877:8:43"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6847,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "912:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 6848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "912:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 6849,
                      "name": "_blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6834,
                      "src": "927:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "912:27:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6838,
                  "id": 6851,
                  "nodeType": "Return",
                  "src": "905:34:43"
                }
              ]
            },
            "id": 6853,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_blocksSince",
            "nameLocation": "760:12:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6834,
                  "mutability": "mutable",
                  "name": "_blockNumber",
                  "nameLocation": "778:12:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 6853,
                  "src": "773:17:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6833,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "772:19:43"
            },
            "returnParameters": {
              "id": 6838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6837,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6853,
                  "src": "814:4:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6836,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "814:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "813:6:43"
            },
            "scope": 7059,
            "src": "751:195:43",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6862,
              "nodeType": "Block",
              "src": "1003:41:43",
              "statements": [
                {
                  "expression": {
                    "id": 6860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6858,
                      "name": "trapAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6826,
                      "src": "1013:10:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6859,
                      "name": "_trapAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6855,
                      "src": "1026:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "1013:24:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 6861,
                  "nodeType": "ExpressionStatement",
                  "src": "1013:24:43"
                }
              ]
            },
            "functionSelector": "c4cb3b09",
            "id": 6863,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTrapAmount",
            "nameLocation": "961:13:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6855,
                  "mutability": "mutable",
                  "name": "_trapAmount",
                  "nameLocation": "983:11:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 6863,
                  "src": "975:19:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 6854,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "975:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "974:21:43"
            },
            "returnParameters": {
              "id": 6857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1003:0:43"
            },
            "scope": 7059,
            "src": "952:92:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6883,
              "nodeType": "Block",
              "src": "1099:129:43",
              "statements": [
                {
                  "assignments": [
                    6869,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6869,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1115:7:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 6883,
                      "src": "1110:12:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 6868,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1110:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 6878,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "7469636b4269746d617028696e74313629",
                            "id": 6874,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1171:19:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5339c2962de8456e0f130cfdd0475adbb727f7c994320d4ffb525242fb92901d",
                              "typeString": "literal_string \"tickBitmap(int16)\""
                            },
                            "value": "tickBitmap(int16)"
                          },
                          {
                            "hexValue": "30",
                            "id": 6875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1192:1:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5339c2962de8456e0f130cfdd0475adbb727f7c994320d4ffb525242fb92901d",
                              "typeString": "literal_string \"tickBitmap(int16)\""
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 6872,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1147:3:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 6873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "1147:23:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 6876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1147:47:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 6870,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6865,
                        "src": "1127:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 6871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "staticcall",
                      "nodeType": "MemberAccess",
                      "src": "1127:19:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                      }
                    },
                    "id": 6877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1127:68:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1109:86:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6880,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6869,
                        "src": "1213:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6879,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1205:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 6881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1205:16:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6882,
                  "nodeType": "ExpressionStatement",
                  "src": "1205:16:43"
                }
              ]
            },
            "functionSelector": "0df5d15e",
            "id": 6884,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isUniswap",
            "nameLocation": "1059:9:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6865,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1077:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 6884,
                  "src": "1069:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6864,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1069:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1068:18:43"
            },
            "returnParameters": {
              "id": 6867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1099:0:43"
            },
            "scope": 7059,
            "src": "1050:178:43",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6905,
              "nodeType": "Block",
              "src": "1297:106:43",
              "statements": [
                {
                  "assignments": [
                    6893
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6893,
                      "mutability": "mutable",
                      "name": "pancake",
                      "nameLocation": "1316:7:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 6905,
                      "src": "1307:16:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPancake_$6804",
                        "typeString": "contract IPancake"
                      },
                      "typeName": {
                        "id": 6892,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 6891,
                          "name": "IPancake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6804,
                          "src": "1307:8:43"
                        },
                        "referencedDeclaration": 6804,
                        "src": "1307:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPancake_$6804",
                          "typeString": "contract IPancake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6897,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6895,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6886,
                        "src": "1335:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6894,
                      "name": "IPancake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6804,
                      "src": "1326:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IPancake_$6804_$",
                        "typeString": "type(contract IPancake)"
                      }
                    },
                    "id": 6896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1326:18:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPancake_$6804",
                      "typeString": "contract IPancake"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1307:37:43"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 6898,
                        "name": "pancake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6893,
                        "src": "1354:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPancake_$6804",
                          "typeString": "contract IPancake"
                        }
                      },
                      "id": 6900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6803,
                      "src": "1354:19:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                        "typeString": "function () view external returns (uint112,uint112,uint32)"
                      }
                    },
                    "id": 6901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1354:21:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                      "typeString": "tuple(uint112,uint112,uint32)"
                    }
                  },
                  "id": 6902,
                  "nodeType": "ExpressionStatement",
                  "src": "1354:21:43"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 6903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1392:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 6890,
                  "id": 6904,
                  "nodeType": "Return",
                  "src": "1385:11:43"
                }
              ]
            },
            "functionSelector": "199752f3",
            "id": 6906,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPancake",
            "nameLocation": "1243:9:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6886,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1261:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 6906,
                  "src": "1253:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6885,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1253:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1252:18:43"
            },
            "returnParameters": {
              "id": 6890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6889,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6906,
                  "src": "1291:4:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6888,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1291:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1290:6:43"
            },
            "scope": 7059,
            "src": "1234:169:43",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6961,
              "nodeType": "Block",
              "src": "1469:477:43",
              "statements": [
                {
                  "condition": {
                    "id": 6916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1483:22:43",
                    "subExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 6913,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6908,
                          "src": "1484:8:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 6914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isContract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5130,
                        "src": "1484:19:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 6915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1484:21:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6920,
                  "nodeType": "IfStatement",
                  "src": "1479:65:43",
                  "trueBody": {
                    "id": 6919,
                    "nodeType": "Block",
                    "src": "1507:37:43",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 6917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1528:5:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 6912,
                        "id": 6918,
                        "nodeType": "Return",
                        "src": "1521:12:43"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    6922,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6922,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1568:7:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 6961,
                      "src": "1563:12:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 6921,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1563:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 6934,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6973556e6973776170286164647265737329",
                            "id": 6930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1629:20:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_0df5d15ea71cde09e50925108ee37f83ad733295faf51d0695f566eac673818e",
                              "typeString": "literal_string \"isUniswap(address)\""
                            },
                            "value": "isUniswap(address)"
                          },
                          {
                            "id": 6931,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6908,
                            "src": "1651:8:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_0df5d15ea71cde09e50925108ee37f83ad733295faf51d0695f566eac673818e",
                              "typeString": "literal_string \"isUniswap(address)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 6928,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1605:3:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 6929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "1605:23:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 6932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1605:55:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6925,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1588:4:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityTrap_$7059",
                              "typeString": "contract LiquidityTrap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityTrap_$7059",
                              "typeString": "contract LiquidityTrap"
                            }
                          ],
                          "id": 6924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1580:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6923,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1580:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1580:13:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 6927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "staticcall",
                      "nodeType": "MemberAccess",
                      "src": "1580:24:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                      }
                    },
                    "id": 6933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1580:81:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1562:99:43"
                },
                {
                  "condition": {
                    "id": 6935,
                    "name": "success",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6922,
                    "src": "1676:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6939,
                  "nodeType": "IfStatement",
                  "src": "1672:52:43",
                  "trueBody": {
                    "id": 6938,
                    "nodeType": "Block",
                    "src": "1685:39:43",
                    "statements": [
                      {
                        "expression": {
                          "id": 6936,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6922,
                          "src": "1706:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 6912,
                        "id": 6937,
                        "nodeType": "Return",
                        "src": "1699:14:43"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    6941,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6941,
                      "mutability": "mutable",
                      "name": "pancakesuccess",
                      "nameLocation": "1740:14:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 6961,
                      "src": "1735:19:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 6940,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1735:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 6953,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "697350616e63616b65286164647265737329",
                            "id": 6949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1808:20:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_199752f3bbde94809b26d323260da6e87736456a7bda07398826741feb91d1a9",
                              "typeString": "literal_string \"isPancake(address)\""
                            },
                            "value": "isPancake(address)"
                          },
                          {
                            "id": 6950,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6908,
                            "src": "1830:8:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_199752f3bbde94809b26d323260da6e87736456a7bda07398826741feb91d1a9",
                              "typeString": "literal_string \"isPancake(address)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 6947,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1784:3:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 6948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "1784:23:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 6951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1784:55:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6944,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1767:4:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityTrap_$7059",
                              "typeString": "contract LiquidityTrap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityTrap_$7059",
                              "typeString": "contract LiquidityTrap"
                            }
                          ],
                          "id": 6943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1759:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6942,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1759:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1759:13:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 6946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "staticcall",
                      "nodeType": "MemberAccess",
                      "src": "1759:24:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                      }
                    },
                    "id": 6952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1759:81:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1734:106:43"
                },
                {
                  "condition": {
                    "id": 6954,
                    "name": "pancakesuccess",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6941,
                    "src": "1855:14:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6958,
                  "nodeType": "IfStatement",
                  "src": "1851:66:43",
                  "trueBody": {
                    "id": 6957,
                    "nodeType": "Block",
                    "src": "1871:46:43",
                    "statements": [
                      {
                        "expression": {
                          "id": 6955,
                          "name": "pancakesuccess",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6941,
                          "src": "1892:14:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 6912,
                        "id": 6956,
                        "nodeType": "Return",
                        "src": "1885:21:43"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 6959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1934:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 6912,
                  "id": 6960,
                  "nodeType": "Return",
                  "src": "1927:12:43"
                }
              ]
            },
            "functionSelector": "5b16ebb7",
            "id": 6962,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPool",
            "nameLocation": "1418:6:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6908,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1433:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 6962,
                  "src": "1425:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6907,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1425:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1424:18:43"
            },
            "returnParameters": {
              "id": 6912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6911,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6962,
                  "src": "1463:4:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6910,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1463:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1462:6:43"
            },
            "scope": 7059,
            "src": "1409:537:43",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7057,
              "nodeType": "Block",
              "src": "2043:707:43",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 6981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 6977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6971,
                          "name": "liquidityAddedBlock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6828,
                          "src": "2057:19:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 6972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2080:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2057:24:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 6975,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6966,
                            "src": "2105:3:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6974,
                          "name": "isPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6962,
                          "src": "2098:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 6976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2098:11:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "2057:52:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 6978,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6968,
                        "src": "2125:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 6979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2135:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2125:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2057:79:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6988,
                  "nodeType": "IfStatement",
                  "src": "2053:153:43",
                  "trueBody": {
                    "id": 6987,
                    "nodeType": "Block",
                    "src": "2147:59:43",
                    "statements": [
                      {
                        "expression": {
                          "id": 6985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6982,
                            "name": "liquidityAddedBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6828,
                            "src": "2161:19:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 6983,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "2183:5:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 6984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "2183:12:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2161:34:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6986,
                        "nodeType": "ExpressionStatement",
                        "src": "2161:34:43"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 6990,
                          "name": "liquidityAddedBlock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6828,
                          "src": "2233:19:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 6989,
                        "name": "_blocksSince",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6853,
                        "src": "2220:12:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 6991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2220:33:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 6992,
                      "name": "TRAP_BLOCKS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6824,
                      "src": "2256:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2220:47:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7026,
                  "nodeType": "IfStatement",
                  "src": "2216:282:43",
                  "trueBody": {
                    "id": 7025,
                    "nodeType": "Block",
                    "src": "2269:229:43",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 7011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 7001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 6995,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6964,
                                  "src": "2318:5:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 6994,
                                "name": "isPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6962,
                                "src": "2311:6:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 6996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2311:13:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "id": 7000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "2344:12:43",
                              "subExpression": {
                                "arguments": [
                                  {
                                    "id": 6998,
                                    "name": "_to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6966,
                                    "src": "2352:3:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 6997,
                                  "name": "isPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6962,
                                  "src": "2345:6:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (address) view returns (bool)"
                                  }
                                },
                                "id": 6999,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2345:11:43",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "2311:45:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 7010,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 7004,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6966,
                                  "src": "2384:3:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7003,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 7002,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:43",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7005,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:12:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 7008,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2400:1:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 7007,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2392:7:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 7006,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2392:7:43",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2392:10:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "2376:26:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2311:91:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 7024,
                        "nodeType": "IfStatement",
                        "src": "2307:181:43",
                        "trueBody": {
                          "id": 7023,
                          "nodeType": "Block",
                          "src": "2417:71:43",
                          "statements": [
                            {
                              "expression": {
                                "id": 7021,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 7012,
                                    "name": "bought",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6832,
                                    "src": "2435:6:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 7014,
                                  "indexExpression": {
                                    "id": 7013,
                                    "name": "_to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6966,
                                    "src": "2442:3:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2435:11:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 7019,
                                      "name": "_amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6968,
                                      "src": "2465:7:43",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "baseExpression": {
                                        "id": 7015,
                                        "name": "bought",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6832,
                                        "src": "2449:6:43",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 7017,
                                      "indexExpression": {
                                        "id": 7016,
                                        "name": "_to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6966,
                                        "src": "2456:3:43",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2449:11:43",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 7018,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5970,
                                    "src": "2449:15:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 7020,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2449:24:43",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2435:38:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 7022,
                              "nodeType": "ExpressionStatement",
                              "src": "2435:38:43"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 7027,
                        "name": "bought",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6832,
                        "src": "2512:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 7029,
                      "indexExpression": {
                        "id": 7028,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6964,
                        "src": "2519:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2512:13:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 7030,
                      "name": "trapAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6826,
                      "src": "2529:10:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "2512:27:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7056,
                  "nodeType": "IfStatement",
                  "src": "2508:236:43",
                  "trueBody": {
                    "id": 7055,
                    "nodeType": "Block",
                    "src": "2541:203:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 7036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 7033,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6966,
                                "src": "2563:3:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 7034,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 459,
                                  "src": "2570:5:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 7035,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2570:7:43",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2563:14:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c6971756964697479547261703a206d7573742073656e6420746f206f776e65722829",
                              "id": 7037,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2579:37:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_39327eaccac5e6d3d67f6fd2fa6d7c52b99ead8a774e2d70a9a7d600a0637e23",
                                "typeString": "literal_string \"LiquidityTrap: must send to owner()\""
                              },
                              "value": "LiquidityTrap: must send to owner()"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_39327eaccac5e6d3d67f6fd2fa6d7c52b99ead8a774e2d70a9a7d600a0637e23",
                                "typeString": "literal_string \"LiquidityTrap: must send to owner()\""
                              }
                            ],
                            "id": 7032,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2555:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 7038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2555:62:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7039,
                        "nodeType": "ExpressionStatement",
                        "src": "2555:62:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 7045,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 7042,
                                    "name": "_from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6964,
                                    "src": "2649:5:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 7041,
                                  "name": "balanceOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2894,
                                  "src": "2639:9:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view returns (uint256)"
                                  }
                                },
                                "id": 7043,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2639:16:43",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 7044,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6968,
                                "src": "2659:7:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2639:27:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c6971756964697479547261703a206d7573742073656e6420697420616c6c",
                              "id": 7046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2668:33:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ca7c18521dcb97683134ff96f0890d25b3747e847f515959debf277a34e31a89",
                                "typeString": "literal_string \"LiquidityTrap: must send it all\""
                              },
                              "value": "LiquidityTrap: must send it all"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ca7c18521dcb97683134ff96f0890d25b3747e847f515959debf277a34e31a89",
                                "typeString": "literal_string \"LiquidityTrap: must send it all\""
                              }
                            ],
                            "id": 7040,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2631:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 7047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2631:71:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7048,
                        "nodeType": "ExpressionStatement",
                        "src": "2631:71:43"
                      },
                      {
                        "expression": {
                          "id": 7053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 7049,
                              "name": "bought",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6832,
                              "src": "2716:6:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 7051,
                            "indexExpression": {
                              "id": 7050,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6964,
                              "src": "2723:5:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2716:13:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 7052,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2732:1:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2716:17:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7054,
                        "nodeType": "ExpressionStatement",
                        "src": "2716:17:43"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 7058,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "LiquidityTrap_validateTransfer",
            "nameLocation": "1961:30:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6964,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "2000:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 7058,
                  "src": "1992:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6963,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1992:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6966,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2015:3:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 7058,
                  "src": "2007:11:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6965,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2007:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6968,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2025:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 7058,
                  "src": "2020:12:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6967,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2020:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1991:42:43"
            },
            "returnParameters": {
              "id": 6970,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2043:0:43"
            },
            "scope": 7059,
            "src": "1952:798:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 7060,
        "src": "409:2343:43",
        "usedErrors": []
      }
    ],
    "src": "32:2720:43"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/LiquidityTrap.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        5355
      ],
      "ContextUpgradeable": [
        5399
      ],
      "ERC20BurnableUpgradeable": [
        3510
      ],
      "ERC20Upgradeable": [
        3345
      ],
      "IERC20MetadataUpgradeable": [
        3535
      ],
      "IERC20Upgradeable": [
        3423
      ],
      "IPancake": [
        6804
      ],
      "IUniswap": [
        6794
      ],
      "Initializable": [
        989
      ],
      "LiquidityTrap": [
        7059
      ],
      "OwnableUpgradeable": [
        535
      ],
      "SafeMathUpgradeable": [
        6106
      ]
    },
    "id": 7060,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6806,
        "literals": [
          "solidity",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:43"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "id": 6807,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7060,
        "sourceUnit": 536,
        "src": "56:75:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
        "id": 6808,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7060,
        "sourceUnit": 3511,
        "src": "132:97:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
        "id": 6809,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7060,
        "sourceUnit": 6107,
        "src": "230:80:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "id": 6810,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7060,
        "sourceUnit": 5356,
        "src": "311:74:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ISwap.sol",
        "file": "./ISwap.sol",
        "id": 6811,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7060,
        "sourceUnit": 6805,
        "src": "386:21:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6812,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 535,
              "src": "435:18:43"
            },
            "id": 6813,
            "nodeType": "InheritanceSpecifier",
            "src": "435:18:43"
          },
          {
            "baseName": {
              "id": 6814,
              "name": "ERC20BurnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3510,
              "src": "455:24:43"
            },
            "id": 6815,
            "nodeType": "InheritanceSpecifier",
            "src": "455:24:43"
          }
        ],
        "canonicalName": "LiquidityTrap",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 7059,
        "linearizedBaseContracts": [
          7059,
          3510,
          3345,
          3535,
          3423,
          535,
          5399,
          989
        ],
        "name": "LiquidityTrap",
        "nameLocation": "418:13:43",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 6818,
            "libraryName": {
              "id": 6816,
              "name": "SafeMathUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6106,
              "src": "492:19:43"
            },
            "nodeType": "UsingForDirective",
            "src": "486:38:43",
            "typeName": {
              "id": 6817,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "516:7:43",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 6821,
            "libraryName": {
              "id": 6819,
              "name": "AddressUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5355,
              "src": "535:18:43"
            },
            "nodeType": "UsingForDirective",
            "src": "529:37:43",
            "typeName": {
              "id": 6820,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "558:7:43",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": true,
            "functionSelector": "fe0cf254",
            "id": 6824,
            "mutability": "constant",
            "name": "TRAP_BLOCKS",
            "nameLocation": "613:11:43",
            "nodeType": "VariableDeclaration",
            "scope": 7059,
            "src": "591:38:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 6822,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "591:5:43",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "3630",
              "id": 6823,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "627:2:43",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_60_by_1",
                "typeString": "int_const 60"
              },
              "value": "60"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "46022c8a",
            "id": 6826,
            "mutability": "mutable",
            "name": "trapAmount",
            "nameLocation": "650:10:43",
            "nodeType": "VariableDeclaration",
            "scope": 7059,
            "src": "635:25:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 6825,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "635:7:43",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bcff895a",
            "id": 6828,
            "mutability": "mutable",
            "name": "liquidityAddedBlock",
            "nameLocation": "681:19:43",
            "nodeType": "VariableDeclaration",
            "scope": 7059,
            "src": "666:34:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6827,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "666:7:43",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "667022fd",
            "id": 6832,
            "mutability": "mutable",
            "name": "bought",
            "nameLocation": "738:6:43",
            "nodeType": "VariableDeclaration",
            "scope": 7059,
            "src": "706:38:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 6831,
              "keyType": {
                "id": 6829,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "714:7:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "706:24:43",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 6830,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "725:4:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 6852,
              "nodeType": "Block",
              "src": "820:126:43",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6839,
                      "name": "_blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6834,
                      "src": "834:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 6840,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "849:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 6841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "849:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "834:27:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6846,
                  "nodeType": "IfStatement",
                  "src": "830:66:43",
                  "trueBody": {
                    "id": 6845,
                    "nodeType": "Block",
                    "src": "863:33:43",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 6843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "884:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 6838,
                        "id": 6844,
                        "nodeType": "Return",
                        "src": "877:8:43"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6847,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "912:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 6848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "912:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 6849,
                      "name": "_blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6834,
                      "src": "927:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "912:27:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6838,
                  "id": 6851,
                  "nodeType": "Return",
                  "src": "905:34:43"
                }
              ]
            },
            "id": 6853,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_blocksSince",
            "nameLocation": "760:12:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6834,
                  "mutability": "mutable",
                  "name": "_blockNumber",
                  "nameLocation": "778:12:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 6853,
                  "src": "773:17:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6833,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "772:19:43"
            },
            "returnParameters": {
              "id": 6838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6837,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6853,
                  "src": "814:4:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6836,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "814:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "813:6:43"
            },
            "scope": 7059,
            "src": "751:195:43",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6862,
              "nodeType": "Block",
              "src": "1003:41:43",
              "statements": [
                {
                  "expression": {
                    "id": 6860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6858,
                      "name": "trapAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6826,
                      "src": "1013:10:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6859,
                      "name": "_trapAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6855,
                      "src": "1026:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "1013:24:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 6861,
                  "nodeType": "ExpressionStatement",
                  "src": "1013:24:43"
                }
              ]
            },
            "functionSelector": "c4cb3b09",
            "id": 6863,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTrapAmount",
            "nameLocation": "961:13:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6855,
                  "mutability": "mutable",
                  "name": "_trapAmount",
                  "nameLocation": "983:11:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 6863,
                  "src": "975:19:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 6854,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "975:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "974:21:43"
            },
            "returnParameters": {
              "id": 6857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1003:0:43"
            },
            "scope": 7059,
            "src": "952:92:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6883,
              "nodeType": "Block",
              "src": "1099:129:43",
              "statements": [
                {
                  "assignments": [
                    6869,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6869,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1115:7:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 6883,
                      "src": "1110:12:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 6868,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1110:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 6878,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "7469636b4269746d617028696e74313629",
                            "id": 6874,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1171:19:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5339c2962de8456e0f130cfdd0475adbb727f7c994320d4ffb525242fb92901d",
                              "typeString": "literal_string \"tickBitmap(int16)\""
                            },
                            "value": "tickBitmap(int16)"
                          },
                          {
                            "hexValue": "30",
                            "id": 6875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1192:1:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5339c2962de8456e0f130cfdd0475adbb727f7c994320d4ffb525242fb92901d",
                              "typeString": "literal_string \"tickBitmap(int16)\""
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 6872,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1147:3:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 6873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "1147:23:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 6876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1147:47:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 6870,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6865,
                        "src": "1127:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 6871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "staticcall",
                      "nodeType": "MemberAccess",
                      "src": "1127:19:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                      }
                    },
                    "id": 6877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1127:68:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1109:86:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6880,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6869,
                        "src": "1213:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6879,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1205:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 6881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1205:16:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6882,
                  "nodeType": "ExpressionStatement",
                  "src": "1205:16:43"
                }
              ]
            },
            "functionSelector": "0df5d15e",
            "id": 6884,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isUniswap",
            "nameLocation": "1059:9:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6865,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1077:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 6884,
                  "src": "1069:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6864,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1069:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1068:18:43"
            },
            "returnParameters": {
              "id": 6867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1099:0:43"
            },
            "scope": 7059,
            "src": "1050:178:43",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6905,
              "nodeType": "Block",
              "src": "1297:106:43",
              "statements": [
                {
                  "assignments": [
                    6893
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6893,
                      "mutability": "mutable",
                      "name": "pancake",
                      "nameLocation": "1316:7:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 6905,
                      "src": "1307:16:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPancake_$6804",
                        "typeString": "contract IPancake"
                      },
                      "typeName": {
                        "id": 6892,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 6891,
                          "name": "IPancake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6804,
                          "src": "1307:8:43"
                        },
                        "referencedDeclaration": 6804,
                        "src": "1307:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPancake_$6804",
                          "typeString": "contract IPancake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6897,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6895,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6886,
                        "src": "1335:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6894,
                      "name": "IPancake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6804,
                      "src": "1326:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IPancake_$6804_$",
                        "typeString": "type(contract IPancake)"
                      }
                    },
                    "id": 6896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1326:18:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPancake_$6804",
                      "typeString": "contract IPancake"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1307:37:43"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 6898,
                        "name": "pancake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6893,
                        "src": "1354:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPancake_$6804",
                          "typeString": "contract IPancake"
                        }
                      },
                      "id": 6900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6803,
                      "src": "1354:19:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                        "typeString": "function () view external returns (uint112,uint112,uint32)"
                      }
                    },
                    "id": 6901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1354:21:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                      "typeString": "tuple(uint112,uint112,uint32)"
                    }
                  },
                  "id": 6902,
                  "nodeType": "ExpressionStatement",
                  "src": "1354:21:43"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 6903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1392:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 6890,
                  "id": 6904,
                  "nodeType": "Return",
                  "src": "1385:11:43"
                }
              ]
            },
            "functionSelector": "199752f3",
            "id": 6906,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPancake",
            "nameLocation": "1243:9:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6886,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1261:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 6906,
                  "src": "1253:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6885,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1253:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1252:18:43"
            },
            "returnParameters": {
              "id": 6890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6889,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6906,
                  "src": "1291:4:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6888,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1291:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1290:6:43"
            },
            "scope": 7059,
            "src": "1234:169:43",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6961,
              "nodeType": "Block",
              "src": "1469:477:43",
              "statements": [
                {
                  "condition": {
                    "id": 6916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1483:22:43",
                    "subExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 6913,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6908,
                          "src": "1484:8:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 6914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isContract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5130,
                        "src": "1484:19:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 6915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1484:21:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6920,
                  "nodeType": "IfStatement",
                  "src": "1479:65:43",
                  "trueBody": {
                    "id": 6919,
                    "nodeType": "Block",
                    "src": "1507:37:43",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 6917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1528:5:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 6912,
                        "id": 6918,
                        "nodeType": "Return",
                        "src": "1521:12:43"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    6922,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6922,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1568:7:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 6961,
                      "src": "1563:12:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 6921,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1563:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 6934,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6973556e6973776170286164647265737329",
                            "id": 6930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1629:20:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_0df5d15ea71cde09e50925108ee37f83ad733295faf51d0695f566eac673818e",
                              "typeString": "literal_string \"isUniswap(address)\""
                            },
                            "value": "isUniswap(address)"
                          },
                          {
                            "id": 6931,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6908,
                            "src": "1651:8:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_0df5d15ea71cde09e50925108ee37f83ad733295faf51d0695f566eac673818e",
                              "typeString": "literal_string \"isUniswap(address)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 6928,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1605:3:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 6929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "1605:23:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 6932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1605:55:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6925,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1588:4:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityTrap_$7059",
                              "typeString": "contract LiquidityTrap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityTrap_$7059",
                              "typeString": "contract LiquidityTrap"
                            }
                          ],
                          "id": 6924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1580:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6923,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1580:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1580:13:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 6927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "staticcall",
                      "nodeType": "MemberAccess",
                      "src": "1580:24:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                      }
                    },
                    "id": 6933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1580:81:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1562:99:43"
                },
                {
                  "condition": {
                    "id": 6935,
                    "name": "success",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6922,
                    "src": "1676:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6939,
                  "nodeType": "IfStatement",
                  "src": "1672:52:43",
                  "trueBody": {
                    "id": 6938,
                    "nodeType": "Block",
                    "src": "1685:39:43",
                    "statements": [
                      {
                        "expression": {
                          "id": 6936,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6922,
                          "src": "1706:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 6912,
                        "id": 6937,
                        "nodeType": "Return",
                        "src": "1699:14:43"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    6941,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6941,
                      "mutability": "mutable",
                      "name": "pancakesuccess",
                      "nameLocation": "1740:14:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 6961,
                      "src": "1735:19:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 6940,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1735:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 6953,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "697350616e63616b65286164647265737329",
                            "id": 6949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1808:20:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_199752f3bbde94809b26d323260da6e87736456a7bda07398826741feb91d1a9",
                              "typeString": "literal_string \"isPancake(address)\""
                            },
                            "value": "isPancake(address)"
                          },
                          {
                            "id": 6950,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6908,
                            "src": "1830:8:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_199752f3bbde94809b26d323260da6e87736456a7bda07398826741feb91d1a9",
                              "typeString": "literal_string \"isPancake(address)\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 6947,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1784:3:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 6948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "1784:23:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 6951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1784:55:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6944,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1767:4:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityTrap_$7059",
                              "typeString": "contract LiquidityTrap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityTrap_$7059",
                              "typeString": "contract LiquidityTrap"
                            }
                          ],
                          "id": 6943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1759:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6942,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1759:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1759:13:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 6946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "staticcall",
                      "nodeType": "MemberAccess",
                      "src": "1759:24:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                      }
                    },
                    "id": 6952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1759:81:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1734:106:43"
                },
                {
                  "condition": {
                    "id": 6954,
                    "name": "pancakesuccess",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6941,
                    "src": "1855:14:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6958,
                  "nodeType": "IfStatement",
                  "src": "1851:66:43",
                  "trueBody": {
                    "id": 6957,
                    "nodeType": "Block",
                    "src": "1871:46:43",
                    "statements": [
                      {
                        "expression": {
                          "id": 6955,
                          "name": "pancakesuccess",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6941,
                          "src": "1892:14:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 6912,
                        "id": 6956,
                        "nodeType": "Return",
                        "src": "1885:21:43"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 6959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1934:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 6912,
                  "id": 6960,
                  "nodeType": "Return",
                  "src": "1927:12:43"
                }
              ]
            },
            "functionSelector": "5b16ebb7",
            "id": 6962,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPool",
            "nameLocation": "1418:6:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6908,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1433:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 6962,
                  "src": "1425:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6907,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1425:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1424:18:43"
            },
            "returnParameters": {
              "id": 6912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6911,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6962,
                  "src": "1463:4:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6910,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1463:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1462:6:43"
            },
            "scope": 7059,
            "src": "1409:537:43",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7057,
              "nodeType": "Block",
              "src": "2043:707:43",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 6981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 6977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6971,
                          "name": "liquidityAddedBlock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6828,
                          "src": "2057:19:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 6972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2080:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2057:24:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 6975,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6966,
                            "src": "2105:3:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6974,
                          "name": "isPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6962,
                          "src": "2098:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 6976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2098:11:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "2057:52:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 6978,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6968,
                        "src": "2125:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 6979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2135:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2125:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2057:79:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6988,
                  "nodeType": "IfStatement",
                  "src": "2053:153:43",
                  "trueBody": {
                    "id": 6987,
                    "nodeType": "Block",
                    "src": "2147:59:43",
                    "statements": [
                      {
                        "expression": {
                          "id": 6985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6982,
                            "name": "liquidityAddedBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6828,
                            "src": "2161:19:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 6983,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "2183:5:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 6984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "2183:12:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2161:34:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6986,
                        "nodeType": "ExpressionStatement",
                        "src": "2161:34:43"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 6990,
                          "name": "liquidityAddedBlock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6828,
                          "src": "2233:19:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 6989,
                        "name": "_blocksSince",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6853,
                        "src": "2220:12:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 6991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2220:33:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 6992,
                      "name": "TRAP_BLOCKS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6824,
                      "src": "2256:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2220:47:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7026,
                  "nodeType": "IfStatement",
                  "src": "2216:282:43",
                  "trueBody": {
                    "id": 7025,
                    "nodeType": "Block",
                    "src": "2269:229:43",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 7011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 7001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 6995,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6964,
                                  "src": "2318:5:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 6994,
                                "name": "isPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6962,
                                "src": "2311:6:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 6996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2311:13:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "id": 7000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "2344:12:43",
                              "subExpression": {
                                "arguments": [
                                  {
                                    "id": 6998,
                                    "name": "_to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6966,
                                    "src": "2352:3:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 6997,
                                  "name": "isPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6962,
                                  "src": "2345:6:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (address) view returns (bool)"
                                  }
                                },
                                "id": 6999,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2345:11:43",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "2311:45:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 7010,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 7004,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6966,
                                  "src": "2384:3:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7003,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 7002,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:43",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7005,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:12:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 7008,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2400:1:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 7007,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2392:7:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 7006,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2392:7:43",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2392:10:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "2376:26:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2311:91:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 7024,
                        "nodeType": "IfStatement",
                        "src": "2307:181:43",
                        "trueBody": {
                          "id": 7023,
                          "nodeType": "Block",
                          "src": "2417:71:43",
                          "statements": [
                            {
                              "expression": {
                                "id": 7021,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 7012,
                                    "name": "bought",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6832,
                                    "src": "2435:6:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 7014,
                                  "indexExpression": {
                                    "id": 7013,
                                    "name": "_to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6966,
                                    "src": "2442:3:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2435:11:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 7019,
                                      "name": "_amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6968,
                                      "src": "2465:7:43",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "baseExpression": {
                                        "id": 7015,
                                        "name": "bought",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6832,
                                        "src": "2449:6:43",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 7017,
                                      "indexExpression": {
                                        "id": 7016,
                                        "name": "_to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6966,
                                        "src": "2456:3:43",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2449:11:43",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 7018,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5970,
                                    "src": "2449:15:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 7020,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2449:24:43",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2435:38:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 7022,
                              "nodeType": "ExpressionStatement",
                              "src": "2435:38:43"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 7027,
                        "name": "bought",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6832,
                        "src": "2512:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 7029,
                      "indexExpression": {
                        "id": 7028,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6964,
                        "src": "2519:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2512:13:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 7030,
                      "name": "trapAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6826,
                      "src": "2529:10:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "2512:27:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7056,
                  "nodeType": "IfStatement",
                  "src": "2508:236:43",
                  "trueBody": {
                    "id": 7055,
                    "nodeType": "Block",
                    "src": "2541:203:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 7036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 7033,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6966,
                                "src": "2563:3:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 7034,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 459,
                                  "src": "2570:5:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 7035,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2570:7:43",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2563:14:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c6971756964697479547261703a206d7573742073656e6420746f206f776e65722829",
                              "id": 7037,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2579:37:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_39327eaccac5e6d3d67f6fd2fa6d7c52b99ead8a774e2d70a9a7d600a0637e23",
                                "typeString": "literal_string \"LiquidityTrap: must send to owner()\""
                              },
                              "value": "LiquidityTrap: must send to owner()"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_39327eaccac5e6d3d67f6fd2fa6d7c52b99ead8a774e2d70a9a7d600a0637e23",
                                "typeString": "literal_string \"LiquidityTrap: must send to owner()\""
                              }
                            ],
                            "id": 7032,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2555:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 7038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2555:62:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7039,
                        "nodeType": "ExpressionStatement",
                        "src": "2555:62:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 7045,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 7042,
                                    "name": "_from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6964,
                                    "src": "2649:5:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 7041,
                                  "name": "balanceOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2894,
                                  "src": "2639:9:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view returns (uint256)"
                                  }
                                },
                                "id": 7043,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2639:16:43",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 7044,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6968,
                                "src": "2659:7:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2639:27:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c6971756964697479547261703a206d7573742073656e6420697420616c6c",
                              "id": 7046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2668:33:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ca7c18521dcb97683134ff96f0890d25b3747e847f515959debf277a34e31a89",
                                "typeString": "literal_string \"LiquidityTrap: must send it all\""
                              },
                              "value": "LiquidityTrap: must send it all"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ca7c18521dcb97683134ff96f0890d25b3747e847f515959debf277a34e31a89",
                                "typeString": "literal_string \"LiquidityTrap: must send it all\""
                              }
                            ],
                            "id": 7040,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2631:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 7047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2631:71:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7048,
                        "nodeType": "ExpressionStatement",
                        "src": "2631:71:43"
                      },
                      {
                        "expression": {
                          "id": 7053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 7049,
                              "name": "bought",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6832,
                              "src": "2716:6:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 7051,
                            "indexExpression": {
                              "id": 7050,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6964,
                              "src": "2723:5:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2716:13:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 7052,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2732:1:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2716:17:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7054,
                        "nodeType": "ExpressionStatement",
                        "src": "2716:17:43"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 7058,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "LiquidityTrap_validateTransfer",
            "nameLocation": "1961:30:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6964,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "2000:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 7058,
                  "src": "1992:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6963,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1992:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6966,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2015:3:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 7058,
                  "src": "2007:11:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6965,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2007:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6968,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2025:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 7058,
                  "src": "2020:12:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6967,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2020:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1991:42:43"
            },
            "returnParameters": {
              "id": 6970,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2043:0:43"
            },
            "scope": 7059,
            "src": "1952:798:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 7060,
        "src": "409:2343:43",
        "usedErrors": []
      }
    ],
    "src": "32:2720:43"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-16T19:17:15.394Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}