{
  "contractName": "NFTFactory",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC1155",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract IERC721",
              "name": "erc721",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct NFTFactory.ERC721Or1155",
          "name": "nft",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "operationTime",
          "type": "uint256"
        }
      ],
      "name": "NFTSupportCreate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC1155",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract IERC721",
              "name": "erc721",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct NFTFactory.ERC721Or1155",
          "name": "nft",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "operationTime",
          "type": "uint256"
        }
      ],
      "name": "NFTSupportRemove",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "proposer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "proposalTime",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "indexed": false,
          "internalType": "struct NFTFactory.RFC",
          "name": "rfc",
          "type": "tuple"
        }
      ],
      "name": "RFCApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "proposer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "proposalTime",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "indexed": false,
          "internalType": "struct NFTFactory.RFC",
          "name": "rfc",
          "type": "tuple"
        }
      ],
      "name": "RFCCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GM_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UPGRADER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "supportNFTs",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IERC1155",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract IERC721",
              "name": "erc721",
              "type": "address"
            }
          ],
          "internalType": "struct NFTFactory.ERC721Or1155",
          "name": "erc721or1155",
          "type": "tuple"
        },
        {
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "supportRFCs",
      "outputs": [
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "proposalTime",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        }
      ],
      "name": "newRFC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        }
      ],
      "name": "approveRFC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        }
      ],
      "name": "newSupport",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC1155\",\"name\":\"erc1155\",\"type\":\"address\"},{\"internalType\":\"contract IERC721\",\"name\":\"erc721\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct NFTFactory.ERC721Or1155\",\"name\":\"nft\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"operationTime\",\"type\":\"uint256\"}],\"name\":\"NFTSupportCreate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC1155\",\"name\":\"erc1155\",\"type\":\"address\"},{\"internalType\":\"contract IERC721\",\"name\":\"erc721\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct NFTFactory.ERC721Or1155\",\"name\":\"nft\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"operationTime\",\"type\":\"uint256\"}],\"name\":\"NFTSupportRemove\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"proposalTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct NFTFactory.RFC\",\"name\":\"rfc\",\"type\":\"tuple\"}],\"name\":\"RFCApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"proposalTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct NFTFactory.RFC\",\"name\":\"rfc\",\"type\":\"tuple\"}],\"name\":\"RFCCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GM_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"}],\"name\":\"approveRFC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"}],\"name\":\"newRFC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"}],\"name\":\"newSupport\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"supportNFTs\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC1155\",\"name\":\"erc1155\",\"type\":\"address\"},{\"internalType\":\"contract IERC721\",\"name\":\"erc721\",\"type\":\"address\"}],\"internalType\":\"struct NFTFactory.ERC721Or1155\",\"name\":\"erc721or1155\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"supportRFCs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"proposalTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/NFTFactory.sol\":\"NFTFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xdfe5444167c3b8cb94bb80044f56148151466d62a86b950c4b57c1ab8bdced7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efaa8a617e23d384c15daffb09628f00917fc73337547f52d283762569fe5343\",\"dweb:/ipfs/QmUVHQ14aaH6mC6LWScWBdxHvfkTP5DGWLXx4XDJHYetpi\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb1503d6ad7d4251970bfc4fa2d7e6fa2c7716010a0b3d642bdc078cdbef5ecc0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7bb2126344847c1a88e43134ecab8415c70c01ed8d06ada5e43a091e1231cf6\",\"dweb:/ipfs/QmQbD4DEpHGj9A5PnKVWrwUuqRRjjPhpu9LPapUkbeNsBN\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0xb0fba7a209e01ef5a75bd082cd31b46b417f8572ca87a08475aa60afa01b4801\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0a910d68dd14557711790a02ce9e94076a7b5b1466f7da0355b64086478ec0d\",\"dweb:/ipfs/QmZBUGXVV9yJsm631mBPxGtioMULKPqJs2ATxtLjyCb2TW\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0xc28ec209735cd77cebec87be0ec4586d4cba9002011adf4346e374e60c367756\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91bcf52c4053307bbdbfe3661e6d5996afcb3d1b957c18818748a1217c617142\",\"dweb:/ipfs/QmZtkpAgqyyU6z3StfrTuw6cp2jVGzrz5xtu1KeUGdTrsh\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x6287586f5e4a103c89d4dda41406136cdf283cc625bd1ebfdf1468aae5bfe449\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30e2e913292e86a9bce50d51882b23ef57ae4c811003ec96cf39b1781f68b202\",\"dweb:/ipfs/QmUXqjyiAHbEMJ4zLfaduWYuVwp1HozqVhtChe9VfdpjoV\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x611d1f2720036646366a613a7b6bb85d1527ed3b4fb5ba2db8cfc34f80a37be6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b9c54150af342b701d4e9b4521c13c6b41c32302ebeab698f5c085e35c2db56\",\"dweb:/ipfs/QmV9p2YjqP3fWtCbA6nr8XDo81ChrbRDcv1G8uN8zmpD7L\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf308459c5ea0cde035b8c3b3d9144086a2c777c46dbe401f634e75dea1aba1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51755c6934703b61e7edb7d3edef985f429be6bef384b15e1b616ea65176934\",\"dweb:/ipfs/QmQVb4hBJcTMthp5hJquUy5tPsDwgiKQ8nGExckR75G88u\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x8cd74cdb9a9b704bfd99b4c677f49a170f1b16235f59b4ede98db93ff92f702a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45034f0946fc9e00ed75d323f314563e37799631547e0fa32590fe6ff8c1259\",\"dweb:/ipfs/QmQQ1R3oundXLUczq5AvkYt4Ehc6KvSEZuubE9mx8AHLiK\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xed12e1c10c09054954b16a1b1f4250c4bbc0c7140d720777626fb5886a1a0e25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de44624131ca75031b9d8751c42138d5792acb956604dd776c1c7cf1fbd86d26\",\"dweb:/ipfs/QmaUiV9pMt4AeAMxdMnDCsQSwFXLmTAvrQwWBb1bwZBhTu\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x8c5737e80521ac5e76c0d9d2cdb67647906fdadeb296644910eeecb31042e1da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://029725970d69465cca169353fa146f716e557bd974a0e2356b7791095469788c\",\"dweb:/ipfs/QmQjDRaegdUPcwyyzygnBGm68cdLBQ5BHxHqPi8bGW74GX\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0x650712f855228b7cdeb90738d99dd33ff3a7c9770914ff03eb93f90218fe164b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d61d29cfb52a862da981f6688772dd009132757bcb85e4be8be506db1ed71f9\",\"dweb:/ipfs/QmWWHRKr5aTxyU4TRehnU6toBctgi217toZdth6JqYrh5y\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf920acc579a6c2067ca587b8d3993f6e737ac54f2dc3c4cd179d8df0e3f351d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://900486cb37c3b173462e4d5929a7df08ef91d9ee544176cfa25189f3b556641e\",\"dweb:/ipfs/QmTMbsipusiSnqiUj9wnPjwdzUALoKhmVGRhhcYn36jGJg\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x872ba21af7c1f0ae04a715beca31e8fcac764d6c8762940b0fe1bfb6ed8e86f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://497017741d74878b56a67ad51e98061bd9ec0e6e4fdbfef0e2ab51523f4c16de\",\"dweb:/ipfs/QmWfkpRHksy8jFywqYxdmMqdkQ1hxrGTPoNBXbZ48zTvyv\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x6aa521718bf139b44ce56f194f6aea1d590cacef995b5a84703fb1579fa49be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100f8d367b5e94eb9cb991914f1de133cf272654c0708faa893bbc17a5b35b93\",\"dweb:/ipfs/QmZeBojmgXq821dL1TJKFb58B1FogM9jL3u7hXQ8hTEBKT\"]},\"project:/contracts/MelandAccessRoles.sol\":{\"keccak256\":\"0x1b9b8ee69dd6b69feb9c4e2d5738e067c622fd6039e1cc08d3f0cabe2faff856\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cb15cddad691a487af2d8e7eebc03011baa76e7a1e0ebef7a9519976be94cf5\",\"dweb:/ipfs/QmWS2xAVUnS8igFTcXYyLv6NKEVeP7saF6ze6FXgCxnoPj\"]},\"project:/contracts/NFTFactory.sol\":{\"keccak256\":\"0x6634501ccf9ff06d25f7bbd417efbfefa1fc09ed9d4bf993c645a14abe575969\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c2f142a3f4b69792f7da83a9848e7e97a408d9e9212bb0a67e1723f38895a89\",\"dweb:/ipfs/Qma2rWXYrz3byUSscTL1uVGnwBt6YSJ8Xqn9EDoQt2HYbw\"]}},\"version\":1}",
  "bytecode": "0x60a06040523060805234801561001457600080fd5b50600054610100900460ff168061002e575060005460ff16155b6100955760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff161580156100b7576000805461ffff19166101011790555b80156100c9576000805461ff00191690555b50608051611a236100fa60003960008181610525015281816105650152818161077401526107b40152611a236000f3fe6080604052600436106101095760003560e01c80637176360e11610095578063c92115e411610064578063c92115e4146102d4578063d539139314610344578063d547741f14610378578063dca2cec914610398578063f72c0d8b1461040157600080fd5b80637176360e1461026a5780638129fc1c1461028a57806391d148541461029f578063a217fddf146102bf57600080fd5b806336568abe116100dc57806336568abe146101d75780633659cfe6146101f75780633e350061146102175780634f1ef2861461023757806353366cd61461024a57600080fd5b806301ffc9a71461010e578063248a9ca3146101435780632f2ff15d1461018157806330c7be2c146101a3575b600080fd5b34801561011a57600080fd5b5061012e610129366004611561565b610435565b60405190151581526020015b60405180910390f35b34801561014f57600080fd5b5061017361015e36600461158b565b60009081526065602052604090206001015490565b60405190815260200161013a565b34801561018d57600080fd5b506101a161019c3660046115c0565b61046c565b005b3480156101af57600080fd5b506101737ff5eb84615c2a00ecaf817d13794ebd6299c9e01c395bf4018453f13f577f544981565b3480156101e357600080fd5b506101a16101f23660046115c0565b610497565b34801561020357600080fd5b506101a16102123660046115ec565b61051a565b34801561022357600080fd5b506101a16102323660046115ec565b6105e3565b6101a161024536600461161d565b610769565b34801561025657600080fd5b506101a16102653660046115ec565b61081f565b34801561027657600080fd5b506101a16102853660046115ec565b610853565b34801561029657600080fd5b506101a161099a565b3480156102ab57600080fd5b5061012e6102ba3660046115c0565b610a15565b3480156102cb57600080fd5b50610173600081565b3480156102e057600080fd5b5061031d6102ef3660046115ec565b60fc602052600090815260409020805460018201546002909201546001600160a01b03909116919060ff1683565b604080516001600160a01b039094168452602084019290925215159082015260600161013a565b34801561035057600080fd5b506101737f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b34801561038457600080fd5b506101a16103933660046115c0565b610a40565b3480156103a457600080fd5b506103f36103b33660046115ec565b60fb60209081526000918252604091829020825180840190935280546001600160a01b039081168452600182015416918301919091526002015460ff1682565b60405161013a9291906116df565b34801561040d57600080fd5b506101737f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b60006001600160e01b03198216637965db0b60e01b148061046657506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000828152606560205260409020600101546104888133610a66565b6104928383610aca565b505050565b6001600160a01b038116331461050c5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6105168282610b50565b5050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156105635760405162461bcd60e51b815260040161050390611712565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610595610bb7565b6001600160a01b0316146105bb5760405162461bcd60e51b81526004016105039061175e565b6105c481610be5565b604080516000808252602082019092526105e091839190610c10565b50565b6001600160a01b038116600090815260fc6020526040902060010154156106415760405162461bcd60e51b8152602060048201526012602482015271416c7265616479206578697374732052464360701b6044820152606401610503565b6001600160a01b038116600090815260fb602052604090206002015460ff161561069f5760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e481cdd5c1c1bdc9d608a1b6044820152606401610503565b600060405180606001604052806106b33390565b6001600160a01b039081168252426020808401919091526000604093840181905286831680825260fc835290849020855181546001600160a01b031916941693841781558583018051600183015586860180516002909301805460ff191693151593909317909255855194855251928401929092529051151592820192909252919250907f7bf7a9f4f3afec6b1e29122e20f0cf352b7b922f5e27cfbd6d9e53b23e361ddc906060015b60405180910390a25050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156107b25760405162461bcd60e51b815260040161050390611712565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166107e4610bb7565b6001600160a01b03161461080a5760405162461bcd60e51b81526004016105039061175e565b61081382610be5565b61051682826001610c10565b7ff5eb84615c2a00ecaf817d13794ebd6299c9e01c395bf4018453f13f577f544961084a8133610a66565b61051682610d5b565b6001600160a01b03808216600090815260fc602090815260409182902082516060810184528154909416845260018101549184018290526002015460ff161515918301919091526108d65760405162461bcd60e51b815260206004820152600d60248201526c4e6f7420666f756e642052464360981b6044820152606401610503565b600160408281018281526001600160a01b03858116600090815260fc6020908152939020855181546001600160a01b0319169216919091178155918401519282019290925590516002909101805460ff191691151591909117905561093a82610d5b565b816001600160a01b03167f2c463d1afc34a83acf61a30edb12a91f5f74da98d2db86108e17e4fdb4a229918260405161075d919081516001600160a01b031681526020808301519082015260409182015115159181019190915260600190565b600054610100900460ff16806109b3575060005460ff16155b6109cf5760405162461bcd60e51b8152600401610503906117aa565b600054610100900460ff161580156109f1576000805461ffff19166101011790555b6109f9610ff2565b610a01611059565b80156105e0576000805461ff001916905550565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600082815260656020526040902060010154610a5c8133610a66565b6104928383610b50565b610a708282610a15565b61051657610a88816001600160a01b031660146110ec565b610a938360206110ec565b604051602001610aa4929190611828565b60408051601f198184030181529082905262461bcd60e51b82526105039160040161189d565b610ad48282610a15565b6105165760008281526065602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610b0c3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610b5a8282610a15565b156105165760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e36105168133610a66565b6000610c1a610bb7565b9050610c258461128f565b600083511180610c325750815b15610c4357610c418484611334565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff16610d5457805460ff191660011781556040516001600160a01b0383166024820152610cc290869060440160408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b179052611334565b50805460ff19168155610cd3610bb7565b6001600160a01b0316826001600160a01b031614610d4b5760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b6064820152608401610503565b610d548561141f565b5050505050565b6001600160a01b038116600090815260fb602052604090206002015460ff1615610dbb5760405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e481cdd5c1c1bdc9d1959607a1b6044820152606401610503565b6040805180820182526000808252602082015290516301ffc9a760e01b8152636cdb3d1360e11b60048201819052916380ac58cd60e01b916001600160a01b038516906301ffc9a79060240160206040518083038186803b158015610e1f57600080fd5b505afa158015610e33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5791906118d0565b15610e6d576001600160a01b0384168152610f42565b6040516301ffc9a760e01b81526001600160e01b0319831660048201526001600160a01b038516906301ffc9a79060240160206040518083038186803b158015610eb657600080fd5b505afa158015610eca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eee91906118d0565b15610f07576001600160a01b0384166020820152610f42565b60405162461bcd60e51b815260206004820152601060248201526f4e6f7420737570706f7274207479706560801b6044820152606401610503565b604080518082018252828152600160208083018281526001600160a01b03898116600090815260fb84528690209451805186546001600160a01b031990811691841691909117875593015193850180549093169316929092179055516002909101805460ff1916911515919091179055517faf2ff40032acd71a6f0afb63241f5d534a66e2b815e6b2900b2d75fdd5ee982c90610fe4908390339042906118f2565b60405180910390a150505050565b600054610100900460ff168061100b575060005460ff16155b6110275760405162461bcd60e51b8152600401610503906117aa565b600054610100900460ff16158015611049576000805461ffff19166101011790555b61105161145f565b610a0161145f565b6110616114c9565b61106c600033610aca565b6110967ff5eb84615c2a00ecaf817d13794ebd6299c9e01c395bf4018453f13f577f544933610aca565b6110c07f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610aca565b6110ea7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e333610aca565b565b606060006110fb836002611946565b611106906002611965565b67ffffffffffffffff81111561111e5761111e611607565b6040519080825280601f01601f191660200182016040528015611148576020820181803683370190505b509050600360fc1b816000815181106111635761116361197d565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106111925761119261197d565b60200101906001600160f81b031916908160001a90535060006111b6846002611946565b6111c1906001611965565b90505b6001811115611239576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106111f5576111f561197d565b1a60f81b82828151811061120b5761120b61197d565b60200101906001600160f81b031916908160001a90535060049490941c9361123281611993565b90506111c4565b5083156112885760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610503565b9392505050565b803b6112f35760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610503565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6060823b6113935760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610503565b600080846001600160a01b0316846040516113ae91906119aa565b600060405180830381855af49150503d80600081146113e9576040519150601f19603f3d011682016040523d82523d6000602084013e6113ee565b606091505b509150915061141682826040518060600160405280602781526020016119c760279139611528565b95945050505050565b6114288161128f565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b600054610100900460ff1680611478575060005460ff16155b6114945760405162461bcd60e51b8152600401610503906117aa565b600054610100900460ff16158015610a01576000805461ffff191661010117905580156105e0576000805461ff001916905550565b600054610100900460ff16806114e2575060005460ff16155b6114fe5760405162461bcd60e51b8152600401610503906117aa565b600054610100900460ff16158015611520576000805461ffff19166101011790555b61104961145f565b60608315611537575081611288565b8251156115475782518084602001fd5b8160405162461bcd60e51b8152600401610503919061189d565b60006020828403121561157357600080fd5b81356001600160e01b03198116811461128857600080fd5b60006020828403121561159d57600080fd5b5035919050565b80356001600160a01b03811681146115bb57600080fd5b919050565b600080604083850312156115d357600080fd5b823591506115e3602084016115a4565b90509250929050565b6000602082840312156115fe57600080fd5b611288826115a4565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561163057600080fd5b611639836115a4565b9150602083013567ffffffffffffffff8082111561165657600080fd5b818501915085601f83011261166a57600080fd5b81358181111561167c5761167c611607565b604051601f8201601f19908116603f011681019083821181831017156116a4576116a4611607565b816040528281528860208487010111156116bd57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60608101611703828580516001600160a01b03908116835260209182015116910152565b82151560408301529392505050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60005b838110156118135781810151838201526020016117fb565b83811115611822576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516118608160178501602088016117f8565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516118918160288401602088016117f8565b01602801949350505050565b60208152600082518060208401526118bc8160408501602087016117f8565b601f01601f19169190910160400192915050565b6000602082840312156118e257600080fd5b8151801515811461128857600080fd5b60808101611916828680516001600160a01b03908116835260209182015116910152565b6001600160a01b0393909316604082015260600152919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561196057611960611930565b500290565b6000821982111561197857611978611930565b500190565b634e487b7160e01b600052603260045260246000fd5b6000816119a2576119a2611930565b506000190190565b600082516119bc8184602087016117f8565b919091019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122044099f1da500cda023bf9ed26ece78f72e9200f0768714a0221c728d38e111b764736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106101095760003560e01c80637176360e11610095578063c92115e411610064578063c92115e4146102d4578063d539139314610344578063d547741f14610378578063dca2cec914610398578063f72c0d8b1461040157600080fd5b80637176360e1461026a5780638129fc1c1461028a57806391d148541461029f578063a217fddf146102bf57600080fd5b806336568abe116100dc57806336568abe146101d75780633659cfe6146101f75780633e350061146102175780634f1ef2861461023757806353366cd61461024a57600080fd5b806301ffc9a71461010e578063248a9ca3146101435780632f2ff15d1461018157806330c7be2c146101a3575b600080fd5b34801561011a57600080fd5b5061012e610129366004611561565b610435565b60405190151581526020015b60405180910390f35b34801561014f57600080fd5b5061017361015e36600461158b565b60009081526065602052604090206001015490565b60405190815260200161013a565b34801561018d57600080fd5b506101a161019c3660046115c0565b61046c565b005b3480156101af57600080fd5b506101737ff5eb84615c2a00ecaf817d13794ebd6299c9e01c395bf4018453f13f577f544981565b3480156101e357600080fd5b506101a16101f23660046115c0565b610497565b34801561020357600080fd5b506101a16102123660046115ec565b61051a565b34801561022357600080fd5b506101a16102323660046115ec565b6105e3565b6101a161024536600461161d565b610769565b34801561025657600080fd5b506101a16102653660046115ec565b61081f565b34801561027657600080fd5b506101a16102853660046115ec565b610853565b34801561029657600080fd5b506101a161099a565b3480156102ab57600080fd5b5061012e6102ba3660046115c0565b610a15565b3480156102cb57600080fd5b50610173600081565b3480156102e057600080fd5b5061031d6102ef3660046115ec565b60fc602052600090815260409020805460018201546002909201546001600160a01b03909116919060ff1683565b604080516001600160a01b039094168452602084019290925215159082015260600161013a565b34801561035057600080fd5b506101737f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b34801561038457600080fd5b506101a16103933660046115c0565b610a40565b3480156103a457600080fd5b506103f36103b33660046115ec565b60fb60209081526000918252604091829020825180840190935280546001600160a01b039081168452600182015416918301919091526002015460ff1682565b60405161013a9291906116df565b34801561040d57600080fd5b506101737f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b60006001600160e01b03198216637965db0b60e01b148061046657506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000828152606560205260409020600101546104888133610a66565b6104928383610aca565b505050565b6001600160a01b038116331461050c5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6105168282610b50565b5050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156105635760405162461bcd60e51b815260040161050390611712565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610595610bb7565b6001600160a01b0316146105bb5760405162461bcd60e51b81526004016105039061175e565b6105c481610be5565b604080516000808252602082019092526105e091839190610c10565b50565b6001600160a01b038116600090815260fc6020526040902060010154156106415760405162461bcd60e51b8152602060048201526012602482015271416c7265616479206578697374732052464360701b6044820152606401610503565b6001600160a01b038116600090815260fb602052604090206002015460ff161561069f5760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e481cdd5c1c1bdc9d608a1b6044820152606401610503565b600060405180606001604052806106b33390565b6001600160a01b039081168252426020808401919091526000604093840181905286831680825260fc835290849020855181546001600160a01b031916941693841781558583018051600183015586860180516002909301805460ff191693151593909317909255855194855251928401929092529051151592820192909252919250907f7bf7a9f4f3afec6b1e29122e20f0cf352b7b922f5e27cfbd6d9e53b23e361ddc906060015b60405180910390a25050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156107b25760405162461bcd60e51b815260040161050390611712565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166107e4610bb7565b6001600160a01b03161461080a5760405162461bcd60e51b81526004016105039061175e565b61081382610be5565b61051682826001610c10565b7ff5eb84615c2a00ecaf817d13794ebd6299c9e01c395bf4018453f13f577f544961084a8133610a66565b61051682610d5b565b6001600160a01b03808216600090815260fc602090815260409182902082516060810184528154909416845260018101549184018290526002015460ff161515918301919091526108d65760405162461bcd60e51b815260206004820152600d60248201526c4e6f7420666f756e642052464360981b6044820152606401610503565b600160408281018281526001600160a01b03858116600090815260fc6020908152939020855181546001600160a01b0319169216919091178155918401519282019290925590516002909101805460ff191691151591909117905561093a82610d5b565b816001600160a01b03167f2c463d1afc34a83acf61a30edb12a91f5f74da98d2db86108e17e4fdb4a229918260405161075d919081516001600160a01b031681526020808301519082015260409182015115159181019190915260600190565b600054610100900460ff16806109b3575060005460ff16155b6109cf5760405162461bcd60e51b8152600401610503906117aa565b600054610100900460ff161580156109f1576000805461ffff19166101011790555b6109f9610ff2565b610a01611059565b80156105e0576000805461ff001916905550565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600082815260656020526040902060010154610a5c8133610a66565b6104928383610b50565b610a708282610a15565b61051657610a88816001600160a01b031660146110ec565b610a938360206110ec565b604051602001610aa4929190611828565b60408051601f198184030181529082905262461bcd60e51b82526105039160040161189d565b610ad48282610a15565b6105165760008281526065602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610b0c3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610b5a8282610a15565b156105165760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e36105168133610a66565b6000610c1a610bb7565b9050610c258461128f565b600083511180610c325750815b15610c4357610c418484611334565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff16610d5457805460ff191660011781556040516001600160a01b0383166024820152610cc290869060440160408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b179052611334565b50805460ff19168155610cd3610bb7565b6001600160a01b0316826001600160a01b031614610d4b5760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b6064820152608401610503565b610d548561141f565b5050505050565b6001600160a01b038116600090815260fb602052604090206002015460ff1615610dbb5760405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e481cdd5c1c1bdc9d1959607a1b6044820152606401610503565b6040805180820182526000808252602082015290516301ffc9a760e01b8152636cdb3d1360e11b60048201819052916380ac58cd60e01b916001600160a01b038516906301ffc9a79060240160206040518083038186803b158015610e1f57600080fd5b505afa158015610e33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5791906118d0565b15610e6d576001600160a01b0384168152610f42565b6040516301ffc9a760e01b81526001600160e01b0319831660048201526001600160a01b038516906301ffc9a79060240160206040518083038186803b158015610eb657600080fd5b505afa158015610eca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eee91906118d0565b15610f07576001600160a01b0384166020820152610f42565b60405162461bcd60e51b815260206004820152601060248201526f4e6f7420737570706f7274207479706560801b6044820152606401610503565b604080518082018252828152600160208083018281526001600160a01b03898116600090815260fb84528690209451805186546001600160a01b031990811691841691909117875593015193850180549093169316929092179055516002909101805460ff1916911515919091179055517faf2ff40032acd71a6f0afb63241f5d534a66e2b815e6b2900b2d75fdd5ee982c90610fe4908390339042906118f2565b60405180910390a150505050565b600054610100900460ff168061100b575060005460ff16155b6110275760405162461bcd60e51b8152600401610503906117aa565b600054610100900460ff16158015611049576000805461ffff19166101011790555b61105161145f565b610a0161145f565b6110616114c9565b61106c600033610aca565b6110967ff5eb84615c2a00ecaf817d13794ebd6299c9e01c395bf4018453f13f577f544933610aca565b6110c07f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610aca565b6110ea7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e333610aca565b565b606060006110fb836002611946565b611106906002611965565b67ffffffffffffffff81111561111e5761111e611607565b6040519080825280601f01601f191660200182016040528015611148576020820181803683370190505b509050600360fc1b816000815181106111635761116361197d565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106111925761119261197d565b60200101906001600160f81b031916908160001a90535060006111b6846002611946565b6111c1906001611965565b90505b6001811115611239576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106111f5576111f561197d565b1a60f81b82828151811061120b5761120b61197d565b60200101906001600160f81b031916908160001a90535060049490941c9361123281611993565b90506111c4565b5083156112885760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610503565b9392505050565b803b6112f35760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610503565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6060823b6113935760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610503565b600080846001600160a01b0316846040516113ae91906119aa565b600060405180830381855af49150503d80600081146113e9576040519150601f19603f3d011682016040523d82523d6000602084013e6113ee565b606091505b509150915061141682826040518060600160405280602781526020016119c760279139611528565b95945050505050565b6114288161128f565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b600054610100900460ff1680611478575060005460ff16155b6114945760405162461bcd60e51b8152600401610503906117aa565b600054610100900460ff16158015610a01576000805461ffff191661010117905580156105e0576000805461ff001916905550565b600054610100900460ff16806114e2575060005460ff16155b6114fe5760405162461bcd60e51b8152600401610503906117aa565b600054610100900460ff16158015611520576000805461ffff19166101011790555b61104961145f565b60608315611537575081611288565b8251156115475782518084602001fd5b8160405162461bcd60e51b8152600401610503919061189d565b60006020828403121561157357600080fd5b81356001600160e01b03198116811461128857600080fd5b60006020828403121561159d57600080fd5b5035919050565b80356001600160a01b03811681146115bb57600080fd5b919050565b600080604083850312156115d357600080fd5b823591506115e3602084016115a4565b90509250929050565b6000602082840312156115fe57600080fd5b611288826115a4565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561163057600080fd5b611639836115a4565b9150602083013567ffffffffffffffff8082111561165657600080fd5b818501915085601f83011261166a57600080fd5b81358181111561167c5761167c611607565b604051601f8201601f19908116603f011681019083821181831017156116a4576116a4611607565b816040528281528860208487010111156116bd57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60608101611703828580516001600160a01b03908116835260209182015116910152565b82151560408301529392505050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60005b838110156118135781810151838201526020016117fb565b83811115611822576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516118608160178501602088016117f8565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516118918160288401602088016117f8565b01602801949350505050565b60208152600082518060208401526118bc8160408501602087016117f8565b601f01601f19169190910160400192915050565b6000602082840312156118e257600080fd5b8151801515811461128857600080fd5b60808101611916828680516001600160a01b03908116835260209182015116910152565b6001600160a01b0393909316604082015260600152919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561196057611960611930565b500290565b6000821982111561197857611978611930565b500190565b634e487b7160e01b600052603260045260246000fd5b6000816119a2576119a2611930565b506000190190565b600082516119bc8184602087016117f8565b919091019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122044099f1da500cda023bf9ed26ece78f72e9200f0768714a0221c728d38e111b764736f6c63430008090033",
  "immutableReferences": {
    "897": [
      {
        "length": 32,
        "start": 1317
      },
      {
        "length": 32,
        "start": 1381
      },
      {
        "length": 32,
        "start": 1908
      },
      {
        "length": 32,
        "start": 1972
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:426:46",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:46",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "188:236:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "205:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "216:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "198:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "198:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "198:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "239:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "250:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "255:2:46",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "228:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "228:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "228:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "278:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "289:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "274:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "274:18:46"
                      },
                      {
                        "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "294:34:46",
                        "type": "",
                        "value": "Initializable: contract is alrea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "267:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "267:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "267:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "349:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "360:2:46",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "345:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "345:18:46"
                      },
                      {
                        "hexValue": "647920696e697469616c697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "365:16:46",
                        "type": "",
                        "value": "dy initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "338:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "338:44:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "338:44:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "391:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "403:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "414:3:46",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "399:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "399:19:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "391:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "165:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "179:4:46",
                "type": ""
              }
            ],
            "src": "14:410:46"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 46,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:12484:46",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:46",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "83:217:46",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "129:16:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "138:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "141:1:46",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "131:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "131:12:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "131:12:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "104:7:46"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "113:9:46"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "100:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "100:23:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "125:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "96:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:32:46"
                  },
                  "nodeType": "YulIf",
                  "src": "93:52:46"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "154:36:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "180:9:46"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "167:12:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "167:23:46"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "158:5:46",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:46",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "212:5:46"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "223:5:46"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "234:3:46",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "239:10:46",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "230:3:46"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "230:20:46"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "219:3:46"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "219:32:46"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "209:2:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "209:43:46"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "202:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "202:51:46"
                  },
                  "nodeType": "YulIf",
                  "src": "199:71:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:46",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:46"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "49:9:46",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "60:7:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "72:6:46",
                "type": ""
              }
            ],
            "src": "14:286:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "400:92:46",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "410:26:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "422:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "433:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "418:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "418:18:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "410:4:46"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "452:9:46"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "477:6:46"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "470:6:46"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "470:14:46"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "463:6:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "463:22:46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "445:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "445:41:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "445:41:46"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "369:9:46",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "380:6:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "391:4:46",
                "type": ""
              }
            ],
            "src": "305:187:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "567:110:46",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "613:16:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "622:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "625:1:46",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "615:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "615:12:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "615:12:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "588:7:46"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "597:9:46"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "584:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "584:23:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "609:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "580:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "580:32:46"
                  },
                  "nodeType": "YulIf",
                  "src": "577:52:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "638:33:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "661:9:46"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "648:12:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "648:23:46"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "638:6:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "533:9:46",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "544:7:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "556:6:46",
                "type": ""
              }
            ],
            "src": "497:180:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "783:76:46",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "793:26:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "805:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "816:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "801:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "801:18:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "793:4:46"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "835:9:46"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "846:6:46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "828:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "828:25:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "828:25:46"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "752:9:46",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "763:6:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "774:4:46",
                "type": ""
              }
            ],
            "src": "682:177:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "913:124:46",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "923:29:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "945:6:46"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "932:12:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "932:20:46"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "923:5:46"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1015:16:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1024:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1027:1:46",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1017:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1017:12:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1017:12:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "974:5:46"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "985:5:46"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1000:3:46",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1005:1:46",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "996:3:46"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "996:11:46"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1009:1:46",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "992:3:46"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "992:19:46"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "981:3:46"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "981:31:46"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "971:2:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "971:42:46"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "964:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "964:50:46"
                  },
                  "nodeType": "YulIf",
                  "src": "961:70:46"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "892:6:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "903:5:46",
                "type": ""
              }
            ],
            "src": "864:173:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1129:167:46",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1175:16:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1184:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1187:1:46",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1177:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1177:12:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1177:12:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1150:7:46"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1159:9:46"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1146:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1146:23:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1171:2:46",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1142:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1142:32:46"
                  },
                  "nodeType": "YulIf",
                  "src": "1139:52:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1200:33:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1223:9:46"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1210:12:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1210:23:46"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1200:6:46"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1242:48:46",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1275:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1286:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1271:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1271:18:46"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1252:18:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1252:38:46"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1242:6:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1087:9:46",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1098:7:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1110:6:46",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1118:6:46",
                "type": ""
              }
            ],
            "src": "1042:254:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1371:116:46",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1417:16:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1426:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1429:1:46",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1419:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1419:12:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1419:12:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1392:7:46"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1401:9:46"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1388:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1388:23:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1413:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1384:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1384:32:46"
                  },
                  "nodeType": "YulIf",
                  "src": "1381:52:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1442:39:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1471:9:46"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1452:18:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1452:29:46"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1442:6:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1337:9:46",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1348:7:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1360:6:46",
                "type": ""
              }
            ],
            "src": "1301:186:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1524:95:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1541:1:46",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1548:3:46",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1553:10:46",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1544:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1544:20:46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1534:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1534:31:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1534:31:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1581:1:46",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1584:4:46",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1574:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1574:15:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1574:15:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1605:1:46",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1608:4:46",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1598:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1598:15:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1598:15:46"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "1492:127:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1720:899:46",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1766:16:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1775:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1778:1:46",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1768:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1768:12:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1768:12:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1741:7:46"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1750:9:46"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1737:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1737:23:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1762:2:46",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1733:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1733:32:46"
                  },
                  "nodeType": "YulIf",
                  "src": "1730:52:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1791:39:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1820:9:46"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1801:18:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1801:29:46"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1791:6:46"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1839:46:46",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1870:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1881:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1866:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1866:18:46"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1853:12:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1853:32:46"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1843:6:46",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1894:28:46",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1904:18:46",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1898:2:46",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1949:16:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1958:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1961:1:46",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1951:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1951:12:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1951:12:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1937:6:46"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1945:2:46"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1934:2:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1934:14:46"
                  },
                  "nodeType": "YulIf",
                  "src": "1931:34:46"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1974:32:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1988:9:46"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1999:6:46"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1984:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1984:22:46"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1978:2:46",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2054:16:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2063:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2066:1:46",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2056:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2056:12:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2056:12:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2033:2:46"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2037:4:46",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2029:3:46"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2029:13:46"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2044:7:46"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2025:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2025:27:46"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2018:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2018:35:46"
                  },
                  "nodeType": "YulIf",
                  "src": "2015:55:46"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2079:26:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2102:2:46"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2089:12:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2089:16:46"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "2083:2:46",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2128:22:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2130:16:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2130:18:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2130:18:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "2120:2:46"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2124:2:46"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2117:2:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2117:10:46"
                  },
                  "nodeType": "YulIf",
                  "src": "2114:36:46"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2159:17:46",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2173:2:46",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "2169:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2169:7:46"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "2163:2:46",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2185:23:46",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2205:2:46",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2199:5:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2199:9:46"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "2189:6:46",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2217:71:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2239:6:46"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "2263:2:46"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2267:4:46",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2259:3:46"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2259:13:46"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "2274:2:46"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2255:3:46"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2255:22:46"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2279:2:46",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2251:3:46"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2251:31:46"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "2284:2:46"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2247:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2247:40:46"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2235:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2235:53:46"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "2221:10:46",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2347:22:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2349:16:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2349:18:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2349:18:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2306:10:46"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2318:2:46"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2303:2:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2303:18:46"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2326:10:46"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2338:6:46"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2323:2:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2323:22:46"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2300:2:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2300:46:46"
                  },
                  "nodeType": "YulIf",
                  "src": "2297:72:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2385:2:46",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "2389:10:46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2378:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2378:22:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2378:22:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2416:6:46"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "2424:2:46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2409:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2409:18:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2409:18:46"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2473:16:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2482:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2485:1:46",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2475:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2475:12:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2475:12:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2450:2:46"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "2454:2:46"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2446:3:46"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2446:11:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2459:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2442:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2442:20:46"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2464:7:46"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2439:2:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2439:33:46"
                  },
                  "nodeType": "YulIf",
                  "src": "2436:53:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2515:6:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2523:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2511:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2511:15:46"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2532:2:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2536:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2528:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2528:11:46"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "2541:2:46"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "2498:12:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2498:46:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2498:46:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "2568:6:46"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "2576:2:46"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2564:3:46"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2564:15:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2581:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2560:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2560:24:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2586:1:46",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2553:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2553:35:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2553:35:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2597:16:46",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "2607:6:46"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2597:6:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1678:9:46",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1689:7:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1701:6:46",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1709:6:46",
                "type": ""
              }
            ],
            "src": "1624:995:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2775:204:46",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2785:26:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2797:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2808:2:46",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2793:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2793:18:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2785:4:46"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2827:9:46"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2842:6:46"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2858:3:46",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2863:1:46",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2854:3:46"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2854:11:46"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2867:1:46",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2850:3:46"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2850:19:46"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2838:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2838:32:46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2820:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2820:51:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2820:51:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2891:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2902:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2887:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2887:18:46"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2907:6:46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2880:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2880:34:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2880:34:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2934:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2945:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2930:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2930:18:46"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "2964:6:46"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2957:6:46"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2957:14:46"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2950:6:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2950:22:46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2923:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2923:50:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2923:50:46"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2728:9:46",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2739:6:46",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2747:6:46",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2755:6:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2766:4:46",
                "type": ""
              }
            ],
            "src": "2624:355:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3040:153:46",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3050:29:46",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3068:3:46",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3073:1:46",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3064:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3064:11:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3077:1:46",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3060:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3060:19:46"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3054:2:46",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3095:3:46"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3110:5:46"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "3104:5:46"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3104:12:46"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3118:2:46"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3100:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3100:21:46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3088:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3088:34:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3088:34:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3142:3:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3147:4:46",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3138:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3138:14:46"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3168:5:46"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3175:4:46",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3164:3:46"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3164:16:46"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "3158:5:46"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3158:23:46"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3183:2:46"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3154:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3154:32:46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3131:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3131:56:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3131:56:46"
                }
              ]
            },
            "name": "abi_encode_struct_ERC721Or1155",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3024:5:46",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3031:3:46",
                "type": ""
              }
            ],
            "src": "2984:209:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3381:159:46",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3391:26:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3403:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3414:2:46",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3399:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3399:18:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3391:4:46"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3457:6:46"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3465:9:46"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_ERC721Or1155",
                      "nodeType": "YulIdentifier",
                      "src": "3426:30:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3426:49:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3426:49:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3495:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3506:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3491:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3491:18:46"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "3525:6:46"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3518:6:46"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3518:14:46"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3511:6:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3511:22:46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3484:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3484:50:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3484:50:46"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_ERC721Or1155_$8219_memory_ptr_t_bool__to_t_struct$_ERC721Or1155_$8219_memory_ptr_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3342:9:46",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3353:6:46",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3361:6:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3372:4:46",
                "type": ""
              }
            ],
            "src": "3198:342:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3719:237:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3736:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3747:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3729:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3729:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3729:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3770:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3781:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3766:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3766:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3786:2:46",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3759:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3759:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3759:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3809:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3820:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3805:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3805:18:46"
                      },
                      {
                        "hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3825:34:46",
                        "type": "",
                        "value": "AccessControl: can only renounce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3798:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3798:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3798:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3880:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3891:2:46",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3876:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3876:18:46"
                      },
                      {
                        "hexValue": "20726f6c657320666f722073656c66",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3896:17:46",
                        "type": "",
                        "value": " roles for self"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3869:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3869:45:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3869:45:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3923:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3935:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3946:3:46",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3931:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3931:19:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3923:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3696:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3710:4:46",
                "type": ""
              }
            ],
            "src": "3545:411:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4135:234:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4152:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4163:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4145:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4145:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4145:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4186:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4197:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4182:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4182:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4202:2:46",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4175:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4175:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4175:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4225:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4236:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4221:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4221:18:46"
                      },
                      {
                        "hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4241:34:46",
                        "type": "",
                        "value": "Function must be called through "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4214:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4214:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4214:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4296:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4307:2:46",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4292:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4292:18:46"
                      },
                      {
                        "hexValue": "64656c656761746563616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4312:14:46",
                        "type": "",
                        "value": "delegatecall"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4285:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4285:42:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4285:42:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4336:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4348:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4359:3:46",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4344:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4344:19:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4336:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4112:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4126:4:46",
                "type": ""
              }
            ],
            "src": "3961:408:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4548:234:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4565:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4576:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4558:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4558:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4558:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4599:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4610:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4595:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4595:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4615:2:46",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4588:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4588:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4588:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4638:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4649:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4634:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4634:18:46"
                      },
                      {
                        "hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4654:34:46",
                        "type": "",
                        "value": "Function must be called through "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4627:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4627:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4627:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4709:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4720:2:46",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4705:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4705:18:46"
                      },
                      {
                        "hexValue": "6163746976652070726f7879",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4725:14:46",
                        "type": "",
                        "value": "active proxy"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4698:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4698:42:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4698:42:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4749:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4761:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4772:3:46",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4757:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4757:19:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4749:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4525:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4539:4:46",
                "type": ""
              }
            ],
            "src": "4374:408:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4961:168:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4978:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4989:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4971:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4971:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4971:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5012:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5023:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5008:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5008:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5028:2:46",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5001:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5001:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5001:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5051:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5062:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5047:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5047:18:46"
                      },
                      {
                        "hexValue": "416c72656164792065786973747320524643",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5067:20:46",
                        "type": "",
                        "value": "Already exists RFC"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5040:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5040:48:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5040:48:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5097:26:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5109:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5120:2:46",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5105:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5105:18:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5097:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bffe4469dca8adabf852f8a5a9facae8a5395f7cb26ea5e49cba2209ade18e17__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4938:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4952:4:46",
                "type": ""
              }
            ],
            "src": "4787:342:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5308:165:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5325:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5336:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5318:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5318:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5318:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5359:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5370:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5355:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5355:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5375:2:46",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5348:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5348:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5348:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5398:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5409:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5394:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5394:18:46"
                      },
                      {
                        "hexValue": "416c726561647920737570706f7274",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5414:17:46",
                        "type": "",
                        "value": "Already support"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5387:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5387:45:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5387:45:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5441:26:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5453:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5464:2:46",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5449:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5449:18:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5441:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_acfa77d3289979f16039d26c122bf0deb5df813f9c6ac6fe4262b9165fee6d7f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5285:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5299:4:46",
                "type": ""
              }
            ],
            "src": "5134:339:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5621:251:46",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5631:26:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5643:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5654:2:46",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5639:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5639:18:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5631:4:46"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5673:9:46"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5694:6:46"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "5688:5:46"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5688:13:46"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5711:3:46",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5716:1:46",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5707:3:46"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5707:11:46"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5720:1:46",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5703:3:46"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5703:19:46"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5684:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5684:39:46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5666:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5666:58:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5666:58:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5744:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5755:4:46",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5740:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5740:20:46"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5772:6:46"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5780:4:46",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5768:3:46"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5768:17:46"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5762:5:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5762:24:46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5733:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5733:54:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5733:54:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5807:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5818:4:46",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5803:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5803:20:46"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "5849:6:46"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5857:4:46",
                                        "type": "",
                                        "value": "0x40"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5845:3:46"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5845:17:46"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5839:5:46"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5839:24:46"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5832:6:46"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5832:32:46"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5825:6:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5825:40:46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5796:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5796:70:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5796:70:46"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_RFC_$8274_memory_ptr__to_t_struct$_RFC_$8274_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5590:9:46",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5601:6:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5612:4:46",
                "type": ""
              }
            ],
            "src": "5478:394:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6051:163:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6068:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6079:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6061:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6061:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6061:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6102:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6113:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6098:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6098:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6118:2:46",
                        "type": "",
                        "value": "13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6091:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6091:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6091:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6141:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6152:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6137:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6137:18:46"
                      },
                      {
                        "hexValue": "4e6f7420666f756e6420524643",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6157:15:46",
                        "type": "",
                        "value": "Not found RFC"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6130:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6130:43:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6130:43:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6182:26:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6194:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6205:2:46",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6190:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6190:18:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6182:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_301a66c0967fe6e4cdfa01c33bb8eae28a4812dcebfebcf48c3a6b0c1b020442__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6028:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6042:4:46",
                "type": ""
              }
            ],
            "src": "5877:337:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6393:236:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6410:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6421:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6403:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6403:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6403:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6444:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6455:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6440:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6440:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6460:2:46",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6433:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6433:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6433:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6483:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6494:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6479:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6479:18:46"
                      },
                      {
                        "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6499:34:46",
                        "type": "",
                        "value": "Initializable: contract is alrea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6472:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6472:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6472:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6554:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6565:2:46",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6550:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6550:18:46"
                      },
                      {
                        "hexValue": "647920696e697469616c697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6570:16:46",
                        "type": "",
                        "value": "dy initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6543:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6543:44:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6543:44:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6596:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6608:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6619:3:46",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6604:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6604:19:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6596:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6370:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6384:4:46",
                "type": ""
              }
            ],
            "src": "6219:410:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6687:205:46",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6697:10:46",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6706:1:46",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6701:1:46",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6766:63:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6791:3:46"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "6796:1:46"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6787:3:46"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6787:11:46"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "6810:3:46"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "6815:1:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6806:3:46"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6806:11:46"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6800:5:46"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6800:18:46"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6780:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6780:39:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6780:39:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6727:1:46"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6730:6:46"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6724:2:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6724:13:46"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6738:19:46",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6740:15:46",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6749:1:46"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6752:2:46",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6745:3:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6745:10:46"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6740:1:46"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6720:3:46",
                    "statements": []
                  },
                  "src": "6716:113:46"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6855:31:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6868:3:46"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "6873:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6864:3:46"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6864:16:46"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6882:1:46",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6857:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6857:27:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6857:27:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6844:1:46"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6847:6:46"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6841:2:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6841:13:46"
                  },
                  "nodeType": "YulIf",
                  "src": "6838:48:46"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "6665:3:46",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "6670:3:46",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6675:6:46",
                "type": ""
              }
            ],
            "src": "6634:258:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7286:397:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7303:3:46"
                      },
                      {
                        "hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7308:25:46",
                        "type": "",
                        "value": "AccessControl: account "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7296:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7296:38:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7296:38:46"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7343:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7363:6:46"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7357:5:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7357:13:46"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "7347:6:46",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7405:6:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7413:4:46",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7401:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7401:17:46"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7424:3:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7429:2:46",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7420:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7420:12:46"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7434:6:46"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "7379:21:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7379:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7379:62:46"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7450:26:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7464:3:46"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7469:6:46"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7460:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7460:16:46"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7454:2:46",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7496:2:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7500:2:46",
                            "type": "",
                            "value": "23"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7492:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7492:11:46"
                      },
                      {
                        "hexValue": "206973206d697373696e6720726f6c6520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7505:19:46",
                        "type": "",
                        "value": " is missing role "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7485:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7485:40:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7485:40:46"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7534:29:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7556:6:46"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7550:5:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7550:13:46"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "7538:8:46",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7598:6:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7606:4:46",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7594:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7594:17:46"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7617:2:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7621:2:46",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7613:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7613:11:46"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "7626:8:46"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "7572:21:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7572:63:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7572:63:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7644:33:46",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7659:2:46"
                          },
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "7663:8:46"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7655:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7655:17:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7674:2:46",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7651:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7651:26:46"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7644:3:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7254:3:46",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7259:6:46",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7267:6:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7278:3:46",
                "type": ""
              }
            ],
            "src": "6897:786:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7809:262:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7826:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7837:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7819:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7819:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7819:21:46"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7849:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7869:6:46"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7863:5:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7863:13:46"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "7853:6:46",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7896:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7907:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7892:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7892:18:46"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7912:6:46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7885:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7885:34:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7885:34:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7954:6:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7962:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7950:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7950:15:46"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7971:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7982:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7967:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7967:18:46"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7987:6:46"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "7928:21:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7928:66:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7928:66:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8003:62:46",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8019:9:46"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8038:6:46"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8046:2:46",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8034:3:46"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8034:15:46"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8055:2:46",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "8051:3:46"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8051:7:46"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "8030:3:46"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8030:29:46"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8015:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8015:45:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8062:2:46",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8011:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8011:54:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8003:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7778:9:46",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7789:6:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7800:4:46",
                "type": ""
              }
            ],
            "src": "7688:383:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8177:102:46",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8187:26:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8199:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8210:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8195:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8195:18:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8187:4:46"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8229:9:46"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8244:6:46"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8260:3:46",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8265:1:46",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "8256:3:46"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8256:11:46"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8269:1:46",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "8252:3:46"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8252:19:46"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8240:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8240:32:46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8222:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8222:51:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8222:51:46"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8146:9:46",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8157:6:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8168:4:46",
                "type": ""
              }
            ],
            "src": "8076:203:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8458:237:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8475:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8486:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8468:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8468:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8468:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8509:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8520:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8505:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8505:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8525:2:46",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8498:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8498:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8498:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8548:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8559:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8544:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8544:18:46"
                      },
                      {
                        "hexValue": "45524331393637557067726164653a207570677261646520627265616b732066",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8564:34:46",
                        "type": "",
                        "value": "ERC1967Upgrade: upgrade breaks f"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8537:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8537:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8537:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8619:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8630:2:46",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8615:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8615:18:46"
                      },
                      {
                        "hexValue": "757274686572207570677261646573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8635:17:46",
                        "type": "",
                        "value": "urther upgrades"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8608:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8608:45:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8608:45:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8662:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8674:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8685:3:46",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8670:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8670:19:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8662:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8435:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8449:4:46",
                "type": ""
              }
            ],
            "src": "8284:411:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8874:167:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8891:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8902:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8884:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8884:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8884:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8925:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8936:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8921:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8921:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8941:2:46",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8914:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8914:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8914:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8964:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8975:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8960:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8960:18:46"
                      },
                      {
                        "hexValue": "416c726561647920737570706f72746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8980:19:46",
                        "type": "",
                        "value": "Already supported"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8953:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8953:47:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8953:47:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9009:26:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9021:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9032:2:46",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9017:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9017:18:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9009:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4e08c35cb9163791767f252d73e9cda41007ad62d558c5b5a2d721811ef48c1e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8851:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8865:4:46",
                "type": ""
              }
            ],
            "src": "8700:341:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9145:103:46",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9155:26:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9167:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9178:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9163:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9163:18:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9155:4:46"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9197:9:46"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "9212:6:46"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9224:3:46",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9229:10:46",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "9220:3:46"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9220:20:46"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9208:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9208:33:46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9190:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9190:52:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9190:52:46"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9114:9:46",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9125:6:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9136:4:46",
                "type": ""
              }
            ],
            "src": "9046:202:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9331:199:46",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9377:16:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9386:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9389:1:46",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9379:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9379:12:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9379:12:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9352:7:46"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9361:9:46"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9348:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9348:23:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9373:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9344:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9344:32:46"
                  },
                  "nodeType": "YulIf",
                  "src": "9341:52:46"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9402:29:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9421:9:46"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9415:5:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9415:16:46"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "9406:5:46",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9484:16:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9493:1:46",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9496:1:46",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9486:6:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9486:12:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9486:12:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9453:5:46"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "9474:5:46"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "9467:6:46"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9467:13:46"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "9460:6:46"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9460:21:46"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9450:2:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9450:32:46"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9443:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9443:40:46"
                  },
                  "nodeType": "YulIf",
                  "src": "9440:60:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9509:15:46",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9519:5:46"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9509:6:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9297:9:46",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9308:7:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9320:6:46",
                "type": ""
              }
            ],
            "src": "9253:277:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9709:166:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9726:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9737:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9719:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9719:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9719:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9760:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9771:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9756:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9756:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9776:2:46",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9749:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9749:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9749:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9799:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9810:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9795:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9795:18:46"
                      },
                      {
                        "hexValue": "4e6f7420737570706f72742074797065",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9815:18:46",
                        "type": "",
                        "value": "Not support type"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9788:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9788:46:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9788:46:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9843:26:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9855:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9866:2:46",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9851:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9851:18:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9843:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_af4acf6fcb32331bd18ed3fd32c045309acfd2c550238a3157790040df3541c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9686:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9700:4:46",
                "type": ""
              }
            ],
            "src": "9535:340:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10097:213:46",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10107:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10119:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10130:3:46",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10115:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10115:19:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10107:4:46"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10174:6:46"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10182:9:46"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_struct_ERC721Or1155",
                      "nodeType": "YulIdentifier",
                      "src": "10143:30:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10143:49:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10143:49:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10212:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10223:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10208:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10208:18:46"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "10232:6:46"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10248:3:46",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10253:1:46",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "10244:3:46"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10244:11:46"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10257:1:46",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "10240:3:46"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10240:19:46"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10228:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10228:32:46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10201:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10201:60:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10201:60:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10281:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10292:2:46",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10277:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10277:18:46"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "10297:6:46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10270:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10270:34:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10270:34:46"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_ERC721Or1155_$8219_memory_ptr_t_address_t_uint256__to_t_struct$_ERC721Or1155_$8219_memory_ptr_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10050:9:46",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10061:6:46",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10069:6:46",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10077:6:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10088:4:46",
                "type": ""
              }
            ],
            "src": "9880:430:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10347:95:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10364:1:46",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10371:3:46",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10376:10:46",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "10367:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10367:20:46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10357:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10357:31:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10357:31:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10404:1:46",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10407:4:46",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10397:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10397:15:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10397:15:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10428:1:46",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10431:4:46",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10421:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10421:15:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10421:15:46"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "10315:127:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10499:116:46",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10558:22:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10560:16:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10560:18:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10560:18:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10530:1:46"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "10523:6:46"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10523:9:46"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "10516:6:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10516:17:46"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10538:1:46"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10549:1:46",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "10545:3:46"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10545:6:46"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10553:1:46"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "10541:3:46"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10541:14:46"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "10535:2:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10535:21:46"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10512:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10512:45:46"
                  },
                  "nodeType": "YulIf",
                  "src": "10509:71:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10589:20:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10604:1:46"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10607:1:46"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "10600:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10600:9:46"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "10589:7:46"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10478:1:46",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10481:1:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "10487:7:46",
                "type": ""
              }
            ],
            "src": "10447:168:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10668:80:46",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10695:22:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10697:16:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10697:18:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10697:18:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10684:1:46"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10691:1:46"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "10687:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10687:6:46"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10681:2:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10681:13:46"
                  },
                  "nodeType": "YulIf",
                  "src": "10678:39:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10726:16:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10737:1:46"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10740:1:46"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10733:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10733:9:46"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "10726:3:46"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10651:1:46",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10654:1:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "10660:3:46",
                "type": ""
              }
            ],
            "src": "10620:128:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10785:95:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10802:1:46",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10809:3:46",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10814:10:46",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "10805:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10805:20:46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10795:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10795:31:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10795:31:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10842:1:46",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10845:4:46",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10835:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10835:15:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10835:15:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10866:1:46",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10869:4:46",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10859:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10859:15:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10859:15:46"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "10753:127:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10932:89:46",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10959:22:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10961:16:46"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10961:18:46"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10961:18:46"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10952:5:46"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10945:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10945:13:46"
                  },
                  "nodeType": "YulIf",
                  "src": "10942:39:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10990:25:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11001:5:46"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11012:1:46",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "11008:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11008:6:46"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10997:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10997:18:46"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "10990:3:46"
                    }
                  ]
                }
              ]
            },
            "name": "decrement_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10914:5:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "10924:3:46",
                "type": ""
              }
            ],
            "src": "10885:136:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11200:182:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11217:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11228:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11210:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11210:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11210:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11251:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11262:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11247:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11247:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11267:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11240:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11240:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11240:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11290:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11301:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11286:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11286:18:46"
                      },
                      {
                        "hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11306:34:46",
                        "type": "",
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11279:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11279:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11279:62:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11350:26:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11362:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11373:2:46",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11358:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11358:18:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11350:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11177:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11191:4:46",
                "type": ""
              }
            ],
            "src": "11026:356:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11561:235:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11578:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11589:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11571:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11571:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11571:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11612:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11623:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11608:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11608:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11628:2:46",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11601:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11601:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11601:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11651:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11662:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11647:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11647:18:46"
                      },
                      {
                        "hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11667:34:46",
                        "type": "",
                        "value": "ERC1967: new implementation is n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11640:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11640:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11640:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11722:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11733:2:46",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11718:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11718:18:46"
                      },
                      {
                        "hexValue": "6f74206120636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11738:15:46",
                        "type": "",
                        "value": "ot a contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11711:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11711:43:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11711:43:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11763:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11775:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11786:3:46",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11771:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11771:19:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11763:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11538:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11552:4:46",
                "type": ""
              }
            ],
            "src": "11387:409:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11975:228:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11992:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12003:2:46",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11985:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11985:21:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11985:21:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12026:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12037:2:46",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12022:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12022:18:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12042:2:46",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12015:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12015:30:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12015:30:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12065:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12076:2:46",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12061:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12061:18:46"
                      },
                      {
                        "hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12081:34:46",
                        "type": "",
                        "value": "Address: delegate call to non-co"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12054:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12054:62:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12054:62:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12136:9:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12147:2:46",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12132:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12132:18:46"
                      },
                      {
                        "hexValue": "6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12152:8:46",
                        "type": "",
                        "value": "ntract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12125:6:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12125:36:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12125:36:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12170:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12182:9:46"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12193:3:46",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12178:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12178:19:46"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12170:4:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11952:9:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11966:4:46",
                "type": ""
              }
            ],
            "src": "11801:402:46"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12345:137:46",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12355:27:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12375:6:46"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12369:5:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12369:13:46"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "12359:6:46",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "12417:6:46"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12425:4:46",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12413:3:46"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12413:17:46"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12432:3:46"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12437:6:46"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "12391:21:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12391:53:46"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12391:53:46"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12453:23:46",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12464:3:46"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12469:6:46"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12460:3:46"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12460:16:46"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12453:3:46"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12321:3:46",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12326:6:46",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12337:3:46",
                "type": ""
              }
            ],
            "src": "12208:274:46"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n    function abi_encode_struct_ERC721Or1155(value, pos)\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(pos, and(mload(value), _1))\n        mstore(add(pos, 0x20), and(mload(add(value, 0x20)), _1))\n    }\n    function abi_encode_tuple_t_struct$_ERC721Or1155_$8219_memory_ptr_t_bool__to_t_struct$_ERC721Or1155_$8219_memory_ptr_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        abi_encode_struct_ERC721Or1155(value0, headStart)\n        mstore(add(headStart, 64), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"active proxy\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_bffe4469dca8adabf852f8a5a9facae8a5395f7cb26ea5e49cba2209ade18e17__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Already exists RFC\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_acfa77d3289979f16039d26c122bf0deb5df813f9c6ac6fe4262b9165fee6d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Already support\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_RFC_$8274_memory_ptr__to_t_struct$_RFC_$8274_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(mload(value0), sub(shl(160, 1), 1)))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), iszero(iszero(mload(add(value0, 0x40)))))\n    }\n    function abi_encode_tuple_t_stringliteral_301a66c0967fe6e4cdfa01c33bb8eae28a4812dcebfebcf48c3a6b0c1b020442__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Not found RFC\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: upgrade breaks f\")\n        mstore(add(headStart, 96), \"urther upgrades\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4e08c35cb9163791767f252d73e9cda41007ad62d558c5b5a2d721811ef48c1e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Already supported\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_af4acf6fcb32331bd18ed3fd32c045309acfd2c550238a3157790040df3541c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Not support type\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_ERC721Or1155_$8219_memory_ptr_t_address_t_uint256__to_t_struct$_ERC721Or1155_$8219_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        abi_encode_struct_ERC721Or1155(value0, headStart)\n        mstore(add(headStart, 64), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value2)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: delegate call to non-co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
      "id": 46,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "447:2700:43:-:0;;;1307:4:5;1264:48;;447:2700:43;;;;;;;;;-1:-1:-1;2030:13:4;;;;;;;;:30;;-1:-1:-1;2048:12:4;;;;2047:13;2030:30;2022:89;;;;-1:-1:-1;;;2022:89:4;;216:2:46;2022:89:4;;;198:21:46;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:46;;;338:44;399:19;;2022:89:4;;;;;;;;2122:19;2145:13;;;;;;2144:14;2168:98;;;;2202:13;:20;;-1:-1:-1;;2236:19:4;;;;;2168:98;2292:14;2288:66;;;2338:5;2322:21;;-1:-1:-1;;2322:21:4;;;2288:66;2012:348;447:2700:43;;;;;;;;;;",
  "deployedSourceMap": "447:2700:43:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3005:213:0;;;;;;;;;;-1:-1:-1;3005:213:0;;;;;:::i;:::-;;:::i;:::-;;;470:14:46;;463:22;445:41;;433:2;418:18;3005:213:0;;;;;;;;4410:121;;;;;;;;;;-1:-1:-1;4410:121:0;;;;;:::i;:::-;4476:7;4502:12;;;:6;:12;;;;;:22;;;;4410:121;;;;828:25:46;;;816:2;801:18;4410:121:0;682:177:46;4781:145:0;;;;;;;;;;-1:-1:-1;4781:145:0;;;;;:::i;:::-;;:::i;:::-;;200:54:37;;;;;;;;;;;;234:20;200:54;;5798:214:0;;;;;;;;;;-1:-1:-1;5798:214:0;;;;;:::i;:::-;;:::i;2223:199:5:-;;;;;;;;;;-1:-1:-1;2223:199:5;;;;;:::i;:::-;;:::i;1527:319:43:-;;;;;;;;;;-1:-1:-1;1527:319:43;;;;;:::i;:::-;;:::i;2671:224:5:-;;;;;;:::i;:::-;;:::i;2922:91:43:-;;;;;;;;;;-1:-1:-1;2922:91:43;;;;;:::i;:::-;;:::i;1852:272::-;;;;;;;;;;-1:-1:-1;1852:272:43;;;;;:::i;:::-;;:::i;1259:118::-;;;;;;;;;;;;;:::i;3305:137:0:-;;;;;;;;;;-1:-1:-1;3305:137:0;;;;;:::i;:::-;;:::i;2412:49::-;;;;;;;;;;-1:-1:-1;2412:49:0;2457:4;2412:49;;765:42:43;;;;;;;;;;-1:-1:-1;765:42:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;765:42:43;;;;;;;;;;;;;-1:-1:-1;;;;;2838:32:46;;;2820:51;;2902:2;2887:18;;2880:34;;;;2957:14;2950:22;2930:18;;;2923:50;2808:2;2793:18;765:42:43;2624:355:46;260:62:37;;;;;;;;;;;;298:24;260:62;;5160:147:0;;;;;;;;;;-1:-1:-1;5160:147:0;;;;;:::i;:::-;;:::i;709:49:43:-;;;;;;;;;;-1:-1:-1;709:49:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;709:49:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;328:66:37:-;;;;;;;;;;;;368:26;328:66;;3005:213:0;3090:4;-1:-1:-1;;;;;;3113:58:0;;-1:-1:-1;;;3113:58:0;;:98;;-1:-1:-1;;;;;;;;;;1193:51:21;;;3175:36:0;3106:105;3005:213;-1:-1:-1;;3005:213:0:o;4781:145::-;4476:7;4502:12;;;:6;:12;;;;;:22;;;2890:30;2901:4;955:10:17;2890::0;:30::i;:::-;4894:25:::1;4905:4;4911:7;4894:10;:25::i;:::-;4781:145:::0;;;:::o;5798:214::-;-1:-1:-1;;;;;5893:23:0;;955:10:17;5893:23:0;5885:83;;;;-1:-1:-1;;;5885:83:0;;3747:2:46;5885:83:0;;;3729:21:46;3786:2;3766:18;;;3759:30;3825:34;3805:18;;;3798:62;-1:-1:-1;;;3876:18:46;;;3869:45;3931:19;;5885:83:0;;;;;;;;;5979:26;5991:4;5997:7;5979:11;:26::i;:::-;5798:214;;:::o;2223:199:5:-;1864:4;-1:-1:-1;;;;;1873:6:5;1856:23;;;1848:80;;;;-1:-1:-1;;;1848:80:5;;;;;;;:::i;:::-;1970:6;-1:-1:-1;;;;;1946:30:5;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1946:30:5;;1938:87;;;;-1:-1:-1;;;1938:87:5;;;;;;;:::i;:::-;2306:36:::1;2324:17;2306;:36::i;:::-;2395:12;::::0;;2405:1:::1;2395:12:::0;;;::::1;::::0;::::1;::::0;;;2352:63:::1;::::0;2376:17;;2395:12;2352:23:::1;:63::i;:::-;2223:199:::0;:::o;1527:319:43:-;-1:-1:-1;;;;;1581:16:43;;;;;;:11;:16;;;;;:29;;;:34;1573:65;;;;-1:-1:-1;;;1573:65:43;;4989:2:46;1573:65:43;;;4971:21:46;5028:2;5008:18;;;5001:30;-1:-1:-1;;;5047:18:46;;;5040:48;5105:18;;1573:65:43;4787:342:46;1573:65:43;-1:-1:-1;;;;;1657:16:43;;;;;;:11;:16;;;;;:24;;;;;1656:25;1648:53;;;;-1:-1:-1;;;1648:53:43;;5336:2:46;1648:53:43;;;5318:21:46;5375:2;5355:18;;;5348:30;-1:-1:-1;;;5394:18:46;;;5387:45;5449:18;;1648:53:43;5134:339:46;1648:53:43;1712:14;1729:41;;;;;;;;1733:12;955:10:17;;876:96;1733:12:43;-1:-1:-1;;;;;1729:41:43;;;;;1747:15;1729:41;;;;;;;;-1:-1:-1;1729:41:43;;;;;;;1781:16;;;;;;:11;:16;;;;;;:22;;;;-1:-1:-1;;;;;;1781:22:43;;;;;;;;;;;;;-1:-1:-1;1781:22:43;;;;;;;;;;;;;;-1:-1:-1;;1781:22:43;;;;;;;;;;;1819:20;;5666:58:46;;;5762:24;5740:20;;;5733:54;;;;5839:24;;5832:32;5825:40;5803:20;;;5796:70;;;;1781:22:43;;-1:-1:-1;1781:16:43;1819:20;;5654:2:46;5639:18;1819:20:43;;;;;;;;1563:283;1527:319;:::o;2671:224:5:-;1864:4;-1:-1:-1;;;;;1873:6:5;1856:23;;;1848:80;;;;-1:-1:-1;;;1848:80:5;;;;;;;:::i;:::-;1970:6;-1:-1:-1;;;;;1946:30:5;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1946:30:5;;1938:87;;;;-1:-1:-1;;;1938:87:5;;;;;;;:::i;:::-;2788:36:::1;2806:17;2788;:36::i;:::-;2834:54;2858:17;2877:4;2883;2834:23;:54::i;2922:91:43:-:0;234:20:37;2890:30:0;234:20:37;955:10:17;2890::0;:30::i;:::-;2990:16:43::1;3002:3;2990:11;:16::i;1852:272::-:0;-1:-1:-1;;;;;1919:16:43;;;1902:14;1919:16;;;:11;:16;;;;;;;;;1902:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1945:46;;;;-1:-1:-1;;;1945:46:43;;6079:2:46;1945:46:43;;;6061:21:46;6118:2;6098:18;;;6091:30;-1:-1:-1;;;6137:18:46;;;6130:43;6190:18;;1945:46:43;5877:337:46;1945:46:43;2016:4;2001:12;;;;:19;;;-1:-1:-1;;;;;2031:16:43;;;2001:19;2031:16;;;:11;:16;;;;;;;:22;;;;-1:-1:-1;;;;;;2031:22:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2031:22:43;;;;;;;;;;2064:16;2031;2064:11;:16::i;:::-;2108:3;-1:-1:-1;;;;;2096:21:43;;2113:3;2096:21;;;;;5688:13:46;;-1:-1:-1;;;;;5684:39:46;5666:58;;5780:4;5768:17;;;5762:24;5740:20;;;5733:54;5857:4;5845:17;;;5839:24;5832:32;5825:40;5803:20;;;5796:70;;;;5654:2;5639:18;;5478:394;1259:118:43;2030:13:4;;;;;;;;:30;;-1:-1:-1;2048:12:4;;;;2047:13;2030:30;2022:89;;;;-1:-1:-1;;;2022:89:4;;;;;;;:::i;:::-;2122:19;2145:13;;;;;;2144:14;2168:98;;;;2202:13;:20;;-1:-1:-1;;2236:19:4;;;;;2168:98;1310:24:43::1;:22;:24::i;:::-;1344:26;:24;:26::i;:::-;2292:14:4::0;2288:66;;;2338:5;2322:21;;-1:-1:-1;;2322:21:4;;;2012:348;1259:118:43:o;3305:137:0:-;3383:4;3406:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3406:29:0;;;;;;;;;;;;;;;3305:137::o;5160:147::-;4476:7;4502:12;;;:6;:12;;;;;:22;;;2890:30;2901:4;955:10:17;2890::0;:30::i;:::-;5274:26:::1;5286:4;5292:7;5274:11;:26::i;3723:506::-:0;3803:22;3811:4;3817:7;3803;:22::i;:::-;3798:425;;3986:52;4025:7;-1:-1:-1;;;;;3986:52:0;4035:2;3986:30;:52::i;:::-;4109:49;4148:4;4155:2;4109:30;:49::i;:::-;3893:287;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3893:287:0;;;;;;;;;;-1:-1:-1;;;3841:371:0;;;;;;;:::i;7255:233::-;7338:22;7346:4;7352:7;7338;:22::i;:::-;7333:149;;7376:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7376:29:0;;;;;;;;;:36;;-1:-1:-1;;7376:36:0;7408:4;7376:36;;;7458:12;955:10:17;;876:96;7458:12:0;-1:-1:-1;;;;;7431:40:0;7449:7;-1:-1:-1;;;;;7431:40:0;7443:4;7431:40;;;;;;;;;;7255:233;;:::o;7613:234::-;7696:22;7704:4;7710:7;7696;:22::i;:::-;7692:149;;;7766:5;7734:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7734:29:0;;;;;;;;;;:37;;-1:-1:-1;;7734:37:0;;;7790:40;955:10:17;;7734:12:0;;7790:40;;7766:5;7790:40;7613:234;;:::o;1524:151:2:-;1253:66;1603:65;-1:-1:-1;;;;;1603:65:2;;1524:151::o;3019:126:43:-;368:26:37;2890:30:0;368:26:37;955:10:17;2890::0;:30::i;2899:1240:2:-;3043:25;3071:20;:18;:20::i;:::-;3043:48;;3144:37;3163:17;3144:18;:37::i;:::-;3209:1;3195:4;:11;:15;:28;;;;3214:9;3195:28;3191:105;;;3239:46;3261:17;3280:4;3239:21;:46::i;:::-;;3191:105;912:66;3495:21;;;;3490:643;;3608:28;;-1:-1:-1;;3608:28:2;3632:4;3608:28;;;3724:64;;-1:-1:-1;;;;;8240:32:46;;3724:64:2;;;8222:51:46;3650:152:2;;3689:17;;8195:18:46;;3724:64:2;;;-1:-1:-1;;3724:64:2;;;;;;;;;;;;;;-1:-1:-1;;;;;3724:64:2;-1:-1:-1;;;3724:64:2;;;3650:21;:152::i;:::-;-1:-1:-1;3816:29:2;;-1:-1:-1;;3816:29:2;;;3932:20;:18;:20::i;:::-;-1:-1:-1;;;;;3911:41:2;:17;-1:-1:-1;;;;;3911:41:2;;3903:101;;;;-1:-1:-1;;;3903:101:2;;8486:2:46;3903:101:2;;;8468:21:46;8525:2;8505:18;;;8498:30;8564:34;8544:18;;;8537:62;-1:-1:-1;;;8615:18:46;;;8608:45;8670:19;;3903:101:2;8284:411:46;3903:101:2;4093:29;4104:17;4093:10;:29::i;:::-;3033:1106;;2899:1240;;;:::o;2130:756:43:-;-1:-1:-1;;;;;2191:16:43;;;;;;:11;:16;;;;;:24;;;;;2190:25;2182:55;;;;-1:-1:-1;;;2182:55:43;;8902:2:46;2182:55:43;;;8884:21:46;8941:2;8921:18;;;8914:30;-1:-1:-1;;;8960:18:46;;;8953:47;9017:18;;2182:55:43;8700:341:46;2182:55:43;-1:-1:-1;;;;;;;;;;;;;;;;2417:48:43;;-1:-1:-1;;;2417:48:43;;-1:-1:-1;;;2417:48:43;;;9190:52:46;;;2274:26:43;-1:-1:-1;;;2335:25:43;-1:-1:-1;;;;;2417:30:43;;;;;9163:18:46;;2417:48:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2413:290;;;-1:-1:-1;;;;;2481:36:43;;;;2413:290;;;2538:47;;-1:-1:-1;;;2538:47:43;;-1:-1:-1;;;;;;9208:33:46;;2538:47:43;;;9190:52:46;-1:-1:-1;;;;;2538:30:43;;;;;9163:18:46;;2538:47:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2534:169;;;-1:-1:-1;;;;;2601:34:43;;:19;;;:34;2534:169;;;2666:26;;-1:-1:-1;;;2666:26:43;;9737:2:46;2666:26:43;;;9719:21:46;9776:2;9756:18;;;9749:30;-1:-1:-1;;;9795:18:46;;;9788:46;9851:18;;2666:26:43;9535:340:46;2534:169:43;2740:64;;;;;;;;;;;2790:4;2740:64;;;;;;;-1:-1:-1;;;;;2721:16:43;;;-1:-1:-1;2721:16:43;;;:11;:16;;;;;:83;;;;;;-1:-1:-1;;;;;;2721:83:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2721:83:43;;;;;;;;;;2820:59;;;;;2740:64;;2851:10;;2863:15;;2820:59;:::i;:::-;;;;;;;;2172:714;;;2130:756;:::o;940:149:5:-;2030:13:4;;;;;;;;:30;;-1:-1:-1;2048:12:4;;;;2047:13;2030:30;2022:89;;;;-1:-1:-1;;;2022:89:4;;;;;;;:::i;:::-;2122:19;2145:13;;;;;;2144:14;2168:98;;;;2202:13;:20;;-1:-1:-1;;2236:19:4;;;;;2168:98;1005:33:5::1;:31;:33::i;:::-;1048:34;:32;:34::i;492:269:37:-:0;547:22;:20;:22::i;:::-;579:42;2457:4:0;610:10:37;579;:42::i;:::-;631:31;234:20;651:10;631;:31::i;:::-;672:35;298:24;696:10;672;:35::i;:::-;717:37;368:26;743:10;717;:37::i;:::-;492:269::o;1599:441:20:-;1674:13;1699:19;1731:10;1735:6;1731:1;:10;:::i;:::-;:14;;1744:1;1731:14;:::i;:::-;1721:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1721:25:20;;1699:47;;-1:-1:-1;;;1756:6:20;1763:1;1756:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1756:15:20;;;;;;;;;-1:-1:-1;;;1781:6:20;1788:1;1781:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1781:15:20;;;;;;;;-1:-1:-1;1811:9:20;1823:10;1827:6;1823:1;:10;:::i;:::-;:14;;1836:1;1823:14;:::i;:::-;1811:26;;1806:132;1843:1;1839;:5;1806:132;;;-1:-1:-1;;;1890:5:20;1898:3;1890:11;1877:25;;;;;;;:::i;:::-;;;;1865:6;1872:1;1865:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1865:37:20;;;;;;;;-1:-1:-1;1926:1:20;1916:11;;;;;1846:3;;;:::i;:::-;;;1806:132;;;-1:-1:-1;1955:10:20;;1947:55;;;;-1:-1:-1;;;1947:55:20;;11228:2:46;1947:55:20;;;11210:21:46;;;11247:18;;;11240:30;11306:34;11286:18;;;11279:62;11358:18;;1947:55:20;11026:356:46;1947:55:20;2026:6;1599:441;-1:-1:-1;;;1599:441:20:o;1766:281:2:-;1098:20:16;;1839:106:2;;;;-1:-1:-1;;;1839:106:2;;11589:2:46;1839:106:2;;;11571:21:46;11628:2;11608:18;;;11601:30;11667:34;11647:18;;;11640:62;-1:-1:-1;;;11718:18:46;;;11711:43;11771:19;;1839:106:2;11387:409:46;1839:106:2;1253:66;1955:85;;-1:-1:-1;;;;;;1955:85:2;-1:-1:-1;;;;;1955:85:2;;;;;;;;;;1766:281::o;7315:455::-;7398:12;1098:20:16;;7422:88:2;;;;-1:-1:-1;;;7422:88:2;;12003:2:46;7422:88:2;;;11985:21:46;12042:2;12022:18;;;12015:30;12081:34;12061:18;;;12054:62;-1:-1:-1;;;12132:18:46;;;12125:36;12178:19;;7422:88:2;11801:402:46;7422:88:2;7581:12;7595:23;7622:6;-1:-1:-1;;;;;7622:19:2;7642:4;7622:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7580:67;;;;7664:99;7700:7;7709:10;7664:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;7657:106;7315:455;-1:-1:-1;;;;;7315:455:2:o;2153:152::-;2219:37;2238:17;2219:18;:37::i;:::-;2271:27;;-1:-1:-1;;;;;2271:27:2;;;;;;;;2153:152;:::o;715:71::-;2030:13:4;;;;;;;;:30;;-1:-1:-1;2048:12:4;;;;2047:13;2030:30;2022:89;;;;-1:-1:-1;;;2022:89:4;;;;;;;:::i;:::-;2122:19;2145:13;;;;;;2144:14;2168:98;;;;2202:13;:20;;-1:-1:-1;;2236:19:4;;;;;2288:66;;;;2338:5;2322:21;;-1:-1:-1;;2322:21:4;;;2012:348;715:71:2:o;2010:173:0:-;2030:13:4;;;;;;;;:30;;-1:-1:-1;2048:12:4;;;;2047:13;2030:30;2022:89;;;;-1:-1:-1;;;2022:89:4;;;;;;;:::i;:::-;2122:19;2145:13;;;;;;2144:14;2168:98;;;;2202:13;:20;;-1:-1:-1;;2236:19:4;;;;;2168:98;2073:26:0::1;:24;:26::i;6275:692:16:-:0;6421:12;6449:7;6445:516;;;-1:-1:-1;6479:10:16;6472:17;;6445:516;6590:17;;:21;6586:365;;6784:10;6778:17;6844:15;6831:10;6827:2;6823:19;6816:44;6586:365;6923:12;6916:20;;-1:-1:-1;;;6916:20:16;;;;;;;;:::i;14:286:46:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:46;;209:43;;199:71;;266:1;263;256:12;497:180;556:6;609:2;597:9;588:7;584:23;580:32;577:52;;;625:1;622;615:12;577:52;-1:-1:-1;648:23:46;;497:180;-1:-1:-1;497:180:46:o;864:173::-;932:20;;-1:-1:-1;;;;;981:31:46;;971:42;;961:70;;1027:1;1024;1017:12;961:70;864:173;;;:::o;1042:254::-;1110:6;1118;1171:2;1159:9;1150:7;1146:23;1142:32;1139:52;;;1187:1;1184;1177:12;1139:52;1223:9;1210:23;1200:33;;1252:38;1286:2;1275:9;1271:18;1252:38;:::i;:::-;1242:48;;1042:254;;;;;:::o;1301:186::-;1360:6;1413:2;1401:9;1392:7;1388:23;1384:32;1381:52;;;1429:1;1426;1419:12;1381:52;1452:29;1471:9;1452:29;:::i;1492:127::-;1553:10;1548:3;1544:20;1541:1;1534:31;1584:4;1581:1;1574:15;1608:4;1605:1;1598:15;1624:995;1701:6;1709;1762:2;1750:9;1741:7;1737:23;1733:32;1730:52;;;1778:1;1775;1768:12;1730:52;1801:29;1820:9;1801:29;:::i;:::-;1791:39;;1881:2;1870:9;1866:18;1853:32;1904:18;1945:2;1937:6;1934:14;1931:34;;;1961:1;1958;1951:12;1931:34;1999:6;1988:9;1984:22;1974:32;;2044:7;2037:4;2033:2;2029:13;2025:27;2015:55;;2066:1;2063;2056:12;2015:55;2102:2;2089:16;2124:2;2120;2117:10;2114:36;;;2130:18;;:::i;:::-;2205:2;2199:9;2173:2;2259:13;;-1:-1:-1;;2255:22:46;;;2279:2;2251:31;2247:40;2235:53;;;2303:18;;;2323:22;;;2300:46;2297:72;;;2349:18;;:::i;:::-;2389:10;2385:2;2378:22;2424:2;2416:6;2409:18;2464:7;2459:2;2454;2450;2446:11;2442:20;2439:33;2436:53;;;2485:1;2482;2475:12;2436:53;2541:2;2536;2532;2528:11;2523:2;2515:6;2511:15;2498:46;2586:1;2581:2;2576;2568:6;2564:15;2560:24;2553:35;2607:6;2597:16;;;;;;;1624:995;;;;;:::o;3198:342::-;3414:2;3399:18;;3426:49;3403:9;3457:6;3104:12;;-1:-1:-1;;;;;3100:21:46;;;3088:34;;3175:4;3164:16;;;3158:23;3154:32;3138:14;;3131:56;2984:209;3426:49;3525:6;3518:14;3511:22;3506:2;3495:9;3491:18;3484:50;3198:342;;;;;:::o;3961:408::-;4163:2;4145:21;;;4202:2;4182:18;;;4175:30;4241:34;4236:2;4221:18;;4214:62;-1:-1:-1;;;4307:2:46;4292:18;;4285:42;4359:3;4344:19;;3961:408::o;4374:::-;4576:2;4558:21;;;4615:2;4595:18;;;4588:30;4654:34;4649:2;4634:18;;4627:62;-1:-1:-1;;;4720:2:46;4705:18;;4698:42;4772:3;4757:19;;4374:408::o;6219:410::-;6421:2;6403:21;;;6460:2;6440:18;;;6433:30;6499:34;6494:2;6479:18;;6472:62;-1:-1:-1;;;6565:2:46;6550:18;;6543:44;6619:3;6604:19;;6219:410::o;6634:258::-;6706:1;6716:113;6730:6;6727:1;6724:13;6716:113;;;6806:11;;;6800:18;6787:11;;;6780:39;6752:2;6745:10;6716:113;;;6847:6;6844:1;6841:13;6838:48;;;6882:1;6873:6;6868:3;6864:16;6857:27;6838:48;;6634:258;;;:::o;6897:786::-;7308:25;7303:3;7296:38;7278:3;7363:6;7357:13;7379:62;7434:6;7429:2;7424:3;7420:12;7413:4;7405:6;7401:17;7379:62;:::i;:::-;-1:-1:-1;;;7500:2:46;7460:16;;;7492:11;;;7485:40;7550:13;;7572:63;7550:13;7621:2;7613:11;;7606:4;7594:17;;7572:63;:::i;:::-;7655:17;7674:2;7651:26;;6897:786;-1:-1:-1;;;;6897:786:46:o;7688:383::-;7837:2;7826:9;7819:21;7800:4;7869:6;7863:13;7912:6;7907:2;7896:9;7892:18;7885:34;7928:66;7987:6;7982:2;7971:9;7967:18;7962:2;7954:6;7950:15;7928:66;:::i;:::-;8055:2;8034:15;-1:-1:-1;;8030:29:46;8015:45;;;;8062:2;8011:54;;7688:383;-1:-1:-1;;7688:383:46:o;9253:277::-;9320:6;9373:2;9361:9;9352:7;9348:23;9344:32;9341:52;;;9389:1;9386;9379:12;9341:52;9421:9;9415:16;9474:5;9467:13;9460:21;9453:5;9450:32;9440:60;;9496:1;9493;9486:12;9880:430;10130:3;10115:19;;10143:49;10119:9;10174:6;3104:12;;-1:-1:-1;;;;;3100:21:46;;;3088:34;;3175:4;3164:16;;;3158:23;3154:32;3138:14;;3131:56;2984:209;10143:49;-1:-1:-1;;;;;10228:32:46;;;;10223:2;10208:18;;10201:60;10292:2;10277:18;10270:34;9880:430;;-1:-1:-1;9880:430:46:o;10315:127::-;10376:10;10371:3;10367:20;10364:1;10357:31;10407:4;10404:1;10397:15;10431:4;10428:1;10421:15;10447:168;10487:7;10553:1;10549;10545:6;10541:14;10538:1;10535:21;10530:1;10523:9;10516:17;10512:45;10509:71;;;10560:18;;:::i;:::-;-1:-1:-1;10600:9:46;;10447:168::o;10620:128::-;10660:3;10691:1;10687:6;10684:1;10681:13;10678:39;;;10697:18;;:::i;:::-;-1:-1:-1;10733:9:46;;10620:128::o;10753:127::-;10814:10;10809:3;10805:20;10802:1;10795:31;10845:4;10842:1;10835:15;10869:4;10866:1;10859:15;10885:136;10924:3;10952:5;10942:39;;10961:18;;:::i;:::-;-1:-1:-1;;;10997:18:46;;10885:136::o;12208:274::-;12337:3;12375:6;12369:13;12391:53;12437:6;12432:3;12425:4;12417:6;12413:17;12391:53;:::i;:::-;12460:16;;;;;12208:274;-1:-1:-1;;12208:274:46:o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.9;\n\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\nimport \"./MelandAccessRoles.sol\";\n\ncontract NFTFactory is\n    Initializable,\n    MelandAccessRoles,\n    UUPSUpgradeable\n{\n    struct ERC721Or1155 {\n        IERC1155 erc1155;\n        IERC721 erc721;\n    }\n\n    struct SupportNFT {\n        ERC721Or1155 erc721or1155;\n        bool support;\n    }\n\n    mapping(address => SupportNFT) public supportNFTs;\n\n    mapping(address => RFC) public supportRFCs;\n\n    event NFTSupportRemove(\n        ERC721Or1155 nft,\n        address operator,\n        uint256 operationTime\n    );\n\n    event NFTSupportCreate(\n        ERC721Or1155 nft,\n        address operator,\n        uint256 operationTime\n    );\n\n    event RFCCreated(address indexed nft, RFC rfc);\n    event RFCApproved(address indexed nft, RFC rfc);\n\n    struct RFC {\n        address proposer;\n        uint256 proposalTime;\n        bool approved;\n    }\n\n    function initialize() public initializer {\n        __UUPSUpgradeable_init();\n        __MelandAccessRoles_init();\n    }\n\n    // 允许用户增加RFC提案\n    // 请求社区增加第三方nft支持\n    // 社区根据当前游戏的支持度来决定是否通过\n    function newRFC(address nft) public {\n        require(supportRFCs[nft].proposalTime == 0, \"Already exists RFC\");\n        require(!supportNFTs[nft].support, \"Already support\");\n\n        RFC memory rfc = RFC(_msgSender(), block.timestamp, false);\n\n        supportRFCs[nft] = rfc;\n\n        emit RFCCreated(nft, rfc);\n    }\n\n    function approveRFC(address nft) public {\n        RFC memory rfc = supportRFCs[nft];\n        require(rfc.proposalTime > 0, \"Not found RFC\");\n        rfc.approved = true;\n\n        supportRFCs[nft] = rfc;\n\n        _newSupport(nft);\n\n        emit RFCApproved(nft, rfc);\n    }\n\n    function _newSupport(address nft) private {\n        require(!supportNFTs[nft].support, \"Already supported\");\n\n        bytes4 erc1155Interface = type(IERC1155).interfaceId;\n        bytes4 erc721Interface = type(IERC721).interfaceId;\n\n        ERC721Or1155 memory erc721or1155;\n        if (IERC165(nft).supportsInterface(erc1155Interface)) {\n            erc721or1155.erc1155 = IERC1155(nft);\n        } else if (IERC165(nft).supportsInterface(erc721Interface)) {\n            erc721or1155.erc721 = IERC721(nft);\n        } else {\n            revert(\"Not support type\");\n        }\n        \n        supportNFTs[nft] = SupportNFT(\n            erc721or1155,\n            true\n        );\n\n        emit NFTSupportCreate(erc721or1155, msg.sender, block.timestamp);\n    }\n\n    // 增加新的NFT支持.\n    function newSupport(address nft) public onlyRole(GM_ROLE) {\n        _newSupport(nft);\n    }\n\n    function _authorizeUpgrade(address newImplementation)\n        internal\n        override\n        onlyRole(UPGRADER_ROLE)\n    {}\n}\n",
  "sourcePath": "/Users/alberthuang/code/icw/meland/contracts/NFTFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/NFTFactory.sol",
    "exportedSymbols": {
      "AccessControlUpgradeable": [
        336
      ],
      "AddressUpgradeable": [
        3062
      ],
      "ContextUpgradeable": [
        3106
      ],
      "ERC165Upgradeable": [
        3489
      ],
      "ERC1967UpgradeUpgradeable": [
        807
      ],
      "IAccessControlUpgradeable": [
        409
      ],
      "IBeaconUpgradeable": [
        817
      ],
      "IERC1155": [
        3935
      ],
      "IERC165": [
        4063
      ],
      "IERC165Upgradeable": [
        3501
      ],
      "IERC721": [
        4051
      ],
      "Initializable": [
        863
      ],
      "MelandAccessRoles": [
        6761
      ],
      "NFTFactory": [
        8486
      ],
      "StorageSlotUpgradeable": [
        3240
      ],
      "StringsUpgradeable": [
        3443
      ],
      "UUPSUpgradeable": [
        974
      ]
    },
    "id": 8487,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8200,
        "literals": [
          "solidity",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:43"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "id": 8201,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8487,
        "sourceUnit": 337,
        "src": "56:81:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "id": 8202,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8487,
        "sourceUnit": 975,
        "src": "138:77:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "id": 8203,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8487,
        "sourceUnit": 864,
        "src": "216:75:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 8204,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8487,
        "sourceUnit": 4052,
        "src": "292:58:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "id": 8205,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8487,
        "sourceUnit": 3936,
        "src": "351:60:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/MelandAccessRoles.sol",
        "file": "./MelandAccessRoles.sol",
        "id": 8206,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8487,
        "sourceUnit": 6762,
        "src": "412:33:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8207,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 863,
              "src": "474:13:43"
            },
            "id": 8208,
            "nodeType": "InheritanceSpecifier",
            "src": "474:13:43"
          },
          {
            "baseName": {
              "id": 8209,
              "name": "MelandAccessRoles",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6761,
              "src": "493:17:43"
            },
            "id": 8210,
            "nodeType": "InheritanceSpecifier",
            "src": "493:17:43"
          },
          {
            "baseName": {
              "id": 8211,
              "name": "UUPSUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 974,
              "src": "516:15:43"
            },
            "id": 8212,
            "nodeType": "InheritanceSpecifier",
            "src": "516:15:43"
          }
        ],
        "canonicalName": "NFTFactory",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8486,
        "linearizedBaseContracts": [
          8486,
          974,
          807,
          6761,
          336,
          3489,
          3501,
          409,
          3106,
          863
        ],
        "name": "NFTFactory",
        "nameLocation": "456:10:43",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "NFTFactory.ERC721Or1155",
            "id": 8219,
            "members": [
              {
                "constant": false,
                "id": 8215,
                "mutability": "mutable",
                "name": "erc1155",
                "nameLocation": "577:7:43",
                "nodeType": "VariableDeclaration",
                "scope": 8219,
                "src": "568:16:43",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC1155_$3935",
                  "typeString": "contract IERC1155"
                },
                "typeName": {
                  "id": 8214,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 8213,
                    "name": "IERC1155",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3935,
                    "src": "568:8:43"
                  },
                  "referencedDeclaration": 3935,
                  "src": "568:8:43",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC1155_$3935",
                    "typeString": "contract IERC1155"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8218,
                "mutability": "mutable",
                "name": "erc721",
                "nameLocation": "602:6:43",
                "nodeType": "VariableDeclaration",
                "scope": 8219,
                "src": "594:14:43",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC721_$4051",
                  "typeString": "contract IERC721"
                },
                "typeName": {
                  "id": 8217,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 8216,
                    "name": "IERC721",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4051,
                    "src": "594:7:43"
                  },
                  "referencedDeclaration": 4051,
                  "src": "594:7:43",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$4051",
                    "typeString": "contract IERC721"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ERC721Or1155",
            "nameLocation": "545:12:43",
            "nodeType": "StructDefinition",
            "scope": 8486,
            "src": "538:77:43",
            "visibility": "public"
          },
          {
            "canonicalName": "NFTFactory.SupportNFT",
            "id": 8225,
            "members": [
              {
                "constant": false,
                "id": 8222,
                "mutability": "mutable",
                "name": "erc721or1155",
                "nameLocation": "662:12:43",
                "nodeType": "VariableDeclaration",
                "scope": 8225,
                "src": "649:25:43",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ERC721Or1155_$8219_storage_ptr",
                  "typeString": "struct NFTFactory.ERC721Or1155"
                },
                "typeName": {
                  "id": 8221,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 8220,
                    "name": "ERC721Or1155",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 8219,
                    "src": "649:12:43"
                  },
                  "referencedDeclaration": 8219,
                  "src": "649:12:43",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ERC721Or1155_$8219_storage_ptr",
                    "typeString": "struct NFTFactory.ERC721Or1155"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8224,
                "mutability": "mutable",
                "name": "support",
                "nameLocation": "689:7:43",
                "nodeType": "VariableDeclaration",
                "scope": 8225,
                "src": "684:12:43",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 8223,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "684:4:43",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "SupportNFT",
            "nameLocation": "628:10:43",
            "nodeType": "StructDefinition",
            "scope": 8486,
            "src": "621:82:43",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dca2cec9",
            "id": 8230,
            "mutability": "mutable",
            "name": "supportNFTs",
            "nameLocation": "747:11:43",
            "nodeType": "VariableDeclaration",
            "scope": 8486,
            "src": "709:49:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SupportNFT_$8225_storage_$",
              "typeString": "mapping(address => struct NFTFactory.SupportNFT)"
            },
            "typeName": {
              "id": 8229,
              "keyType": {
                "id": 8226,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "717:7:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "709:30:43",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SupportNFT_$8225_storage_$",
                "typeString": "mapping(address => struct NFTFactory.SupportNFT)"
              },
              "valueType": {
                "id": 8228,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 8227,
                  "name": "SupportNFT",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8225,
                  "src": "728:10:43"
                },
                "referencedDeclaration": 8225,
                "src": "728:10:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_SupportNFT_$8225_storage_ptr",
                  "typeString": "struct NFTFactory.SupportNFT"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c92115e4",
            "id": 8235,
            "mutability": "mutable",
            "name": "supportRFCs",
            "nameLocation": "796:11:43",
            "nodeType": "VariableDeclaration",
            "scope": 8486,
            "src": "765:42:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RFC_$8274_storage_$",
              "typeString": "mapping(address => struct NFTFactory.RFC)"
            },
            "typeName": {
              "id": 8234,
              "keyType": {
                "id": 8231,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "773:7:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "765:23:43",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RFC_$8274_storage_$",
                "typeString": "mapping(address => struct NFTFactory.RFC)"
              },
              "valueType": {
                "id": 8233,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 8232,
                  "name": "RFC",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8274,
                  "src": "784:3:43"
                },
                "referencedDeclaration": 8274,
                "src": "784:3:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RFC_$8274_storage_ptr",
                  "typeString": "struct NFTFactory.RFC"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 8244,
            "name": "NFTSupportRemove",
            "nameLocation": "820:16:43",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8238,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "859:3:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8244,
                  "src": "846:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ERC721Or1155_$8219_memory_ptr",
                    "typeString": "struct NFTFactory.ERC721Or1155"
                  },
                  "typeName": {
                    "id": 8237,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8236,
                      "name": "ERC721Or1155",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8219,
                      "src": "846:12:43"
                    },
                    "referencedDeclaration": 8219,
                    "src": "846:12:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC721Or1155_$8219_storage_ptr",
                      "typeString": "struct NFTFactory.ERC721Or1155"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8240,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "880:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8244,
                  "src": "872:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8239,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "872:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8242,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operationTime",
                  "nameLocation": "906:13:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8244,
                  "src": "898:21:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8241,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "898:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "836:89:43"
            },
            "src": "814:112:43"
          },
          {
            "anonymous": false,
            "id": 8253,
            "name": "NFTSupportCreate",
            "nameLocation": "938:16:43",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8247,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "977:3:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8253,
                  "src": "964:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ERC721Or1155_$8219_memory_ptr",
                    "typeString": "struct NFTFactory.ERC721Or1155"
                  },
                  "typeName": {
                    "id": 8246,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8245,
                      "name": "ERC721Or1155",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8219,
                      "src": "964:12:43"
                    },
                    "referencedDeclaration": 8219,
                    "src": "964:12:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC721Or1155_$8219_storage_ptr",
                      "typeString": "struct NFTFactory.ERC721Or1155"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8249,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "998:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8253,
                  "src": "990:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8248,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "990:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8251,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operationTime",
                  "nameLocation": "1024:13:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8253,
                  "src": "1016:21:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1016:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "954:89:43"
            },
            "src": "932:112:43"
          },
          {
            "anonymous": false,
            "id": 8260,
            "name": "RFCCreated",
            "nameLocation": "1056:10:43",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8255,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "1083:3:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8260,
                  "src": "1067:19:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1067:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8258,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rfc",
                  "nameLocation": "1092:3:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8260,
                  "src": "1088:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RFC_$8274_memory_ptr",
                    "typeString": "struct NFTFactory.RFC"
                  },
                  "typeName": {
                    "id": 8257,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8256,
                      "name": "RFC",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8274,
                      "src": "1088:3:43"
                    },
                    "referencedDeclaration": 8274,
                    "src": "1088:3:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RFC_$8274_storage_ptr",
                      "typeString": "struct NFTFactory.RFC"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1066:30:43"
            },
            "src": "1050:47:43"
          },
          {
            "anonymous": false,
            "id": 8267,
            "name": "RFCApproved",
            "nameLocation": "1108:11:43",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8262,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "1136:3:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8267,
                  "src": "1120:19:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8261,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1120:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8265,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rfc",
                  "nameLocation": "1145:3:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8267,
                  "src": "1141:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RFC_$8274_memory_ptr",
                    "typeString": "struct NFTFactory.RFC"
                  },
                  "typeName": {
                    "id": 8264,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8263,
                      "name": "RFC",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8274,
                      "src": "1141:3:43"
                    },
                    "referencedDeclaration": 8274,
                    "src": "1141:3:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RFC_$8274_storage_ptr",
                      "typeString": "struct NFTFactory.RFC"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1119:30:43"
            },
            "src": "1102:48:43"
          },
          {
            "canonicalName": "NFTFactory.RFC",
            "id": 8274,
            "members": [
              {
                "constant": false,
                "id": 8269,
                "mutability": "mutable",
                "name": "proposer",
                "nameLocation": "1185:8:43",
                "nodeType": "VariableDeclaration",
                "scope": 8274,
                "src": "1177:16:43",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 8268,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1177:7:43",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8271,
                "mutability": "mutable",
                "name": "proposalTime",
                "nameLocation": "1211:12:43",
                "nodeType": "VariableDeclaration",
                "scope": 8274,
                "src": "1203:20:43",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 8270,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1203:7:43",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8273,
                "mutability": "mutable",
                "name": "approved",
                "nameLocation": "1238:8:43",
                "nodeType": "VariableDeclaration",
                "scope": 8274,
                "src": "1233:13:43",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 8272,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1233:4:43",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "RFC",
            "nameLocation": "1163:3:43",
            "nodeType": "StructDefinition",
            "scope": 8486,
            "src": "1156:97:43",
            "visibility": "public"
          },
          {
            "body": {
              "id": 8285,
              "nodeType": "Block",
              "src": "1300:77:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8279,
                      "name": "__UUPSUpgradeable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 884,
                      "src": "1310:22:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 8280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1310:24:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8281,
                  "nodeType": "ExpressionStatement",
                  "src": "1310:24:43"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8282,
                      "name": "__MelandAccessRoles_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6760,
                      "src": "1344:24:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 8283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1344:26:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8284,
                  "nodeType": "ExpressionStatement",
                  "src": "1344:26:43"
                }
              ]
            },
            "functionSelector": "8129fc1c",
            "id": 8286,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8277,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8276,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 862,
                  "src": "1288:11:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "1288:11:43"
              }
            ],
            "name": "initialize",
            "nameLocation": "1268:10:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1278:2:43"
            },
            "returnParameters": {
              "id": 8278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1300:0:43"
            },
            "scope": 8486,
            "src": "1259:118:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8332,
              "nodeType": "Block",
              "src": "1563:283:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8292,
                              "name": "supportRFCs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8235,
                              "src": "1581:11:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RFC_$8274_storage_$",
                                "typeString": "mapping(address => struct NFTFactory.RFC storage ref)"
                              }
                            },
                            "id": 8294,
                            "indexExpression": {
                              "id": 8293,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8288,
                              "src": "1593:3:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1581:16:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RFC_$8274_storage",
                              "typeString": "struct NFTFactory.RFC storage ref"
                            }
                          },
                          "id": 8295,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "proposalTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8271,
                          "src": "1581:29:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 8296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1614:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1581:34:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c72656164792065786973747320524643",
                        "id": 8298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1617:20:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bffe4469dca8adabf852f8a5a9facae8a5395f7cb26ea5e49cba2209ade18e17",
                          "typeString": "literal_string \"Already exists RFC\""
                        },
                        "value": "Already exists RFC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bffe4469dca8adabf852f8a5a9facae8a5395f7cb26ea5e49cba2209ade18e17",
                          "typeString": "literal_string \"Already exists RFC\""
                        }
                      ],
                      "id": 8291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1573:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1573:65:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8300,
                  "nodeType": "ExpressionStatement",
                  "src": "1573:65:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1656:25:43",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8302,
                              "name": "supportNFTs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8230,
                              "src": "1657:11:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SupportNFT_$8225_storage_$",
                                "typeString": "mapping(address => struct NFTFactory.SupportNFT storage ref)"
                              }
                            },
                            "id": 8304,
                            "indexExpression": {
                              "id": 8303,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8288,
                              "src": "1669:3:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1657:16:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SupportNFT_$8225_storage",
                              "typeString": "struct NFTFactory.SupportNFT storage ref"
                            }
                          },
                          "id": 8305,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "support",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8224,
                          "src": "1657:24:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920737570706f7274",
                        "id": 8307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1683:17:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_acfa77d3289979f16039d26c122bf0deb5df813f9c6ac6fe4262b9165fee6d7f",
                          "typeString": "literal_string \"Already support\""
                        },
                        "value": "Already support"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_acfa77d3289979f16039d26c122bf0deb5df813f9c6ac6fe4262b9165fee6d7f",
                          "typeString": "literal_string \"Already support\""
                        }
                      ],
                      "id": 8301,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1648:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1648:53:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8309,
                  "nodeType": "ExpressionStatement",
                  "src": "1648:53:43"
                },
                {
                  "assignments": [
                    8312
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8312,
                      "mutability": "mutable",
                      "name": "rfc",
                      "nameLocation": "1723:3:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 8332,
                      "src": "1712:14:43",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RFC_$8274_memory_ptr",
                        "typeString": "struct NFTFactory.RFC"
                      },
                      "typeName": {
                        "id": 8311,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 8310,
                          "name": "RFC",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8274,
                          "src": "1712:3:43"
                        },
                        "referencedDeclaration": 8274,
                        "src": "1712:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RFC_$8274_storage_ptr",
                          "typeString": "struct NFTFactory.RFC"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8320,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 8314,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3092,
                          "src": "1733:10:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 8315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1733:12:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 8316,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "1747:5:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 8317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "1747:15:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 8318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1764:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8313,
                      "name": "RFC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8274,
                      "src": "1729:3:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_RFC_$8274_storage_ptr_$",
                        "typeString": "type(struct NFTFactory.RFC storage pointer)"
                      }
                    },
                    "id": 8319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1729:41:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RFC_$8274_memory_ptr",
                      "typeString": "struct NFTFactory.RFC memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1712:58:43"
                },
                {
                  "expression": {
                    "id": 8325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8321,
                        "name": "supportRFCs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8235,
                        "src": "1781:11:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RFC_$8274_storage_$",
                          "typeString": "mapping(address => struct NFTFactory.RFC storage ref)"
                        }
                      },
                      "id": 8323,
                      "indexExpression": {
                        "id": 8322,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8288,
                        "src": "1793:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1781:16:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RFC_$8274_storage",
                        "typeString": "struct NFTFactory.RFC storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8324,
                      "name": "rfc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8312,
                      "src": "1800:3:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RFC_$8274_memory_ptr",
                        "typeString": "struct NFTFactory.RFC memory"
                      }
                    },
                    "src": "1781:22:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RFC_$8274_storage",
                      "typeString": "struct NFTFactory.RFC storage ref"
                    }
                  },
                  "id": 8326,
                  "nodeType": "ExpressionStatement",
                  "src": "1781:22:43"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8328,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8288,
                        "src": "1830:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8329,
                        "name": "rfc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8312,
                        "src": "1835:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RFC_$8274_memory_ptr",
                          "typeString": "struct NFTFactory.RFC memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_RFC_$8274_memory_ptr",
                          "typeString": "struct NFTFactory.RFC memory"
                        }
                      ],
                      "id": 8327,
                      "name": "RFCCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8260,
                      "src": "1819:10:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_struct$_RFC_$8274_memory_ptr_$returns$__$",
                        "typeString": "function (address,struct NFTFactory.RFC memory)"
                      }
                    },
                    "id": 8330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1819:20:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8331,
                  "nodeType": "EmitStatement",
                  "src": "1814:25:43"
                }
              ]
            },
            "functionSelector": "3e350061",
            "id": 8333,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newRFC",
            "nameLocation": "1536:6:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8288,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "1551:3:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8333,
                  "src": "1543:11:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8287,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1543:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1542:13:43"
            },
            "returnParameters": {
              "id": 8290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1563:0:43"
            },
            "scope": 8486,
            "src": "1527:319:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8374,
              "nodeType": "Block",
              "src": "1892:232:43",
              "statements": [
                {
                  "assignments": [
                    8340
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8340,
                      "mutability": "mutable",
                      "name": "rfc",
                      "nameLocation": "1913:3:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 8374,
                      "src": "1902:14:43",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RFC_$8274_memory_ptr",
                        "typeString": "struct NFTFactory.RFC"
                      },
                      "typeName": {
                        "id": 8339,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 8338,
                          "name": "RFC",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8274,
                          "src": "1902:3:43"
                        },
                        "referencedDeclaration": 8274,
                        "src": "1902:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RFC_$8274_storage_ptr",
                          "typeString": "struct NFTFactory.RFC"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8344,
                  "initialValue": {
                    "baseExpression": {
                      "id": 8341,
                      "name": "supportRFCs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8235,
                      "src": "1919:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RFC_$8274_storage_$",
                        "typeString": "mapping(address => struct NFTFactory.RFC storage ref)"
                      }
                    },
                    "id": 8343,
                    "indexExpression": {
                      "id": 8342,
                      "name": "nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8335,
                      "src": "1931:3:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1919:16:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RFC_$8274_storage",
                      "typeString": "struct NFTFactory.RFC storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1902:33:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 8346,
                            "name": "rfc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8340,
                            "src": "1953:3:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RFC_$8274_memory_ptr",
                              "typeString": "struct NFTFactory.RFC memory"
                            }
                          },
                          "id": 8347,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "proposalTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8271,
                          "src": "1953:16:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 8348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1972:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1953:20:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420666f756e6420524643",
                        "id": 8350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1975:15:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_301a66c0967fe6e4cdfa01c33bb8eae28a4812dcebfebcf48c3a6b0c1b020442",
                          "typeString": "literal_string \"Not found RFC\""
                        },
                        "value": "Not found RFC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_301a66c0967fe6e4cdfa01c33bb8eae28a4812dcebfebcf48c3a6b0c1b020442",
                          "typeString": "literal_string \"Not found RFC\""
                        }
                      ],
                      "id": 8345,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1945:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1945:46:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8352,
                  "nodeType": "ExpressionStatement",
                  "src": "1945:46:43"
                },
                {
                  "expression": {
                    "id": 8357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 8353,
                        "name": "rfc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8340,
                        "src": "2001:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RFC_$8274_memory_ptr",
                          "typeString": "struct NFTFactory.RFC memory"
                        }
                      },
                      "id": 8355,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "approved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8273,
                      "src": "2001:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 8356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2016:4:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2001:19:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8358,
                  "nodeType": "ExpressionStatement",
                  "src": "2001:19:43"
                },
                {
                  "expression": {
                    "id": 8363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8359,
                        "name": "supportRFCs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8235,
                        "src": "2031:11:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RFC_$8274_storage_$",
                          "typeString": "mapping(address => struct NFTFactory.RFC storage ref)"
                        }
                      },
                      "id": 8361,
                      "indexExpression": {
                        "id": 8360,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8335,
                        "src": "2043:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2031:16:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RFC_$8274_storage",
                        "typeString": "struct NFTFactory.RFC storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8362,
                      "name": "rfc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8340,
                      "src": "2050:3:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RFC_$8274_memory_ptr",
                        "typeString": "struct NFTFactory.RFC memory"
                      }
                    },
                    "src": "2031:22:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RFC_$8274_storage",
                      "typeString": "struct NFTFactory.RFC storage ref"
                    }
                  },
                  "id": 8364,
                  "nodeType": "ExpressionStatement",
                  "src": "2031:22:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8366,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8335,
                        "src": "2076:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8365,
                      "name": "_newSupport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8462,
                      "src": "2064:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2064:16:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8368,
                  "nodeType": "ExpressionStatement",
                  "src": "2064:16:43"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8370,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8335,
                        "src": "2108:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8371,
                        "name": "rfc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8340,
                        "src": "2113:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RFC_$8274_memory_ptr",
                          "typeString": "struct NFTFactory.RFC memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_RFC_$8274_memory_ptr",
                          "typeString": "struct NFTFactory.RFC memory"
                        }
                      ],
                      "id": 8369,
                      "name": "RFCApproved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8267,
                      "src": "2096:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_struct$_RFC_$8274_memory_ptr_$returns$__$",
                        "typeString": "function (address,struct NFTFactory.RFC memory)"
                      }
                    },
                    "id": 8372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2096:21:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8373,
                  "nodeType": "EmitStatement",
                  "src": "2091:26:43"
                }
              ]
            },
            "functionSelector": "7176360e",
            "id": 8375,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveRFC",
            "nameLocation": "1861:10:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8335,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "1880:3:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8375,
                  "src": "1872:11:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8334,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1872:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1871:13:43"
            },
            "returnParameters": {
              "id": 8337,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1892:0:43"
            },
            "scope": 8486,
            "src": "1852:272:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8461,
              "nodeType": "Block",
              "src": "2172:714:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2190:25:43",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8381,
                              "name": "supportNFTs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8230,
                              "src": "2191:11:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SupportNFT_$8225_storage_$",
                                "typeString": "mapping(address => struct NFTFactory.SupportNFT storage ref)"
                              }
                            },
                            "id": 8383,
                            "indexExpression": {
                              "id": 8382,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8377,
                              "src": "2203:3:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2191:16:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SupportNFT_$8225_storage",
                              "typeString": "struct NFTFactory.SupportNFT storage ref"
                            }
                          },
                          "id": 8384,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "support",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8224,
                          "src": "2191:24:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920737570706f72746564",
                        "id": 8386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2217:19:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e08c35cb9163791767f252d73e9cda41007ad62d558c5b5a2d721811ef48c1e",
                          "typeString": "literal_string \"Already supported\""
                        },
                        "value": "Already supported"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e08c35cb9163791767f252d73e9cda41007ad62d558c5b5a2d721811ef48c1e",
                          "typeString": "literal_string \"Already supported\""
                        }
                      ],
                      "id": 8380,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2182:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2182:55:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8388,
                  "nodeType": "ExpressionStatement",
                  "src": "2182:55:43"
                },
                {
                  "assignments": [
                    8390
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8390,
                      "mutability": "mutable",
                      "name": "erc1155Interface",
                      "nameLocation": "2255:16:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 8461,
                      "src": "2248:23:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 8389,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "2248:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8395,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 8392,
                          "name": "IERC1155",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3935,
                          "src": "2279:8:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC1155_$3935_$",
                            "typeString": "type(contract IERC1155)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_IERC1155_$3935_$",
                            "typeString": "type(contract IERC1155)"
                          }
                        ],
                        "id": 8391,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "2274:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 8393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2274:14:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$3935",
                        "typeString": "type(contract IERC1155)"
                      }
                    },
                    "id": 8394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "interfaceId",
                    "nodeType": "MemberAccess",
                    "src": "2274:26:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2248:52:43"
                },
                {
                  "assignments": [
                    8397
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8397,
                      "mutability": "mutable",
                      "name": "erc721Interface",
                      "nameLocation": "2317:15:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 8461,
                      "src": "2310:22:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 8396,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "2310:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8402,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 8399,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4051,
                          "src": "2340:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$4051_$",
                            "typeString": "type(contract IERC721)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$4051_$",
                            "typeString": "type(contract IERC721)"
                          }
                        ],
                        "id": 8398,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "2335:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 8400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2335:13:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$4051",
                        "typeString": "type(contract IERC721)"
                      }
                    },
                    "id": 8401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "interfaceId",
                    "nodeType": "MemberAccess",
                    "src": "2335:25:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2310:50:43"
                },
                {
                  "assignments": [
                    8405
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8405,
                      "mutability": "mutable",
                      "name": "erc721or1155",
                      "nameLocation": "2391:12:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 8461,
                      "src": "2371:32:43",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC721Or1155_$8219_memory_ptr",
                        "typeString": "struct NFTFactory.ERC721Or1155"
                      },
                      "typeName": {
                        "id": 8404,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 8403,
                          "name": "ERC721Or1155",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8219,
                          "src": "2371:12:43"
                        },
                        "referencedDeclaration": 8219,
                        "src": "2371:12:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC721Or1155_$8219_storage_ptr",
                          "typeString": "struct NFTFactory.ERC721Or1155"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8406,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2371:32:43"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 8411,
                        "name": "erc1155Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8390,
                        "src": "2448:16:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 8408,
                            "name": "nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8377,
                            "src": "2425:3:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8407,
                          "name": "IERC165",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4063,
                          "src": "2417:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC165_$4063_$",
                            "typeString": "type(contract IERC165)"
                          }
                        },
                        "id": 8409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2417:12:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC165_$4063",
                          "typeString": "contract IERC165"
                        }
                      },
                      "id": 8410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4062,
                      "src": "2417:30:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view external returns (bool)"
                      }
                    },
                    "id": 8412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2417:48:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "arguments": [
                        {
                          "id": 8426,
                          "name": "erc721Interface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8397,
                          "src": "2569:15:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 8423,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8377,
                              "src": "2546:3:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8422,
                            "name": "IERC165",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4063,
                            "src": "2538:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC165_$4063_$",
                              "typeString": "type(contract IERC165)"
                            }
                          },
                          "id": 8424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2538:12:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC165_$4063",
                            "typeString": "contract IERC165"
                          }
                        },
                        "id": 8425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4062,
                        "src": "2538:30:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view external returns (bool)"
                        }
                      },
                      "id": 8427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2538:47:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 8441,
                      "nodeType": "Block",
                      "src": "2652:51:43",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "4e6f7420737570706f72742074797065",
                                "id": 8438,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2673:18:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_af4acf6fcb32331bd18ed3fd32c045309acfd2c550238a3157790040df3541c2",
                                  "typeString": "literal_string \"Not support type\""
                                },
                                "value": "Not support type"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_af4acf6fcb32331bd18ed3fd32c045309acfd2c550238a3157790040df3541c2",
                                  "typeString": "literal_string \"Not support type\""
                                }
                              ],
                              "id": 8437,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967277,
                                4294967277
                              ],
                              "referencedDeclaration": 4294967277,
                              "src": "2666:6:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 8439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2666:26:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 8440,
                          "nodeType": "ExpressionStatement",
                          "src": "2666:26:43"
                        }
                      ]
                    },
                    "id": 8442,
                    "nodeType": "IfStatement",
                    "src": "2534:169:43",
                    "trueBody": {
                      "id": 8436,
                      "nodeType": "Block",
                      "src": "2587:59:43",
                      "statements": [
                        {
                          "expression": {
                            "id": 8434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "id": 8428,
                                "name": "erc721or1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8405,
                                "src": "2601:12:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ERC721Or1155_$8219_memory_ptr",
                                  "typeString": "struct NFTFactory.ERC721Or1155 memory"
                                }
                              },
                              "id": 8430,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "erc721",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8218,
                              "src": "2601:19:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$4051",
                                "typeString": "contract IERC721"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 8432,
                                  "name": "nft",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8377,
                                  "src": "2631:3:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8431,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4051,
                                "src": "2623:7:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$4051_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 8433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2623:12:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$4051",
                                "typeString": "contract IERC721"
                              }
                            },
                            "src": "2601:34:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC721_$4051",
                              "typeString": "contract IERC721"
                            }
                          },
                          "id": 8435,
                          "nodeType": "ExpressionStatement",
                          "src": "2601:34:43"
                        }
                      ]
                    }
                  },
                  "id": 8443,
                  "nodeType": "IfStatement",
                  "src": "2413:290:43",
                  "trueBody": {
                    "id": 8421,
                    "nodeType": "Block",
                    "src": "2467:61:43",
                    "statements": [
                      {
                        "expression": {
                          "id": 8419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 8413,
                              "name": "erc721or1155",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8405,
                              "src": "2481:12:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC721Or1155_$8219_memory_ptr",
                                "typeString": "struct NFTFactory.ERC721Or1155 memory"
                              }
                            },
                            "id": 8415,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "erc1155",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8215,
                            "src": "2481:20:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1155_$3935",
                              "typeString": "contract IERC1155"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 8417,
                                "name": "nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8377,
                                "src": "2513:3:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 8416,
                              "name": "IERC1155",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3935,
                              "src": "2504:8:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155_$3935_$",
                                "typeString": "type(contract IERC1155)"
                              }
                            },
                            "id": 8418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2504:13:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1155_$3935",
                              "typeString": "contract IERC1155"
                            }
                          },
                          "src": "2481:36:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1155_$3935",
                            "typeString": "contract IERC1155"
                          }
                        },
                        "id": 8420,
                        "nodeType": "ExpressionStatement",
                        "src": "2481:36:43"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 8451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8444,
                        "name": "supportNFTs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8230,
                        "src": "2721:11:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SupportNFT_$8225_storage_$",
                          "typeString": "mapping(address => struct NFTFactory.SupportNFT storage ref)"
                        }
                      },
                      "id": 8446,
                      "indexExpression": {
                        "id": 8445,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8377,
                        "src": "2733:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2721:16:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SupportNFT_$8225_storage",
                        "typeString": "struct NFTFactory.SupportNFT storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8448,
                          "name": "erc721or1155",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8405,
                          "src": "2764:12:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC721Or1155_$8219_memory_ptr",
                            "typeString": "struct NFTFactory.ERC721Or1155 memory"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 8449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2790:4:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_ERC721Or1155_$8219_memory_ptr",
                            "typeString": "struct NFTFactory.ERC721Or1155 memory"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 8447,
                        "name": "SupportNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8225,
                        "src": "2740:10:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_SupportNFT_$8225_storage_ptr_$",
                          "typeString": "type(struct NFTFactory.SupportNFT storage pointer)"
                        }
                      },
                      "id": 8450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2740:64:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SupportNFT_$8225_memory_ptr",
                        "typeString": "struct NFTFactory.SupportNFT memory"
                      }
                    },
                    "src": "2721:83:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SupportNFT_$8225_storage",
                      "typeString": "struct NFTFactory.SupportNFT storage ref"
                    }
                  },
                  "id": 8452,
                  "nodeType": "ExpressionStatement",
                  "src": "2721:83:43"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8454,
                        "name": "erc721or1155",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8405,
                        "src": "2837:12:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC721Or1155_$8219_memory_ptr",
                          "typeString": "struct NFTFactory.ERC721Or1155 memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 8455,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2851:3:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2851:10:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 8457,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "2863:5:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 8458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2863:15:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ERC721Or1155_$8219_memory_ptr",
                          "typeString": "struct NFTFactory.ERC721Or1155 memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8453,
                      "name": "NFTSupportCreate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8253,
                      "src": "2820:16:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_ERC721Or1155_$8219_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (struct NFTFactory.ERC721Or1155 memory,address,uint256)"
                      }
                    },
                    "id": 8459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2820:59:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8460,
                  "nodeType": "EmitStatement",
                  "src": "2815:64:43"
                }
              ]
            },
            "id": 8462,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_newSupport",
            "nameLocation": "2139:11:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8377,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "2159:3:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8462,
                  "src": "2151:11:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2151:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2150:13:43"
            },
            "returnParameters": {
              "id": 8379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2172:0:43"
            },
            "scope": 8486,
            "src": "2130:756:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 8474,
              "nodeType": "Block",
              "src": "2980:33:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8471,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8464,
                        "src": "3002:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8470,
                      "name": "_newSupport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8462,
                      "src": "2990:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2990:16:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8473,
                  "nodeType": "ExpressionStatement",
                  "src": "2990:16:43"
                }
              ]
            },
            "functionSelector": "53366cd6",
            "id": 8475,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 8467,
                    "name": "GM_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6712,
                    "src": "2971:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 8468,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8466,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 64,
                  "src": "2962:8:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "2962:17:43"
              }
            ],
            "name": "newSupport",
            "nameLocation": "2931:10:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8464,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "2950:3:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8475,
                  "src": "2942:11:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8463,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2942:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2941:13:43"
            },
            "returnParameters": {
              "id": 8469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2980:0:43"
            },
            "scope": 8486,
            "src": "2922:91:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              969
            ],
            "body": {
              "id": 8484,
              "nodeType": "Block",
              "src": "3143:2:43",
              "statements": []
            },
            "id": 8485,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 8481,
                    "name": "UPGRADER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6722,
                    "src": "3124:13:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 8482,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8480,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 64,
                  "src": "3115:8:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "3115:23:43"
              }
            ],
            "name": "_authorizeUpgrade",
            "nameLocation": "3028:17:43",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8479,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3098:8:43"
            },
            "parameters": {
              "id": 8478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8477,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "3054:17:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8485,
                  "src": "3046:25:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3046:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3045:27:43"
            },
            "returnParameters": {
              "id": 8483,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3143:0:43"
            },
            "scope": 8486,
            "src": "3019:126:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 8487,
        "src": "447:2700:43",
        "usedErrors": []
      }
    ],
    "src": "32:3116:43"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/NFTFactory.sol",
    "exportedSymbols": {
      "AccessControlUpgradeable": [
        336
      ],
      "AddressUpgradeable": [
        3062
      ],
      "ContextUpgradeable": [
        3106
      ],
      "ERC165Upgradeable": [
        3489
      ],
      "ERC1967UpgradeUpgradeable": [
        807
      ],
      "IAccessControlUpgradeable": [
        409
      ],
      "IBeaconUpgradeable": [
        817
      ],
      "IERC1155": [
        3935
      ],
      "IERC165": [
        4063
      ],
      "IERC165Upgradeable": [
        3501
      ],
      "IERC721": [
        4051
      ],
      "Initializable": [
        863
      ],
      "MelandAccessRoles": [
        6761
      ],
      "NFTFactory": [
        8486
      ],
      "StorageSlotUpgradeable": [
        3240
      ],
      "StringsUpgradeable": [
        3443
      ],
      "UUPSUpgradeable": [
        974
      ]
    },
    "id": 8487,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8200,
        "literals": [
          "solidity",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:43"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "id": 8201,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8487,
        "sourceUnit": 337,
        "src": "56:81:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "id": 8202,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8487,
        "sourceUnit": 975,
        "src": "138:77:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "id": 8203,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8487,
        "sourceUnit": 864,
        "src": "216:75:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 8204,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8487,
        "sourceUnit": 4052,
        "src": "292:58:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "id": 8205,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8487,
        "sourceUnit": 3936,
        "src": "351:60:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/MelandAccessRoles.sol",
        "file": "./MelandAccessRoles.sol",
        "id": 8206,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8487,
        "sourceUnit": 6762,
        "src": "412:33:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8207,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 863,
              "src": "474:13:43"
            },
            "id": 8208,
            "nodeType": "InheritanceSpecifier",
            "src": "474:13:43"
          },
          {
            "baseName": {
              "id": 8209,
              "name": "MelandAccessRoles",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6761,
              "src": "493:17:43"
            },
            "id": 8210,
            "nodeType": "InheritanceSpecifier",
            "src": "493:17:43"
          },
          {
            "baseName": {
              "id": 8211,
              "name": "UUPSUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 974,
              "src": "516:15:43"
            },
            "id": 8212,
            "nodeType": "InheritanceSpecifier",
            "src": "516:15:43"
          }
        ],
        "canonicalName": "NFTFactory",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8486,
        "linearizedBaseContracts": [
          8486,
          974,
          807,
          6761,
          336,
          3489,
          3501,
          409,
          3106,
          863
        ],
        "name": "NFTFactory",
        "nameLocation": "456:10:43",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "NFTFactory.ERC721Or1155",
            "id": 8219,
            "members": [
              {
                "constant": false,
                "id": 8215,
                "mutability": "mutable",
                "name": "erc1155",
                "nameLocation": "577:7:43",
                "nodeType": "VariableDeclaration",
                "scope": 8219,
                "src": "568:16:43",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC1155_$3935",
                  "typeString": "contract IERC1155"
                },
                "typeName": {
                  "id": 8214,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 8213,
                    "name": "IERC1155",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3935,
                    "src": "568:8:43"
                  },
                  "referencedDeclaration": 3935,
                  "src": "568:8:43",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC1155_$3935",
                    "typeString": "contract IERC1155"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8218,
                "mutability": "mutable",
                "name": "erc721",
                "nameLocation": "602:6:43",
                "nodeType": "VariableDeclaration",
                "scope": 8219,
                "src": "594:14:43",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC721_$4051",
                  "typeString": "contract IERC721"
                },
                "typeName": {
                  "id": 8217,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 8216,
                    "name": "IERC721",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4051,
                    "src": "594:7:43"
                  },
                  "referencedDeclaration": 4051,
                  "src": "594:7:43",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$4051",
                    "typeString": "contract IERC721"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ERC721Or1155",
            "nameLocation": "545:12:43",
            "nodeType": "StructDefinition",
            "scope": 8486,
            "src": "538:77:43",
            "visibility": "public"
          },
          {
            "canonicalName": "NFTFactory.SupportNFT",
            "id": 8225,
            "members": [
              {
                "constant": false,
                "id": 8222,
                "mutability": "mutable",
                "name": "erc721or1155",
                "nameLocation": "662:12:43",
                "nodeType": "VariableDeclaration",
                "scope": 8225,
                "src": "649:25:43",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ERC721Or1155_$8219_storage_ptr",
                  "typeString": "struct NFTFactory.ERC721Or1155"
                },
                "typeName": {
                  "id": 8221,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 8220,
                    "name": "ERC721Or1155",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 8219,
                    "src": "649:12:43"
                  },
                  "referencedDeclaration": 8219,
                  "src": "649:12:43",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ERC721Or1155_$8219_storage_ptr",
                    "typeString": "struct NFTFactory.ERC721Or1155"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8224,
                "mutability": "mutable",
                "name": "support",
                "nameLocation": "689:7:43",
                "nodeType": "VariableDeclaration",
                "scope": 8225,
                "src": "684:12:43",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 8223,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "684:4:43",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "SupportNFT",
            "nameLocation": "628:10:43",
            "nodeType": "StructDefinition",
            "scope": 8486,
            "src": "621:82:43",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dca2cec9",
            "id": 8230,
            "mutability": "mutable",
            "name": "supportNFTs",
            "nameLocation": "747:11:43",
            "nodeType": "VariableDeclaration",
            "scope": 8486,
            "src": "709:49:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SupportNFT_$8225_storage_$",
              "typeString": "mapping(address => struct NFTFactory.SupportNFT)"
            },
            "typeName": {
              "id": 8229,
              "keyType": {
                "id": 8226,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "717:7:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "709:30:43",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SupportNFT_$8225_storage_$",
                "typeString": "mapping(address => struct NFTFactory.SupportNFT)"
              },
              "valueType": {
                "id": 8228,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 8227,
                  "name": "SupportNFT",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8225,
                  "src": "728:10:43"
                },
                "referencedDeclaration": 8225,
                "src": "728:10:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_SupportNFT_$8225_storage_ptr",
                  "typeString": "struct NFTFactory.SupportNFT"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c92115e4",
            "id": 8235,
            "mutability": "mutable",
            "name": "supportRFCs",
            "nameLocation": "796:11:43",
            "nodeType": "VariableDeclaration",
            "scope": 8486,
            "src": "765:42:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RFC_$8274_storage_$",
              "typeString": "mapping(address => struct NFTFactory.RFC)"
            },
            "typeName": {
              "id": 8234,
              "keyType": {
                "id": 8231,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "773:7:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "765:23:43",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RFC_$8274_storage_$",
                "typeString": "mapping(address => struct NFTFactory.RFC)"
              },
              "valueType": {
                "id": 8233,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 8232,
                  "name": "RFC",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8274,
                  "src": "784:3:43"
                },
                "referencedDeclaration": 8274,
                "src": "784:3:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RFC_$8274_storage_ptr",
                  "typeString": "struct NFTFactory.RFC"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 8244,
            "name": "NFTSupportRemove",
            "nameLocation": "820:16:43",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8238,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "859:3:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8244,
                  "src": "846:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ERC721Or1155_$8219_memory_ptr",
                    "typeString": "struct NFTFactory.ERC721Or1155"
                  },
                  "typeName": {
                    "id": 8237,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8236,
                      "name": "ERC721Or1155",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8219,
                      "src": "846:12:43"
                    },
                    "referencedDeclaration": 8219,
                    "src": "846:12:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC721Or1155_$8219_storage_ptr",
                      "typeString": "struct NFTFactory.ERC721Or1155"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8240,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "880:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8244,
                  "src": "872:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8239,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "872:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8242,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operationTime",
                  "nameLocation": "906:13:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8244,
                  "src": "898:21:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8241,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "898:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "836:89:43"
            },
            "src": "814:112:43"
          },
          {
            "anonymous": false,
            "id": 8253,
            "name": "NFTSupportCreate",
            "nameLocation": "938:16:43",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8247,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "977:3:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8253,
                  "src": "964:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ERC721Or1155_$8219_memory_ptr",
                    "typeString": "struct NFTFactory.ERC721Or1155"
                  },
                  "typeName": {
                    "id": 8246,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8245,
                      "name": "ERC721Or1155",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8219,
                      "src": "964:12:43"
                    },
                    "referencedDeclaration": 8219,
                    "src": "964:12:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC721Or1155_$8219_storage_ptr",
                      "typeString": "struct NFTFactory.ERC721Or1155"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8249,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "998:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8253,
                  "src": "990:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8248,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "990:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8251,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operationTime",
                  "nameLocation": "1024:13:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8253,
                  "src": "1016:21:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1016:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "954:89:43"
            },
            "src": "932:112:43"
          },
          {
            "anonymous": false,
            "id": 8260,
            "name": "RFCCreated",
            "nameLocation": "1056:10:43",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8255,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "1083:3:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8260,
                  "src": "1067:19:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1067:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8258,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rfc",
                  "nameLocation": "1092:3:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8260,
                  "src": "1088:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RFC_$8274_memory_ptr",
                    "typeString": "struct NFTFactory.RFC"
                  },
                  "typeName": {
                    "id": 8257,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8256,
                      "name": "RFC",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8274,
                      "src": "1088:3:43"
                    },
                    "referencedDeclaration": 8274,
                    "src": "1088:3:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RFC_$8274_storage_ptr",
                      "typeString": "struct NFTFactory.RFC"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1066:30:43"
            },
            "src": "1050:47:43"
          },
          {
            "anonymous": false,
            "id": 8267,
            "name": "RFCApproved",
            "nameLocation": "1108:11:43",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8262,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "1136:3:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8267,
                  "src": "1120:19:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8261,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1120:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8265,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rfc",
                  "nameLocation": "1145:3:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8267,
                  "src": "1141:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RFC_$8274_memory_ptr",
                    "typeString": "struct NFTFactory.RFC"
                  },
                  "typeName": {
                    "id": 8264,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8263,
                      "name": "RFC",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8274,
                      "src": "1141:3:43"
                    },
                    "referencedDeclaration": 8274,
                    "src": "1141:3:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RFC_$8274_storage_ptr",
                      "typeString": "struct NFTFactory.RFC"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1119:30:43"
            },
            "src": "1102:48:43"
          },
          {
            "canonicalName": "NFTFactory.RFC",
            "id": 8274,
            "members": [
              {
                "constant": false,
                "id": 8269,
                "mutability": "mutable",
                "name": "proposer",
                "nameLocation": "1185:8:43",
                "nodeType": "VariableDeclaration",
                "scope": 8274,
                "src": "1177:16:43",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 8268,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1177:7:43",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8271,
                "mutability": "mutable",
                "name": "proposalTime",
                "nameLocation": "1211:12:43",
                "nodeType": "VariableDeclaration",
                "scope": 8274,
                "src": "1203:20:43",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 8270,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1203:7:43",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8273,
                "mutability": "mutable",
                "name": "approved",
                "nameLocation": "1238:8:43",
                "nodeType": "VariableDeclaration",
                "scope": 8274,
                "src": "1233:13:43",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 8272,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1233:4:43",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "RFC",
            "nameLocation": "1163:3:43",
            "nodeType": "StructDefinition",
            "scope": 8486,
            "src": "1156:97:43",
            "visibility": "public"
          },
          {
            "body": {
              "id": 8285,
              "nodeType": "Block",
              "src": "1300:77:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8279,
                      "name": "__UUPSUpgradeable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 884,
                      "src": "1310:22:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 8280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1310:24:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8281,
                  "nodeType": "ExpressionStatement",
                  "src": "1310:24:43"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8282,
                      "name": "__MelandAccessRoles_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6760,
                      "src": "1344:24:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 8283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1344:26:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8284,
                  "nodeType": "ExpressionStatement",
                  "src": "1344:26:43"
                }
              ]
            },
            "functionSelector": "8129fc1c",
            "id": 8286,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8277,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8276,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 862,
                  "src": "1288:11:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "1288:11:43"
              }
            ],
            "name": "initialize",
            "nameLocation": "1268:10:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1278:2:43"
            },
            "returnParameters": {
              "id": 8278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1300:0:43"
            },
            "scope": 8486,
            "src": "1259:118:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8332,
              "nodeType": "Block",
              "src": "1563:283:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8292,
                              "name": "supportRFCs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8235,
                              "src": "1581:11:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RFC_$8274_storage_$",
                                "typeString": "mapping(address => struct NFTFactory.RFC storage ref)"
                              }
                            },
                            "id": 8294,
                            "indexExpression": {
                              "id": 8293,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8288,
                              "src": "1593:3:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1581:16:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RFC_$8274_storage",
                              "typeString": "struct NFTFactory.RFC storage ref"
                            }
                          },
                          "id": 8295,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "proposalTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8271,
                          "src": "1581:29:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 8296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1614:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1581:34:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c72656164792065786973747320524643",
                        "id": 8298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1617:20:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bffe4469dca8adabf852f8a5a9facae8a5395f7cb26ea5e49cba2209ade18e17",
                          "typeString": "literal_string \"Already exists RFC\""
                        },
                        "value": "Already exists RFC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bffe4469dca8adabf852f8a5a9facae8a5395f7cb26ea5e49cba2209ade18e17",
                          "typeString": "literal_string \"Already exists RFC\""
                        }
                      ],
                      "id": 8291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1573:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1573:65:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8300,
                  "nodeType": "ExpressionStatement",
                  "src": "1573:65:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1656:25:43",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8302,
                              "name": "supportNFTs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8230,
                              "src": "1657:11:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SupportNFT_$8225_storage_$",
                                "typeString": "mapping(address => struct NFTFactory.SupportNFT storage ref)"
                              }
                            },
                            "id": 8304,
                            "indexExpression": {
                              "id": 8303,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8288,
                              "src": "1669:3:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1657:16:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SupportNFT_$8225_storage",
                              "typeString": "struct NFTFactory.SupportNFT storage ref"
                            }
                          },
                          "id": 8305,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "support",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8224,
                          "src": "1657:24:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920737570706f7274",
                        "id": 8307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1683:17:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_acfa77d3289979f16039d26c122bf0deb5df813f9c6ac6fe4262b9165fee6d7f",
                          "typeString": "literal_string \"Already support\""
                        },
                        "value": "Already support"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_acfa77d3289979f16039d26c122bf0deb5df813f9c6ac6fe4262b9165fee6d7f",
                          "typeString": "literal_string \"Already support\""
                        }
                      ],
                      "id": 8301,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1648:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1648:53:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8309,
                  "nodeType": "ExpressionStatement",
                  "src": "1648:53:43"
                },
                {
                  "assignments": [
                    8312
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8312,
                      "mutability": "mutable",
                      "name": "rfc",
                      "nameLocation": "1723:3:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 8332,
                      "src": "1712:14:43",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RFC_$8274_memory_ptr",
                        "typeString": "struct NFTFactory.RFC"
                      },
                      "typeName": {
                        "id": 8311,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 8310,
                          "name": "RFC",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8274,
                          "src": "1712:3:43"
                        },
                        "referencedDeclaration": 8274,
                        "src": "1712:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RFC_$8274_storage_ptr",
                          "typeString": "struct NFTFactory.RFC"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8320,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 8314,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3092,
                          "src": "1733:10:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 8315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1733:12:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 8316,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "1747:5:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 8317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "1747:15:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 8318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1764:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8313,
                      "name": "RFC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8274,
                      "src": "1729:3:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_RFC_$8274_storage_ptr_$",
                        "typeString": "type(struct NFTFactory.RFC storage pointer)"
                      }
                    },
                    "id": 8319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1729:41:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RFC_$8274_memory_ptr",
                      "typeString": "struct NFTFactory.RFC memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1712:58:43"
                },
                {
                  "expression": {
                    "id": 8325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8321,
                        "name": "supportRFCs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8235,
                        "src": "1781:11:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RFC_$8274_storage_$",
                          "typeString": "mapping(address => struct NFTFactory.RFC storage ref)"
                        }
                      },
                      "id": 8323,
                      "indexExpression": {
                        "id": 8322,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8288,
                        "src": "1793:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1781:16:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RFC_$8274_storage",
                        "typeString": "struct NFTFactory.RFC storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8324,
                      "name": "rfc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8312,
                      "src": "1800:3:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RFC_$8274_memory_ptr",
                        "typeString": "struct NFTFactory.RFC memory"
                      }
                    },
                    "src": "1781:22:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RFC_$8274_storage",
                      "typeString": "struct NFTFactory.RFC storage ref"
                    }
                  },
                  "id": 8326,
                  "nodeType": "ExpressionStatement",
                  "src": "1781:22:43"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8328,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8288,
                        "src": "1830:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8329,
                        "name": "rfc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8312,
                        "src": "1835:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RFC_$8274_memory_ptr",
                          "typeString": "struct NFTFactory.RFC memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_RFC_$8274_memory_ptr",
                          "typeString": "struct NFTFactory.RFC memory"
                        }
                      ],
                      "id": 8327,
                      "name": "RFCCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8260,
                      "src": "1819:10:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_struct$_RFC_$8274_memory_ptr_$returns$__$",
                        "typeString": "function (address,struct NFTFactory.RFC memory)"
                      }
                    },
                    "id": 8330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1819:20:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8331,
                  "nodeType": "EmitStatement",
                  "src": "1814:25:43"
                }
              ]
            },
            "functionSelector": "3e350061",
            "id": 8333,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newRFC",
            "nameLocation": "1536:6:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8288,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "1551:3:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8333,
                  "src": "1543:11:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8287,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1543:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1542:13:43"
            },
            "returnParameters": {
              "id": 8290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1563:0:43"
            },
            "scope": 8486,
            "src": "1527:319:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8374,
              "nodeType": "Block",
              "src": "1892:232:43",
              "statements": [
                {
                  "assignments": [
                    8340
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8340,
                      "mutability": "mutable",
                      "name": "rfc",
                      "nameLocation": "1913:3:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 8374,
                      "src": "1902:14:43",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RFC_$8274_memory_ptr",
                        "typeString": "struct NFTFactory.RFC"
                      },
                      "typeName": {
                        "id": 8339,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 8338,
                          "name": "RFC",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8274,
                          "src": "1902:3:43"
                        },
                        "referencedDeclaration": 8274,
                        "src": "1902:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RFC_$8274_storage_ptr",
                          "typeString": "struct NFTFactory.RFC"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8344,
                  "initialValue": {
                    "baseExpression": {
                      "id": 8341,
                      "name": "supportRFCs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8235,
                      "src": "1919:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RFC_$8274_storage_$",
                        "typeString": "mapping(address => struct NFTFactory.RFC storage ref)"
                      }
                    },
                    "id": 8343,
                    "indexExpression": {
                      "id": 8342,
                      "name": "nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8335,
                      "src": "1931:3:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1919:16:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RFC_$8274_storage",
                      "typeString": "struct NFTFactory.RFC storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1902:33:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 8346,
                            "name": "rfc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8340,
                            "src": "1953:3:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RFC_$8274_memory_ptr",
                              "typeString": "struct NFTFactory.RFC memory"
                            }
                          },
                          "id": 8347,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "proposalTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8271,
                          "src": "1953:16:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 8348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1972:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1953:20:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420666f756e6420524643",
                        "id": 8350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1975:15:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_301a66c0967fe6e4cdfa01c33bb8eae28a4812dcebfebcf48c3a6b0c1b020442",
                          "typeString": "literal_string \"Not found RFC\""
                        },
                        "value": "Not found RFC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_301a66c0967fe6e4cdfa01c33bb8eae28a4812dcebfebcf48c3a6b0c1b020442",
                          "typeString": "literal_string \"Not found RFC\""
                        }
                      ],
                      "id": 8345,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1945:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1945:46:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8352,
                  "nodeType": "ExpressionStatement",
                  "src": "1945:46:43"
                },
                {
                  "expression": {
                    "id": 8357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 8353,
                        "name": "rfc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8340,
                        "src": "2001:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RFC_$8274_memory_ptr",
                          "typeString": "struct NFTFactory.RFC memory"
                        }
                      },
                      "id": 8355,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "approved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8273,
                      "src": "2001:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 8356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2016:4:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2001:19:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8358,
                  "nodeType": "ExpressionStatement",
                  "src": "2001:19:43"
                },
                {
                  "expression": {
                    "id": 8363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8359,
                        "name": "supportRFCs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8235,
                        "src": "2031:11:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RFC_$8274_storage_$",
                          "typeString": "mapping(address => struct NFTFactory.RFC storage ref)"
                        }
                      },
                      "id": 8361,
                      "indexExpression": {
                        "id": 8360,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8335,
                        "src": "2043:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2031:16:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RFC_$8274_storage",
                        "typeString": "struct NFTFactory.RFC storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8362,
                      "name": "rfc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8340,
                      "src": "2050:3:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RFC_$8274_memory_ptr",
                        "typeString": "struct NFTFactory.RFC memory"
                      }
                    },
                    "src": "2031:22:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RFC_$8274_storage",
                      "typeString": "struct NFTFactory.RFC storage ref"
                    }
                  },
                  "id": 8364,
                  "nodeType": "ExpressionStatement",
                  "src": "2031:22:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8366,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8335,
                        "src": "2076:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8365,
                      "name": "_newSupport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8462,
                      "src": "2064:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2064:16:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8368,
                  "nodeType": "ExpressionStatement",
                  "src": "2064:16:43"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8370,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8335,
                        "src": "2108:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8371,
                        "name": "rfc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8340,
                        "src": "2113:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RFC_$8274_memory_ptr",
                          "typeString": "struct NFTFactory.RFC memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_RFC_$8274_memory_ptr",
                          "typeString": "struct NFTFactory.RFC memory"
                        }
                      ],
                      "id": 8369,
                      "name": "RFCApproved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8267,
                      "src": "2096:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_struct$_RFC_$8274_memory_ptr_$returns$__$",
                        "typeString": "function (address,struct NFTFactory.RFC memory)"
                      }
                    },
                    "id": 8372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2096:21:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8373,
                  "nodeType": "EmitStatement",
                  "src": "2091:26:43"
                }
              ]
            },
            "functionSelector": "7176360e",
            "id": 8375,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveRFC",
            "nameLocation": "1861:10:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8335,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "1880:3:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8375,
                  "src": "1872:11:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8334,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1872:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1871:13:43"
            },
            "returnParameters": {
              "id": 8337,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1892:0:43"
            },
            "scope": 8486,
            "src": "1852:272:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8461,
              "nodeType": "Block",
              "src": "2172:714:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2190:25:43",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 8381,
                              "name": "supportNFTs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8230,
                              "src": "2191:11:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SupportNFT_$8225_storage_$",
                                "typeString": "mapping(address => struct NFTFactory.SupportNFT storage ref)"
                              }
                            },
                            "id": 8383,
                            "indexExpression": {
                              "id": 8382,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8377,
                              "src": "2203:3:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2191:16:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SupportNFT_$8225_storage",
                              "typeString": "struct NFTFactory.SupportNFT storage ref"
                            }
                          },
                          "id": 8384,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "support",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8224,
                          "src": "2191:24:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920737570706f72746564",
                        "id": 8386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2217:19:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e08c35cb9163791767f252d73e9cda41007ad62d558c5b5a2d721811ef48c1e",
                          "typeString": "literal_string \"Already supported\""
                        },
                        "value": "Already supported"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e08c35cb9163791767f252d73e9cda41007ad62d558c5b5a2d721811ef48c1e",
                          "typeString": "literal_string \"Already supported\""
                        }
                      ],
                      "id": 8380,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2182:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2182:55:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8388,
                  "nodeType": "ExpressionStatement",
                  "src": "2182:55:43"
                },
                {
                  "assignments": [
                    8390
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8390,
                      "mutability": "mutable",
                      "name": "erc1155Interface",
                      "nameLocation": "2255:16:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 8461,
                      "src": "2248:23:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 8389,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "2248:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8395,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 8392,
                          "name": "IERC1155",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3935,
                          "src": "2279:8:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC1155_$3935_$",
                            "typeString": "type(contract IERC1155)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_IERC1155_$3935_$",
                            "typeString": "type(contract IERC1155)"
                          }
                        ],
                        "id": 8391,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "2274:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 8393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2274:14:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$3935",
                        "typeString": "type(contract IERC1155)"
                      }
                    },
                    "id": 8394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "interfaceId",
                    "nodeType": "MemberAccess",
                    "src": "2274:26:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2248:52:43"
                },
                {
                  "assignments": [
                    8397
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8397,
                      "mutability": "mutable",
                      "name": "erc721Interface",
                      "nameLocation": "2317:15:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 8461,
                      "src": "2310:22:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 8396,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "2310:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8402,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 8399,
                          "name": "IERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4051,
                          "src": "2340:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$4051_$",
                            "typeString": "type(contract IERC721)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_IERC721_$4051_$",
                            "typeString": "type(contract IERC721)"
                          }
                        ],
                        "id": 8398,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "2335:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 8400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2335:13:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$4051",
                        "typeString": "type(contract IERC721)"
                      }
                    },
                    "id": 8401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "interfaceId",
                    "nodeType": "MemberAccess",
                    "src": "2335:25:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2310:50:43"
                },
                {
                  "assignments": [
                    8405
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8405,
                      "mutability": "mutable",
                      "name": "erc721or1155",
                      "nameLocation": "2391:12:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 8461,
                      "src": "2371:32:43",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC721Or1155_$8219_memory_ptr",
                        "typeString": "struct NFTFactory.ERC721Or1155"
                      },
                      "typeName": {
                        "id": 8404,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 8403,
                          "name": "ERC721Or1155",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8219,
                          "src": "2371:12:43"
                        },
                        "referencedDeclaration": 8219,
                        "src": "2371:12:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC721Or1155_$8219_storage_ptr",
                          "typeString": "struct NFTFactory.ERC721Or1155"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8406,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2371:32:43"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 8411,
                        "name": "erc1155Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8390,
                        "src": "2448:16:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 8408,
                            "name": "nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8377,
                            "src": "2425:3:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8407,
                          "name": "IERC165",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4063,
                          "src": "2417:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC165_$4063_$",
                            "typeString": "type(contract IERC165)"
                          }
                        },
                        "id": 8409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2417:12:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC165_$4063",
                          "typeString": "contract IERC165"
                        }
                      },
                      "id": 8410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4062,
                      "src": "2417:30:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view external returns (bool)"
                      }
                    },
                    "id": 8412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2417:48:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "arguments": [
                        {
                          "id": 8426,
                          "name": "erc721Interface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8397,
                          "src": "2569:15:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 8423,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8377,
                              "src": "2546:3:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8422,
                            "name": "IERC165",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4063,
                            "src": "2538:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC165_$4063_$",
                              "typeString": "type(contract IERC165)"
                            }
                          },
                          "id": 8424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2538:12:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC165_$4063",
                            "typeString": "contract IERC165"
                          }
                        },
                        "id": 8425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4062,
                        "src": "2538:30:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view external returns (bool)"
                        }
                      },
                      "id": 8427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2538:47:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 8441,
                      "nodeType": "Block",
                      "src": "2652:51:43",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "4e6f7420737570706f72742074797065",
                                "id": 8438,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2673:18:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_af4acf6fcb32331bd18ed3fd32c045309acfd2c550238a3157790040df3541c2",
                                  "typeString": "literal_string \"Not support type\""
                                },
                                "value": "Not support type"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_af4acf6fcb32331bd18ed3fd32c045309acfd2c550238a3157790040df3541c2",
                                  "typeString": "literal_string \"Not support type\""
                                }
                              ],
                              "id": 8437,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967277,
                                4294967277
                              ],
                              "referencedDeclaration": 4294967277,
                              "src": "2666:6:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 8439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2666:26:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 8440,
                          "nodeType": "ExpressionStatement",
                          "src": "2666:26:43"
                        }
                      ]
                    },
                    "id": 8442,
                    "nodeType": "IfStatement",
                    "src": "2534:169:43",
                    "trueBody": {
                      "id": 8436,
                      "nodeType": "Block",
                      "src": "2587:59:43",
                      "statements": [
                        {
                          "expression": {
                            "id": 8434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "id": 8428,
                                "name": "erc721or1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8405,
                                "src": "2601:12:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ERC721Or1155_$8219_memory_ptr",
                                  "typeString": "struct NFTFactory.ERC721Or1155 memory"
                                }
                              },
                              "id": 8430,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "erc721",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8218,
                              "src": "2601:19:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$4051",
                                "typeString": "contract IERC721"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 8432,
                                  "name": "nft",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8377,
                                  "src": "2631:3:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8431,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4051,
                                "src": "2623:7:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$4051_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 8433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2623:12:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$4051",
                                "typeString": "contract IERC721"
                              }
                            },
                            "src": "2601:34:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC721_$4051",
                              "typeString": "contract IERC721"
                            }
                          },
                          "id": 8435,
                          "nodeType": "ExpressionStatement",
                          "src": "2601:34:43"
                        }
                      ]
                    }
                  },
                  "id": 8443,
                  "nodeType": "IfStatement",
                  "src": "2413:290:43",
                  "trueBody": {
                    "id": 8421,
                    "nodeType": "Block",
                    "src": "2467:61:43",
                    "statements": [
                      {
                        "expression": {
                          "id": 8419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 8413,
                              "name": "erc721or1155",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8405,
                              "src": "2481:12:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC721Or1155_$8219_memory_ptr",
                                "typeString": "struct NFTFactory.ERC721Or1155 memory"
                              }
                            },
                            "id": 8415,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "erc1155",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8215,
                            "src": "2481:20:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1155_$3935",
                              "typeString": "contract IERC1155"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 8417,
                                "name": "nft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8377,
                                "src": "2513:3:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 8416,
                              "name": "IERC1155",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3935,
                              "src": "2504:8:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155_$3935_$",
                                "typeString": "type(contract IERC1155)"
                              }
                            },
                            "id": 8418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2504:13:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1155_$3935",
                              "typeString": "contract IERC1155"
                            }
                          },
                          "src": "2481:36:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC1155_$3935",
                            "typeString": "contract IERC1155"
                          }
                        },
                        "id": 8420,
                        "nodeType": "ExpressionStatement",
                        "src": "2481:36:43"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 8451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8444,
                        "name": "supportNFTs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8230,
                        "src": "2721:11:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SupportNFT_$8225_storage_$",
                          "typeString": "mapping(address => struct NFTFactory.SupportNFT storage ref)"
                        }
                      },
                      "id": 8446,
                      "indexExpression": {
                        "id": 8445,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8377,
                        "src": "2733:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2721:16:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SupportNFT_$8225_storage",
                        "typeString": "struct NFTFactory.SupportNFT storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8448,
                          "name": "erc721or1155",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8405,
                          "src": "2764:12:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC721Or1155_$8219_memory_ptr",
                            "typeString": "struct NFTFactory.ERC721Or1155 memory"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 8449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2790:4:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_ERC721Or1155_$8219_memory_ptr",
                            "typeString": "struct NFTFactory.ERC721Or1155 memory"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 8447,
                        "name": "SupportNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8225,
                        "src": "2740:10:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_SupportNFT_$8225_storage_ptr_$",
                          "typeString": "type(struct NFTFactory.SupportNFT storage pointer)"
                        }
                      },
                      "id": 8450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2740:64:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SupportNFT_$8225_memory_ptr",
                        "typeString": "struct NFTFactory.SupportNFT memory"
                      }
                    },
                    "src": "2721:83:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SupportNFT_$8225_storage",
                      "typeString": "struct NFTFactory.SupportNFT storage ref"
                    }
                  },
                  "id": 8452,
                  "nodeType": "ExpressionStatement",
                  "src": "2721:83:43"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8454,
                        "name": "erc721or1155",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8405,
                        "src": "2837:12:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC721Or1155_$8219_memory_ptr",
                          "typeString": "struct NFTFactory.ERC721Or1155 memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 8455,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2851:3:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2851:10:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 8457,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "2863:5:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 8458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2863:15:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ERC721Or1155_$8219_memory_ptr",
                          "typeString": "struct NFTFactory.ERC721Or1155 memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8453,
                      "name": "NFTSupportCreate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8253,
                      "src": "2820:16:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_ERC721Or1155_$8219_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (struct NFTFactory.ERC721Or1155 memory,address,uint256)"
                      }
                    },
                    "id": 8459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2820:59:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8460,
                  "nodeType": "EmitStatement",
                  "src": "2815:64:43"
                }
              ]
            },
            "id": 8462,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_newSupport",
            "nameLocation": "2139:11:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8377,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "2159:3:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8462,
                  "src": "2151:11:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2151:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2150:13:43"
            },
            "returnParameters": {
              "id": 8379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2172:0:43"
            },
            "scope": 8486,
            "src": "2130:756:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 8474,
              "nodeType": "Block",
              "src": "2980:33:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8471,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8464,
                        "src": "3002:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8470,
                      "name": "_newSupport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8462,
                      "src": "2990:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2990:16:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8473,
                  "nodeType": "ExpressionStatement",
                  "src": "2990:16:43"
                }
              ]
            },
            "functionSelector": "53366cd6",
            "id": 8475,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 8467,
                    "name": "GM_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6712,
                    "src": "2971:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 8468,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8466,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 64,
                  "src": "2962:8:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "2962:17:43"
              }
            ],
            "name": "newSupport",
            "nameLocation": "2931:10:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8464,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "2950:3:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8475,
                  "src": "2942:11:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8463,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2942:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2941:13:43"
            },
            "returnParameters": {
              "id": 8469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2980:0:43"
            },
            "scope": 8486,
            "src": "2922:91:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              969
            ],
            "body": {
              "id": 8484,
              "nodeType": "Block",
              "src": "3143:2:43",
              "statements": []
            },
            "id": 8485,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 8481,
                    "name": "UPGRADER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6722,
                    "src": "3124:13:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 8482,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8480,
                  "name": "onlyRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 64,
                  "src": "3115:8:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "3115:23:43"
              }
            ],
            "name": "_authorizeUpgrade",
            "nameLocation": "3028:17:43",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8479,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3098:8:43"
            },
            "parameters": {
              "id": 8478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8477,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "3054:17:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 8485,
                  "src": "3046:25:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3046:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3045:27:43"
            },
            "returnParameters": {
              "id": 8483,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3143:0:43"
            },
            "scope": 8486,
            "src": "3019:126:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 8487,
        "src": "447:2700:43",
        "usedErrors": []
      }
    ],
    "src": "32:3116:43"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-19T13:18:52.275Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "upgradeTo(address)": {
        "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
      },
      "upgradeToAndCall(address,bytes)": {
        "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}